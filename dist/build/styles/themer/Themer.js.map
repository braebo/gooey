{"version":3,"file":"Themer.js","sources":["../../../../../src/styles/themer/Themer.ts"],"sourcesContent":["import type { PrimitiveState, State } from '../../shared/state'\nimport type { ElementOrSelector } from '../../shared/select'\nimport type {\n\tVariableDefinition,\n\tThemeDefinition,\n\tExtendedVars,\n\tThemeTitle,\n\tModeColors,\n\tThemeMode,\n\tTheme,\n} from './types'\n\nimport { resolveTheme } from './resolveTheme'\nimport theme_default from './defaultTheme'\n\nimport { deepMergeOpts } from '../../shared/deepMergeOpts'\nimport { partition } from '../../shared/partition'\nimport { hexToRgb } from '../../shared/hexToRgb'\nimport { entries } from '../../shared/object'\nimport { Logger } from '../../shared/logger'\nimport { select } from '../../shared/select'\nimport { c, g, o, r } from '../../shared/l'\nimport { state } from '../../shared/state'\n\n/**\n * A JSON representation of the {@link Themer} class. Used in the\n * {@link Themer.toJSON | toJSON()} and {@link Themer.fromJSON | fromJSON()},\n * methods, and subsequently, in {@link Themer.save | save()}\n * and {@link Themer.load | load()}.\n */\nexport interface ThemerJSON {\n\tthemes: Theme[]\n\tactiveTheme: ThemeTitle\n\tmode: ThemeMode\n}\n\n/**\n * Options for the {@link Themer} class.\n */\nexport interface ThemerOptions {\n\t/**\n\t * Whether to automatically initialize the theme.\n\t * @default true\n\t */\n\tautoInit: boolean\n\t/**\n\t * Whether to persist the Themer state in localStorage.\n\t * @default true\n\t */\n\tpersistent: boolean\n\t/**\n\t * The default theme to use.\n\t * @default A theme titled 'default'.\n\t */\n\ttheme: ThemeDefinition\n\tthemes: Array<Theme>\n\tmode: ThemeMode\n\t/**\n\t * The key to store the theme in localStorage.\n\t * @default 'fractils::themer'\n\t */\n\tlocalStorageKey?: string\n\twrapper?: HTMLElement\n\t/**\n\t * Additional variables to apply to the theme.\n\t * @default {}\n\t */\n\tvars?: ExtendedVars\n}\n\n/**\n * Default {@link ThemerOptions} object.\n */\nexport const THEMER_DEFAULTS: ThemerOptions = {\n\tautoInit: true,\n\tpersistent: true,\n\ttheme: theme_default,\n\tthemes: [],\n\tmode: 'system',\n\tlocalStorageKey: 'fractils::themer',\n\tvars: {},\n}\n\n/**\n * The `Themer` class manages multiple customizable themes.  These themes\n * can be applied globally to the document, or scoped to a specific node.\n *\n * A {@link Theme} is a collection of CSS custom properties, most\n * importantly, shades / colors.  Themes can be created as JavaScript\n * objects or JSON in the form of a {@link ThemeDefinition}, which is\n * just a Partial<{@link Theme}> run through {@link resolveTheme} to\n * generate `theme.colors.dark` and `theme.colors.light` variants from\n * `theme.colors.base`.  This can be extended arbitrarily (// todo //).\n *\n * It can be used to store, retrieve, create, and apply themes. It can\n * apply themes to either the root document, or a specific node and\n * its children. Each {@link ThemeDefinition} has light and dark\n * variants (auto-generated if not specified), and the active\n * variant isdetermined by the current {@link ThemeMode},\n * which can be set to 'light', 'dark', or 'system'.\n *\n * @example\n * ```svelte\n * <script lang=\"ts\">\n * \timport { Themer } from 'fractils'\n * \timport my_theme from './themes/my_theme'\n *\n * \tconst themer = new Themer('document', {\n * \t\ttheme: my_theme,    // optional theme definition (JS object or JSON)\n * \t\tthemes: [my_theme], // optional array of themes\n * \t\tmode: 'dark',       // optional initial mode ('light', 'dark', or 'system')\n * \t})\n * </script>\n *\n * <h1>{themer.theme.title}</h1>\n * <button on:click={() => themer.mode = 'dark'}>dark mode</button>\n * <button on:click={() => themer.addTheme({...})}>add theme</button>\n * ```\n */\nexport class Themer {\n\t/**\n\t * The element to theme.\n\t */\n\tnode: HTMLElement\n\n\t/**\n\t * The currently active theme.  When `theme.set` is called, the new theme\n\t * passed in is automatically applied.\n\t */\n\ttheme: State<Theme>\n\n\t/**\n\t * All themes available to the themer.\n\t */\n\tthemes: State<Theme[]>\n\n\t/**\n\t * The title of the currently active {@link theme}.\n\t *\n\t * When {@link ThemerOptions.persistent} is `true`, this value is\n\t * saved to localStorage and used to restore the theme on page load.\n\t */\n\tactiveThemeTitle: State<ThemeTitle>\n\n\t/**\n\t * The current mode ('light', 'dark', or 'system').\n\t *\n\t * When this state value is re-assigned with `mode.set`, the current theme\n\t * is automatically updated.\n\t *\n\t * When {@link ThemerOptions.persistent} is `true`, this value is saved\n\t * to localStorage and used to restore the mode on page load.\n\t */\n\tmode: State<'light' | 'dark' | 'system'>\n\n\t/**\n\t * If provided, theme css vars will be added to the wrapper.\n\t */\n\twrapper?: HTMLElement\n\n\tprivate _initialized = false\n\tprivate _persistent: boolean\n\tprivate _key: string\n\tprivate _unsubs: Array<() => void> = []\n\tprivate _targets = new Set<HTMLElement>()\n\tprivate _log: Logger\n\n\tconstructor(\n\t\t/**\n\t\t * The element to theme.  Can be a selector, id (`#id`), a\n\t\t * DOM element, or the string literal `'document'` to use\n\t\t * the document element.\n\t\t * @default 'document'\n\t\t */\n\t\tnode: ElementOrSelector | Document | 'document' = 'document',\n\t\toptions?: Partial<ThemerOptions>,\n\t) {\n\t\tconst opts = deepMergeOpts([THEMER_DEFAULTS, options])\n\t\tthis._key = String(opts.localStorageKey)\n\n\t\tif (opts.wrapper) {\n\t\t\tthis.wrapper = opts.wrapper\n\t\t}\n\n\t\tthis.node =\n\t\t\tnode === 'document'\n\t\t\t\t? document.documentElement\n\t\t\t\t: typeof node === 'string'\n\t\t\t\t\t? select(node)[0] ?? document.documentElement\n\t\t\t\t\t: (node as HTMLElement)\n\n\t\tthis._log = new Logger(`themer ${this.node.classList[0]}`, { fg: 'DarkCyan' })\n\n\t\tthis._log.fn(g('constructor')).info({ node, opts, this: this })\n\n\t\tthis.theme = state(resolveTheme(opts.theme, opts.vars))\n\n\t\tthis.themes = state(\n\t\t\topts.themes.map(t => {\n\t\t\t\treturn resolveTheme(t, opts.vars)\n\t\t\t}),\n\t\t)\n\n\t\tthis.activeThemeTitle = state(opts.theme.title, {\n\t\t\tkey: this._key + '::activeTheme',\n\t\t})\n\n\t\tconst storedTitle = this.activeThemeTitle.value\n\t\tif (opts.theme.title !== storedTitle) {\n\t\t\tconst theme = this.themes.value.find(t => t.title === storedTitle)\n\t\t\tif (theme) this.theme.set(theme)\n\t\t}\n\n\t\tthis.mode = state(opts.mode, {\n\t\t\tkey: this._key + '::mode',\n\t\t})\n\n\t\tthis._persistent = opts.persistent ?? true\n\n\t\tthis.#addSub(this.theme, v => {\n\t\t\tthis._log.fn(o('theme.subscribe')).debug({ v, this: this })\n\t\t\tif (this._initialized) {\n\t\t\t\tthis.activeThemeTitle.set(v.title)\n\t\t\t\tthis.applyTheme()\n\t\t\t}\n\t\t})\n\n\t\tthis.#addSub(this.mode, v => {\n\t\t\tthis._log.fn(o('mode.subscribe')).debug('v', v, { this: this })\n\n\t\t\tif (typeof v === 'undefined') throw new Error('Mode is undefined.')\n\n\t\t\tif (this._initialized) this.applyTheme()\n\t\t})\n\n\t\tthis._targets.add(this.wrapper ?? this.node.parentElement ?? this.node)\n\n\t\tif (opts.autoInit) {\n\t\t\tthis.init()\n\t\t}\n\t}\n\n\t#addSub<\n\t\tS extends PrimitiveState<unknown>,\n\t\tV extends Parameters<Parameters<S['subscribe']>[0]>[0],\n\t>(state: S, cb: (v: V) => void) {\n\t\tthis._unsubs.push(state.subscribe(v => cb(v as V)))\n\t}\n\n\tinit() {\n\t\tconst themes = this.themes.value\n\t\tconst theme = this.theme.value\n\n\t\tthis._log.fn(c('init')).debug({ theme: this.theme, this: this })\n\t\tif (typeof document === 'undefined') return\n\n\t\tif (this._initialized) return this\n\t\tthis._initialized = true\n\n\t\t// Make sure the initial theme is in the themes array.\n\t\tif (!themes.find(t => t.title === theme.title)) {\n\t\t\tthis.create(theme, { overwrite: true, save: false })\n\t\t}\n\n\t\tthis.load()?.applyTheme()\n\n\t\treturn this\n\t}\n\n\t/**\n\t * The active theme's variables based on the current mode.\n\t */\n\tget modeColors(): ModeColors {\n\t\treturn this.theme.value.vars.color[this.activeMode]\n\t}\n\n\t/**\n\t * The current mode, taking into account the system preferences.\n\t */\n\tget activeMode(): 'light' | 'dark' {\n\t\tconst _mode = this.mode.value\n\t\tconst mode =\n\t\t\ttypeof _mode === 'object' && 'value' in _mode\n\t\t\t\t? (_mode as { value: 'light' | 'dark' }).value\n\t\t\t\t: _mode\n\n\t\tif (mode === 'system') {\n\t\t\treturn this.#systemPref\n\t\t}\n\n\t\treturn mode as 'light' | 'dark'\n\t}\n\n\tget #systemPref() {\n\t\tif (window.matchMedia('(prefers-color-scheme: light)').matches) {\n\t\t\treturn 'light'\n\t\t}\n\n\t\tif (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n\t\t\treturn 'dark'\n\t\t}\n\n\t\treturn 'dark'\n\t}\n\n\t/**\n\t * Adds a new theme to the Themer and optionally saves it to localStorage.\n\t */\n\tcreate = (\n\t\t/**\n\t\t * The theme to add.\n\t\t * @remarks If a theme with the same title already exists, its title\n\t\t * will be incremented with a number suffix (i.e. `my-theme (1)`).\n\t\t */\n\t\tnewTheme: Theme,\n\t\toptions?: {\n\t\t\t/**\n\t\t\t * Whether to overwrite an existing theme with the same title,\n\t\t\t * or increment the title with a number suffix.\n\t\t\t * @default false\n\t\t\t */\n\t\t\toverwrite?: boolean\n\t\t\t/**\n\t\t\t * Whether to re-save the Themer state to localStorage\n\t\t\t * after adding the new theme.  If {@link ThemerOptions.persistent}\n\t\t\t * is `false`, this option is ignored.\n\t\t\t * @default true\n\t\t\t */\n\t\t\tsave?: boolean\n\t\t},\n\t) => {\n\t\tthis._log.fn(c('addTheme')).debug({ newTheme, options, this: this })\n\n\t\tconst theme = structuredClone(newTheme)\n\n\t\tconst overwrite = options?.overwrite ?? false\n\t\tconst save = options?.save ?? true\n\n\t\tconst [dupes, existing] = partition(this.themes.value, t => t.title === theme.title)\n\t\tconst alreadyExists = dupes.length > 0\n\n\t\tif (!overwrite && alreadyExists) {\n\t\t\t// Preserve the existing theme while de-duping it.\n\t\t\texisting.push(structuredClone(dupes[0]))\n\n\t\t\t// Increment the title.\n\t\t\tlet i = 0\n\t\t\twhile (true) {\n\t\t\t\tconst newTitle = `${theme.title} (${i++})`\n\n\t\t\t\tif (!existing.some(t => t.title === newTitle)) {\n\t\t\t\t\ttheme.title = newTitle\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tif (i > 100) {\n\t\t\t\t\tthis._log.fn(c('addTheme')).debug(r('Runaway loop detected.') + ' Aborting.', {\n\t\t\t\t\t\tthis: this,\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (save) this.save()\n\n\t\treturn this\n\t}\n\n\tdelete(themeOrTitle: ThemeTitle | Theme) {\n\t\tthis._log.fn(c('deleteTheme')).debug({ themeOrTitle, this: this })\n\n\t\tconst themeTitle = typeof themeOrTitle === 'string' ? themeOrTitle : themeOrTitle.title\n\n\t\tconst themes = this.themes.value\n\n\t\tconst theme = themes.find(t => t.title === themeTitle)\n\n\t\tif (!theme) {\n\t\t\tthis._log.error('`themeTitle` not found in `themes` array.', {\n\t\t\t\tthemeTitle,\n\t\t\t\tthis: this,\n\t\t\t})\n\t\t\tthrow new Error(`Theme not found.`)\n\t\t}\n\n\t\tconst nextIndex = themes.indexOf(theme) - 1\n\n\t\tconst isActive = this.theme.value.title === themeTitle\n\n\t\tthis.themes.set(this.themes.value.filter(t => t.title !== themeTitle))\n\n\t\tif (isActive) {\n\t\t\tthis.theme.set(themes[nextIndex] ?? themes.at(-1))\n\t\t}\n\n\t\tthis.save()\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Resolves a {@link Theme} by title.\n\t */\n\tgetTheme(themeTitle: ThemeTitle) {\n\t\treturn this.themes.value.find(t => t.title === themeTitle)\n\t}\n\n\t/**\n\t * Applies the current theme to the document.\n\t */\n\tapplyTheme = (targets?: HTMLElement[]) => {\n\t\tthis._log\n\t\t\t.fn(c('applyTheme'))\n\t\t\t.debug({ theme: this.theme.value.title, targets: this._targets, this: this })\n\t\tif (!('document' in globalThis)) return\n\n\t\tconst theme = this.theme.value\n\n\t\tif (!theme) {\n\t\t\tthis._log.error('theme not found').debug({ theme, this: this })\n\t\t\tthrow new Error(`Theme not found.`)\n\t\t}\n\n\t\tthis.#applyStyleProps(theme, targets)\n\t\tthis.node.setAttribute('theme', theme.title)\n\t\tthis.node.setAttribute('mode', this.activeMode)\n\t\tthis.wrapper?.setAttribute('theme', theme.title)\n\t\tthis.wrapper?.setAttribute('mode', this.activeMode)\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Updates Themer state from JSON.\n\t */\n\tfromJSON(json: ThemerJSON) {\n\t\tconst isNewTheme = this.theme.value.title !== json.activeTheme\n\n\t\tlet theme = json.themes.find(t => t.title === json.activeTheme)\n\t\ttheme ??= this.themes.value.find(t => t.title === json.activeTheme)\n\n\t\tif (!theme) {\n\t\t\tthis._log.error('`activeTheme` not found in `themes` array.', {\n\t\t\t\tactiveTheme: json.activeTheme,\n\t\t\t\tjson,\n\t\t\t\tthis: this,\n\t\t\t})\n\t\t\tthrow new Error(`Theme not found.`)\n\t\t}\n\n\t\tthis.themes.set(json.themes)\n\t\tthis.mode.set(json.mode)\n\n\t\tif (isNewTheme) {\n\t\t\tthis.applyTheme()\n\t\t}\n\t}\n\n\t/**\n\t * Serializes the current Themer state to JSON.\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\tthemes: this.themes.value,\n\t\t\tactiveTheme: this.theme.value.title,\n\t\t\tmode: this.mode.value,\n\t\t} satisfies ThemerJSON\n\t}\n\n\t/**\n\t * Loads Themer state from localStorage.\n\t * @returns The JSON that was loaded (if found).\n\t */\n\tload = () => {\n\t\tthis._log.fn(c('load')).debug({ this: this })\n\n\t\tif (this._persistent && 'localStorage' in globalThis) {\n\t\t\tconst json = localStorage.getItem(this._key + '::themer')\n\n\t\t\tif (json) {\n\t\t\t\tthis.fromJSON(JSON.parse(json))\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Saves the current Themer state to localStorage.\n\t * @returns The JSON that was saved.\n\t */\n\tsave() {\n\t\tthis._log.fn(c('save')).debug({ this: this })\n\n\t\tif (!('localStorage' in globalThis)) return\n\t\tif (!this._persistent) return\n\n\t\tconst json = this.toJSON()\n\n\t\tconst exists = `${this._key}themer` in localStorage\n\n\t\ttry {\n\t\t\tconst identical =\n\t\t\t\texists &&\n\t\t\t\tJSON.parse(JSON.stringify(json)) ===\n\t\t\t\t\tJSON.parse(localStorage.getItem(`${this._key}themer`) || '')\n\n\t\t\tif (!identical) {\n\t\t\t\tlocalStorage.setItem(`${this._key}themer`, JSON.stringify(json))\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(r('Error') + ': Failed to save to localStorage.', { error, this: this })\n\t\t\tthrow new Error(`Failed to save to localStorage.`)\n\t\t}\n\n\t\treturn json\n\t}\n\n\t/**\n\t * Removes the current Themer state from localStorage.\n\t */\n\tclear() {\n\t\tthis._log.fn(c('clear')).debug({ this: this })\n\t\tif (!('localStorage' in globalThis)) return\n\t\tlocalStorage.removeItem(`${this._key}themer`)\n\t\tthis.themes.set([theme_default])\n\t\tthis.theme.set(theme_default)\n\t\tthis.mode.set('system')\n\t}\n\n\taddTarget(target: HTMLElement) {\n\t\tthis._targets.add(target)\n\t\tthis.applyTheme([target])\n\t}\n\n\t/**\n\t * Generates CSS custom properties from a theme config.\n\t * @param config - The theme config to generate CSS from.\n\t * @returns A string of CSS custom properties.\n\t * @internal\n\t */\n\t#applyStyleProps = (\n\t\tthemeConfig: Theme,\n\t\ttargets = this._targets as any as HTMLElement[],\n\t): void => {\n\t\tconst config = themeConfig\n\t\tthis._log.fn(c('applyStyleProps')).debug({ config, this: this })\n\n\t\tconst themeColors = config.vars.color[this.activeMode]\n\t\tif (!themeColors) {\n\t\t\tthis._log.error('`theme` not found in `config`.', {\n\t\t\t\ttheme: themeColors,\n\t\t\t\tconfig,\n\t\t\t\t'this.activeMode': this.activeMode,\n\t\t\t\tthis: this,\n\t\t\t})\n\t\t\tthrow new Error(`Theme not found.`)\n\t\t}\n\n\t\tconst allVars = new Map<string, string>()\n\n\t\tfor (const target of targets) {\n\t\t\tfor (const [key, value] of entries(config.vars)) {\n\t\t\t\tif (key === 'color') {\n\t\t\t\t\tfor (const [k, v] of [\n\t\t\t\t\t\t...entries(value.base),\n\t\t\t\t\t\t...entries(value[this.activeMode]),\n\t\t\t\t\t]) {\n\t\t\t\t\t\ttarget.style.setProperty(`--${config.prefix}-${k}`, v)\n\t\t\t\t\t\ttarget.style.setProperty(`--${config.prefix}-${k}-rgb`, hexToRgb(v))\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst x: VariableDefinition = config.vars[key]\n\n\t\t\t\t\tfor (const [mode, vars] of entries(x)) {\n\t\t\t\t\t\tif (mode === 'base') {\n\t\t\t\t\t\t\tfor (const [k, v] of entries(vars)) {\n\t\t\t\t\t\t\t\tallVars.set(k, v)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mode === this.activeMode) {\n\t\t\t\t\t\t\tfor (const [k, v] of entries(vars)) {\n\t\t\t\t\t\t\t\tallVars.set(k, v)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const [k, v] of allVars) {\n\t\t\t\ttarget.style.setProperty(`--${config.prefix}-${k}`, v)\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tfor (const unsub of this._unsubs) {\n\t\t\tunsub()\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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"}