{"version":3,"file":"logger.js","sources":["../../../../src/shared/logger.ts"],"sourcesContent":["import type { CSSColorName } from './css-colors'\n\nimport { CSS_COLORS, randomCSSColorName } from './css-colors'\nimport { r, y, gr, dim, hex } from './l'\nimport { stringify } from './stringify'\nimport { defer } from './defer'\nimport { tldr } from './tldr'\n\nexport interface LoggerOptions {\n\t/**\n\t * Whether to use the styled logger or the regular console.log.\n\t * @default true\n\t */\n\tstyled?: boolean\n\t/**\n\t * Whether to defer the log to the next idle state.  Disabled on Safari to avoid crashing.\n\t * @default true\n\t */\n\tdeferred?: boolean\n\t/**\n\t * The foreground color of the log.\n\t * @default randomColor()\n\t */\n\tfg?: CSSColorName | (string & {})\n\t/**\n\t * The background color of the log.\n\t * @default transparent\n\t */\n\tbg?: CSSColorName | (string & {})\n\t/**\n\t * Any additional CSS to apply to the log.\n\t * @default ''\n\t */\n\tcss?: string\n\t/**\n\t * Run the logger on the server.\n\t * @default false\n\t */\n\tserver?: boolean\n\t/**\n\t * Run the logger in the browser.\n\t * @default true\n\t */\n\tbrowser?: boolean\n\t/**\n\t * Whether to only run the logger in development mode.\n\t * @default true\n\t */\n\tdevOnly?: boolean\n\t/**\n\t * Print's the url of the file that called the logger.\n\t */\n\tcallsite?: boolean\n\t/**\n\t * The title of the logger.  Prepended to all logs.\n\t * @default ''\n\t */\n\ttitle?: string\n}\n\n// todo - How can we ensure the logger is stripped completely from production builds?\nconst ENABLED = true\n// // DEV &&\n// // @ts-ignore - For Vite environments.\n// (import.meta.env?.DEV || globalThis?.process?.env?.NODE_ENV === 'development') &&\n// // @ts-ignore - Killswitch.\n// import.meta?.env?.VITE_FRACTILS_LOG_LEVEL !== 'off' &&\n// // @ts-ignore - VITEST is a global variable injected by Vite.\n// !(import.meta?.env?.VITEST && !import.meta?.env?.VITE_FRACTILS_LOG_VITEST)\n\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'fatal' | 'off'\n\nexport class Logger {\n\tprivate static _BYPASS_STYLES = false\n\tprivate static _BYPASS_DEFER = true\n\n\ttitle = ''\n\toptions: LoggerOptions\n\tcolor: (str: string) => string\n\n\t#logger: (...args: any[]) => void\n\n\tconstructor(title: string, options?: LoggerOptions)\n\tconstructor(options: LoggerOptions)\n\tconstructor(titleOrOptions: string | LoggerOptions, options?: LoggerOptions) {\n\t\tif (typeof titleOrOptions === 'string') {\n\t\t\tthis.title = titleOrOptions\n\t\t\tthis.options = options ?? {}\n\t\t} else {\n\t\t\tthis.options = titleOrOptions\n\t\t\tthis.title = titleOrOptions.title ?? ''\n\t\t}\n\n\t\tconst colorname = options?.fg?.toLowerCase() ?? randomCSSColorName()\n\t\tconst fg = colorname in CSS_COLORS ? CSS_COLORS[colorname as CSSColorName] : colorname\n\n\t\tthis.color = hex(fg)\n\t\tthis.#logger = Logger.createLogger(this.title, this.options)\n\n\t\treturn this\n\t}\n\n\tget deferred() {\n\t\treturn !Logger._BYPASS_DEFER && this.options?.deferred\n\t}\n\n\t/**\n\t * Logs any args as well as any logs in the current buffer.\n\t * @param args\n\t */\n\tlog = (...args: any[]) => {\n\t\tthis.#logger(...args)\n\t}\n\n\t/**\n\t * Logs any args as well as any logs in the current buffer.\n\t * @param args\n\t */\n\tdump = (...args: any[]) => {\n\t\tif (this.buffer.length) {\n\t\t\tif (args[0].match(/ⓘ|⚠|⛔|💀/)) {\n\t\t\t\tthis.buffer.unshift(args.shift())\n\t\t\t}\n\t\t\tthis.consolidateBuffer()\n\t\t\tthis.#logger(...this.buffer, ...args)\n\t\t} else {\n\t\t\tthis.#logger(...args)\n\t\t}\n\n\t\tthis.buffer = []\n\t}\n\n\ttrace(...args: any[]) {\n\t\tconsole.trace(...args)\n\t\treturn this\n\t}\n\n\tdebug(...args: any[]) {\n\t\t// @ts-ignore\n\t\tif (import.meta?.env?.VITE_FRACTILS_LOG_LEVEL === 'debug') this.dump('🐞', ...args)\n\t\treturn this\n\t}\n\n\ti = hex('#426685')('ⓘ')\n\tinfo(...args: any[]) {\n\t\tthis.dump(this.i, ...args)\n\t\treturn this\n\t}\n\n\twarn(...args: any[]) {\n\t\tthis.dump(y('⚠'), ...args)\n\t\treturn this\n\t}\n\n\terror(...args: any[]) {\n\t\tthis.dump(r('⛔'), ...args)\n\t\treturn this\n\t}\n\n\tfatal(...args: any[]) {\n\t\tthis.dump(r('💀'), ...args)\n\t\treturn this\n\t}\n\n\tgroup(label?: string) {\n\t\tconst title = this.title + (label ? `:${label}` : '')\n\t\tif (this.deferred) {\n\t\t\tdefer(() => console.group(title))\n\t\t} else {\n\t\t\tconsole.group(title)\n\t\t}\n\t\treturn this\n\t}\n\n\tgroupCollapsed(label?: string) {\n\t\tconst title = this.title + (label ? `:${label}` : '')\n\t\tif (this.deferred) {\n\t\t\tdefer(() => console.groupCollapsed(title))\n\t\t} else {\n\t\t\tconsole.groupCollapsed(title)\n\t\t}\n\t\treturn this\n\t}\n\n\tgroupEnd() {\n\t\tif (this.deferred) {\n\t\t\tdefer(() => console.groupEnd())\n\t\t} else {\n\t\t\tconsole.groupEnd()\n\t\t}\n\t\treturn this\n\t}\n\n\tbuffer = [] as any[]\n\n\t/**\n\t * Replaces any sequentially repeating strings in the buffer with a single instance and a count.\n\t */\n\tconsolidateBuffer() {\n\t\tconst buff = new Map<string, number>()\n\n\t\tfor (const item of this.buffer) {\n\t\t\tbuff.set(item, (buff.get(item) ?? 0) + 1)\n\t\t}\n\n\t\tthis.buffer = Array.from(buff).map(([item, count]) =>\n\t\t\tcount > 1 ? `${item}x${dim(`${count}`)}` : item,\n\t\t)\n\t}\n\n\t/**\n\t * Used to display the name of a method being called and the arguments it's being called with.\n\t * @param str The name of the method being called.\n\t * @param args The arguments being passed to the method.\n\t * @returns The logger instance.\n\t *\n\t * @example\n\t * ```typescript\n\t * const log = new Logger('Foo')\n\t * const bar = (a: number) => log.fn('bar', a)\n\t * bar(1) // logs:\n\t * ⓘ Foo bar(1)\n\t * ```\n\t */\n\tfn(str: string, ...args: any[]) {\n\t\tthis.buffer.push(\n\t\t\tstr +\n\t\t\t\tgr('(') +\n\t\t\t\targs.map(a => gr(typeof a === 'object' ? stringify(a) : a)).join(', ') +\n\t\t\t\tgr(')'),\n\t\t)\n\t\treturn this\n\t}\n\n\tstatic createLogger(title: string, options?: LoggerOptions) {\n\t\tif (!ENABLED) return () => void 0\n\n\t\toptions ??= {}\n\n\t\tconst BROWSER = typeof globalThis.window !== 'undefined'\n\t\tconst SERVER = !BROWSER\n\n\t\tif (!BROWSER || options.browser === false) return () => void 0\n\t\tif (SERVER && options.server !== true) return () => void 0\n\n\t\tconst fg = options.fg || randomCSSColorName()\n\t\tconst bg = options.bg || 'transparent'\n\t\tconst css = options.css ?? ''\n\n\t\toptions.styled ??= true\n\t\tconst styled = options.styled && !Logger._BYPASS_STYLES\n\n\t\toptions.deferred ??= true\n\t\tconst deferred =\n\t\t\toptions.deferred &&\n\t\t\t!Logger._BYPASS_DEFER &&\n\t\t\t/^((?!chrome|android).)*safari/i.test(navigator.userAgent) // Safari explosed from requestIdleCallback\n\n\t\tlet callsite: URL | undefined = undefined\n\n\t\tlet messageConfigBase = '%c%s%c'\n\n\t\t// This is my smelly attempt to dim trailing title\n\t\t// parts and separate the rest onto a newline.\n\t\tconst [t, ...rest] = title.split(' ')\n\t\tlet restParts = [] as string[]\n\t\tif (rest.length) {\n\t\t\tfor (const part of rest) {\n\t\t\t\trestParts.push(\n\t\t\t\t\t`color:#666;background:${bg};padding:0.1rem;filter:saturate(0.25);${css}`,\n\t\t\t\t\t` ${part}`,\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst i = restParts.indexOf(restParts.at(-1) ?? '')\n\t\t\tif (i >= 0) {\n\t\t\t\trestParts[i] = `${restParts[i]}\\n`\n\t\t\t}\n\t\t\tmessageConfigBase = '%c%s'.repeat(rest.length) + `${messageConfigBase}`\n\t\t\ttitle = t\n\t\t} else {\n\t\t\ttitle = `${title}\\n`\n\t\t}\n\n\t\tconst log = !styled\n\t\t\t? (...args: any[]) => {\n\t\t\t\t\tconsole.log(`| ${callsite} |\\n| ${title} |`, ...args)\n\t\t\t\t}\n\t\t\t: (...args: any[]) => {\n\t\t\t\t\tlet messageConfig = messageConfigBase\n\n\t\t\t\t\targs.forEach(argument => {\n\t\t\t\t\t\tconst type = typeof argument\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase 'bigint':\n\t\t\t\t\t\t\tcase 'number':\n\t\t\t\t\t\t\t\tmessageConfig += '%d '\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\tcase 'string':\n\t\t\t\t\t\t\t\tmessageConfig += '%s '\n\t\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\t\tcase 'object':\n\t\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tcase 'undefined':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tmessageConfig += '%o '\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tmessageConfig + '%c%s',\n\t\t\t\t\t\t`color:${fg};background:${bg};padding:0.1rem;${css}`,\n\t\t\t\t\t\t`${title}`,\n\t\t\t\t\t\t...restParts,\n\t\t\t\t\t\t`color:initial;background:${bg};padding:0.1rem;${css}`,\n\t\t\t\t\t\t...args.map(a =>\n\t\t\t\t\t\t\t// Testing console goes nuts with large objects, so we tldr them.\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\timport.meta?.env?.VITEST ? tldr(a, { maxDepth: 1, maxSiblings: 1 }) : a,\n\t\t\t\t\t\t),\n\t\t\t\t\t\t`color:#666;background:${bg};padding:0.1rem;${css};font-size:0.66rem;`,\n\t\t\t\t\t\toptions?.callsite ? `${callsite}` : '',\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\tif (!deferred) return log\n\n\t\treturn (...args: any[]) => defer(() => log(...args))\n\t}\n}\n\nexport const logger = (title = 'LOG', options?: LoggerOptions) => {\n\treturn Logger.createLogger(title, options)\n}\n"],"names":[],"mappings":"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"}