{"version":3,"file":"resolveOpts.js","sources":["../../../../src/shared/resolveOpts.ts"],"sourcesContent":["import { deepMergeOpts } from './deepMergeOpts'\n\nexport type MaybeBooleanOrT<T> = T | boolean\n\n/**\n * - If {@link maybeT} is `undefined`, returns {@link tDefaults}.\n * - If {@link maybeT} is `true`, returns {@link tDefaults}.\n * - If {@link maybeT} is `false`, returns `false`.\n * - If {@link maybeT} is an object, it's returned merged with {@link tDefaults}.\n * @param maybeT The provided options or a boolean value.\n * @param tDefaults The fallback options to use if {@link maybeT} is `true`.  If\n * {@link maybeT} is an object, it will be merged with these defaults.\n */\nexport function resolveOpts<T extends {}>(\n\tmaybeT: MaybeBooleanOrT<Partial<T>> | undefined,\n\ttDefaults: T,\n): T | false {\n\tif (typeof maybeT === 'undefined') {\n\t\treturn tDefaults\n\t}\n\n\tif (maybeT === true) {\n\t\treturn tDefaults\n\t}\n\n\tif (maybeT === false) {\n\t\treturn false\n\t}\n\n\tif (typeof maybeT === 'object') {\n\t\treturn deepMergeOpts([tDefaults, maybeT], { concatArrays: false })\n\t}\n\n\treturn maybeT\n}\n"],"names":[],"mappings":";;AAIA;;;;;;;;AAQG;AACa,SAAA,WAAW,CAC1B,MAA+C,EAC/C,SAAY,EAAA;AAEZ,IAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAClC,QAAA,OAAO,SAAS,CAAA;KAChB;AAED,IAAA,IAAI,MAAM,KAAK,IAAI,EAAE;AACpB,QAAA,OAAO,SAAS,CAAA;KAChB;AAED,IAAA,IAAI,MAAM,KAAK,KAAK,EAAE;AACrB,QAAA,OAAO,KAAK,CAAA;KACZ;AAED,IAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC/B,QAAA,OAAO,aAAa,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAA;KAClE;AAED,IAAA,OAAO,MAAM,CAAA;AACd;;;;"}