{"version":3,"file":"place.js","sources":["../../../../src/shared/place.ts"],"sourcesContent":["import { select, type ElementOrSelector } from './select'\n\nexport type Placement = 'center' | `${TBC}-${LRC}` | `${LRC}-${TBC}`\n\ntype LeftRight = 'left' | 'right'\ntype LRC = LeftRight | 'center'\n\ntype TopBottom = 'top' | 'bottom'\ntype TBC = TopBottom | 'center'\n\ntype VirtualRect = Record<string, any> & {\n\tx: number\n\ty: number\n\twidth: number\n\theight: number\n}\n\nexport const PLACEMENTS = [\n\t'center',\n\t'center-center',\n\t'center-left',\n\t'center-right',\n\t'top-center',\n\t'top-left',\n\t'top-right',\n\t'bottom-center',\n\t'bottom-left',\n\t'bottom-right',\n\t'center-top',\n\t'center-bottom',\n\t'left-center',\n\t'left-top',\n\t'left-bottom',\n\t'right-center',\n\t'right-top',\n\t'right-bottom',\n] as const satisfies Placement[]\n\nexport type PlacementOptions = Parameters<typeof place>[2]\n\n/**\n * Determines the x and y position of an element relative to\n * a bounding box based on a given {@link Placement} string.\n * Optional {@link PlacementOptions} can be provided to specify\n * the bounding box and a margin.\n *\n * @param node - The element to place.\n * @param placement - The {@link Placement} string.\n * @param options - The {@link PlacementOptions}.\n * @param options.bounds - The bounding box to place the element within.\n * @param options.margin - The margin in pixels to apply to the placement.\n *\n * @example\n * ```ts\n * const { x, y } = place(node, 'top-right', { bounds: window, margin: 10 })\n * ```\n */\nexport function place(\n\tnode:\n\t\t| DOMRect\n\t\t| VirtualRect\n\t\t| (Record<string, any> & { width: number; height: number })\n\t\t| ElementOrSelector,\n\tplacement = 'top-right',\n\toptions?: {\n\t\t/**\n\t\t * The bounding box to place the element within.  Can be a\n\t\t * DOMRect, custom {@link VirtualRect}, or `'window'`.\n\t\t * @default 'window'\n\t\t */\n\t\tbounds?: DOMRect | VirtualRect | 'window' | ElementOrSelector\n\t\t/**\n\t\t * The margin in pixels to apply to the placement.  Can be a number\n\t\t * to apply the same margin to both x and y, or an object with x\n\t\t * and y properties to apply different margins to each axis.\n\t\t * @default 0\n\t\t */\n\t\tmargin?: number | Partial<{ x: number; y: number }>\n\t\t/**\n\t\t * The offset in pixels to apply to the placement.\n\t\t * @default { x: 0, y: 0 }\n\t\t */\n\t\toffset?: { x?: number; y?: number }\n\t},\n): { x: number; y: number } {\n\tconst { bounds, margin, offset } = Object.assign(\n\t\t{\n\t\t\tbounds: undefined as VirtualRect | undefined,\n\t\t\tmargin: 10 as number | Partial<{ x: number; y: number }>,\n\t\t\toffset: { x: 0, y: 0 },\n\t\t},\n\t\toptions,\n\t)\n\n\tconst rect =\n\t\ttypeof node === 'string'\n\t\t\t? select(node)[0]?.getBoundingClientRect()\n\t\t\t: node instanceof Element\n\t\t\t\t? node.getBoundingClientRect()\n\t\t\t\t: node\n\n\tif (!rect) throw new Error('Invalid node: ' + node)\n\n\tconst b =\n\t\tbounds === 'window' && typeof window !== 'undefined'\n\t\t\t? { x: 0, y: 0, width: window.innerWidth, height: window.innerHeight }\n\t\t\t: typeof bounds === 'string'\n\t\t\t\t? select(bounds)[0]?.getBoundingClientRect()\n\t\t\t\t: (bounds ?? { x: 0, y: 0, width: 100, height: 100 })\n\n\tif (!b) throw new Error('Invalid bounds: ' + bounds)\n\n\tconst m: { x: number; y: number } =\n\t\ttypeof margin === 'number'\n\t\t\t? { x: margin, y: margin }\n\t\t\t: Object.assign({ x: 0, y: 0 }, margin)\n\n\tconst position = resolvePosition()\n\n\tif (offset.x) position.x += offset.x\n\tif (offset.y) position.y += offset.y\n\n\treturn position\n\n\tfunction resolvePosition() {\n\t\t// prettier-ignore\n\t\tswitch (placement) {\n\t\t\tcase ('center'):\n\t\t\tcase ('center-center'): return { x: b.width / 2 - rect!.width / 2, y: b.height / 2 - rect!.height / 2 }\n\t\t\tcase ('top-left'):\n\t\t\tcase ('left-top'): return { x: m.x, y: m.y }\n\t\t\tcase ('top-center'):\n\t\t\tcase ('center-top'): return { x: b.width / 2 - rect!.width / 2, y: m.y }\n\t\t\tcase ('top-right'):\n\t\t\tcase ('right-top'): return { x: b.width - rect!.width - m.x, y: m.y }\n\t\t\tcase ('bottom-left'):\n\t\t\tcase ('left-bottom'): return { x: m.x, y: b.height - rect!.height - m.y }\n\t\t\tcase ('bottom-center'):\n\t\t\tcase ('center-bottom'): return { x: b.width / 2 - rect!.width / 2, y: b.height - rect!.height - m.y }\n\t\t\tcase ('bottom-right'):\n\t\t\tcase ('right-bottom'): return { x: b.width - rect!.width - m.x, y: b.height - rect!.height - m.y }\n\t\t\tcase ('left-center'):\n\t\t\tcase ('center-left'): return { x: m.x, y: b.height / 2 - rect!.height / 2 }\n\t\t\tcase ('right-center'):\n\t\t\tcase ('center-right'): return { x: b.width - rect!.width - m.x, y: b.height / 2 - rect!.height / 2 }\n\t\t\tdefault: throw new Error('Invalid placement: ' + placement)\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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"}