{"version":3,"file":"draggable.js","sources":["../../../../src/shared/draggable.ts"],"sourcesContent":["import type { ElementOrSelector, ElementsOrSelectors } from './select'\nimport type { Placement, PlacementOptions } from './place'\n\nimport { isDefined, isHTMLElement, isString } from './is'\nimport { writable, type Writable } from './store'\nimport { EventManager } from './EventManager'\nimport { persist } from './persist'\nimport { select } from './select'\nimport { Logger } from './logger'\nimport { place } from './place'\nimport { clamp } from './clamp'\nimport { DEV } from 'esm-env'\n\n/**\n * Represents a dom element's bounding rectangle.\n */\nexport interface VirtualRect {\n\tleft: number\n\ttop: number\n\tright: number\n\tbottom: number\n}\n\nexport type DraggablePlacementOptions = PlacementOptions & {\n\t/**\n\t * The position to place the gooey.\n\t */\n\tposition: Placement | { x: number; y: number }\n}\n\n/**\n * Data passed to listeners of the {@link DraggableOptions.onDragStart|onDragStart},\n * {@link DraggableOptions.onDrag|onDrag}, {@link DraggableOptions.onDragEnd|onDragEnd}, and\n * {@link DraggableOptions.onCollision|onCollision} events.\n */\nexport type DragEventData = {\n\t/**\n\t * The node on which the draggable is applied\n\t */\n\trootNode: HTMLElement\n\t/**\n\t * Total horizontal movement from the node's original position.\n\t */\n\tx: number\n\t/**\n\t * Total vertical movement from the node's original position.\n\t */\n\ty: number\n\t/**\n\t * The complete event object.\n\t */\n\teventTarget: EventTarget\n}\n\nexport type DraggableOptions = {\n\t__type?: 'DraggableOptions'\n\t/**\n\t * The boundary to which the draggable element is limited to.\n\t *\n\t * Valid values:\n\t *\n\t * - `undefined` - defaults to `document.documentElement`\n\t * - An `HTMLElement` or query selector string, _i.e. `.container` or `#container`_\n\t * - `'parent'` - the element's {@link HTMLElement.offsetParent|offsetParent}\n\t * - `'body'` - `document.body`\n\t * - `false` - no boundary\n\t * - `{ top: number, right: number, bottom: number, left: number }` - A custom {@link VirtualRect rect} relative to the viewport.\n\t *\n\t * **Note**: Make sure the bounds is smaller than the node's min size.\n\t * @default undefined\n\t */\n\tbounds?: ElementOrSelector\n\n\t/**\n\t * Axis on which the element can be dragged on.\n\t * - `both` - Element can move in any direction\n\t * - `x` - Only horizontal movement possible\n\t * - `y` - Only vertical movement possible\n\t * - `none` - No movement at all\n\t * @default 'both'\n\t */\n\taxis: 'both' | 'x' | 'y' | 'none'\n\n\t/**\n\t * Custom transform function. If provided, this function will be used to\n\t * apply the DOM transformations to the root node to move it.\n\t *\n\t * You can return a {@link https://developer.mozilla.org/docs/Web/CSS/transform | transform} property\n\t * return nothing to apply your own transformations via\n\t * {@link https://developer.mozilla.org/docs/Web/CSS/transform | node.style.transform}\n\t * @default undefined\n\t */\n\ttransform?: (data: DragEventData) => { x: number; y: number } | void | undefined\n\n\t/**\n\t * Applies `user-select: none` to the `<body />` element when dragging. `false` disables it.\n\t * @default true\n\t */\n\tuserSelectNone: boolean\n\n\t/**\n\t * Ignore touch events with more than 1 touch. Helpful for preserving pinch-to-zoom behavior on a pages with multiple draggable's.\n\t * @default false\n\t */\n\tignoreMultitouch: boolean\n\n\t/**\n\t * Disables dragging altogether.\n\t * @default false\n\t */\n\tdisabled: boolean\n\n\t/**\n\t * The default position of the draggable element.\n\t * @default { x: 0, y: 0 }\n\t */\n\tposition?: { x?: number; y?: number } | Placement\n\n\t/**\n\t * The margin in pixels to apply to the initial position.\n\t * @default 0\n\t */\n\tmargin: number | { x: number; y: number }\n\n\t/**\n\t * An element or selector (or any combination of the two) for element(s) inside\n\t * the parent node upon which dragging should be disabled when clicked.\n\t * @default undefined\n\t */\n\tcancel: ElementsOrSelectors\n\n\t/**\n\t * CSS Selector of an element or multiple elements inside the parent node on\n\t * which `use:draggable` is applied).  If provided, only clicking and dragging\n\t * handles will activate dragging.\n\t *\n\t * @default undefined\n\t */\n\thandle: ElementsOrSelectors\n\n\t/**\n\t * Element's or selectors which will act as collision obstacles for the draggable element.\n\t */\n\tobstacles: ElementsOrSelectors\n\n\tclasses: {\n\t\t/**\n\t\t * Class to apply on the element on which `use:draggable` is applied.\n\t\t *\n\t\t * __Note:__ If `handle` is provided, this class will still be applied\n\t\t * to the draggable element itself, __NOT__ the handle element.\n\t\t * @default 'fractils-draggable'\n\t\t */\n\t\tdefault: string\n\t\t/**\n\t\t * Class to apply on the element when it is dragging.\n\t\t * @default 'fractils-dragging'\n\t\t */\n\t\tdragging: string\n\t\t/**\n\t\t * Class to apply on the element if it has been dragged at least once.\n\t\t * @default 'fractils-dragged'\n\t\t */\n\t\tdragged: string\n\t\t/**\n\t\t * Elements with this class will disable dragging when clicked.\n\t\t * @default 'fractils-cancel'\n\t\t */\n\t\tcancel: string\n\t}\n\n\t/**\n\t * Fires on `pointerdown` for the element / valid handle elements.\n\t */\n\tonDragStart: (data: DragEventData) => void\n\n\t/**\n\t * Fires on `pointermove` while dragging.\n\t */\n\tonDrag: (data: DragEventData) => void\n\n\t/**\n\t * Fires on `pointerup`.\n\t */\n\tonDragEnd: (data: DragEventData) => void\n\n\t/**\n\t * Fires when the element collides with an obstacle.\n\t */\n\tonCollision: (data: { x: number; y: number }) => void\n\n\t/**\n\t * If provided, the position will persist in local storage under this key.\n\t * @default undefined\n\t */\n\tlocalStorageKey?: string\n}\n\nconst DEFAULT_CLASSES = {\n\tdefault: 'fractils-draggable',\n\tdragging: 'fractils-dragging',\n\tdragged: 'fractils-dragged',\n\tcancel: 'fractils-cancel',\n} as const\n\nexport const DRAGGABLE_DEFAULTS: DraggableOptions = {\n\t__type: 'DraggableOptions',\n\tbounds: 'body',\n\taxis: 'both',\n\tuserSelectNone: true,\n\tignoreMultitouch: false,\n\tdisabled: false,\n\tposition: { x: 0, y: 0 },\n\tmargin: 0,\n\tcancel: undefined,\n\thandle: undefined,\n\tobstacles: undefined,\n\tclasses: DEFAULT_CLASSES,\n\tonDragStart: () => {},\n\tonDrag: () => {},\n\tonDragEnd: () => {},\n\tonCollision: () => {},\n\ttransform: undefined,\n\tlocalStorageKey: undefined,\n} as const\n\n/**\n * Make an element draggable.  Supports touch, mouse, and pointer events,\n * and has options for bounds / obstacle collision detection, programatic\n * position control, custom transforms, and more.\n *\n * @example\n * ```js\n * import { Draggable } from 'fractils'\n *\n * const element = document.createElement('div')\n *\n * const draggable = new Draggable(element, {\n * \tbounds: 'body'\n * })\n * ```\n */\nexport class Draggable {\n\tstatic initialized = false\n\topts: DraggableOptions & { margin: { x: number; y: number } }\n\n\t/**\n\t * Disables user interaction with the draggable element.\n\t */\n\tdisabled = false\n\n\t/**\n\t * Used in  {@link update} to account for the difference between\n\t * the node's position and the user's exact click position on the node.\n\t */\n\tclickOffset = { x: 0, y: 0 }\n\n\t/**\n\t * The distance between the pointer's position and the node's position.\n\t */\n\tclientToNodeOffset = {\n\t\tx: 0,\n\t\ty: 0,\n\t}\n\n\tboundsEl?: HTMLElement\n\thandleEls: HTMLElement[]\n\tcancelEls: HTMLElement[]\n\tobstacleEls: HTMLElement[]\n\n\t/**\n\t * A rectangle representing the draggable element's boundary, if any.\n\t */\n\tbounds = {\n\t\tleft: -Infinity,\n\t\ttop: -Infinity,\n\t\tright: Infinity,\n\t\tbottom: Infinity,\n\t} satisfies VirtualRect\n\n\tprivate _storage?: ReturnType<typeof persist<{ x: number; y: number }>>\n\tprivate _position = { x: 0, y: 0 }\n\n\t/**\n\t * An observable store that updates the draggable element's position.\n\t */\n\tpositionStore: Writable<{ x: number; y: number }>\n\n\t/**\n\t * @todo I think we can just remove this and let the user add their\n\t * own event listeners if they want to target a specific element.\n\t */\n\teventTarget?: HTMLElement\n\n\t/**\n\t * Whether the draggable element is currently being dragged.\n\t */\n\tprivate _active = false\n\n\t/**\n\t * The original value of `user-select` on the body element\n\t * used to restore the original value after dragging when\n\t * {@link DraggableOptions.userSelectNone|userSelectNone} is `true`.\n\t */\n\tprivate _bodyOriginalUserSelectVal = ''\n\n\t/**\n\t * Updates the {@link bounds} property to account for any changes in the\n\t * DOM or this instance's {@link DraggableOptions.bounds|bounds} option.\n\t */\n\tprivate _recomputeBounds: () => void\n\n\t/**\n\t * This node's DOMRect, cached for use via {@link rect}.\n\t */\n\tprivate _rect: DOMRect\n\n\t/**\n\t * The {@link EventManager} for this draggable instance.\n\t */\n\tprivate _evm = new EventManager()\n\n\t/**\n\t * A callback to release the pointer capture using the\n\t * {@link PointerEvent.pointerId | pointerId} and reset the cursor.\n\t */\n\tprivate _releaseCapture = () => {}\n\n\t/**\n\t * Internal logger for infoging. Automatically bypassed in non-dev environments.\n\t */\n\tprivate _log: Logger\n\n\tconstructor(\n\t\tpublic node: HTMLElement,\n\t\toptions?: Partial<DraggableOptions>,\n\t) {\n\t\tconst { margin } = options ?? DRAGGABLE_DEFAULTS\n\t\tconst m: { x: number; y: number } =\n\t\t\ttypeof margin === 'number'\n\t\t\t\t? { x: margin, y: margin }\n\t\t\t\t: Object.assign({ x: 0, y: 0 }, margin)\n\n\t\tthis.opts = Object.assign({}, DRAGGABLE_DEFAULTS, options, { margin: m })\n\n\t\tthis._log = new Logger('draggable ' + Array.from(this.node.classList).join('.'), {\n\t\t\tfg: 'SkyBlue',\n\t\t})\n\t\tthis._log.fn('constructor').info({ opts: this.opts, this: this })\n\n\t\tthis._rect = this.node.getBoundingClientRect()\n\t\tthis._recomputeBounds = this._resolveBounds(this.opts.bounds)\n\n\t\tthis.opts.position = this.resolvePosition(this.opts.position)\n\t\tthis.positionStore = writable(this.opts.position as { x: number; y: number })\n\n\t\tthis.node.classList.add(this.opts.classes.default)\n\n\t\tconst startPosition = this.opts.position as { x: number; y: number }\n\n\t\t// Setup local storage if the key is provided.\n\t\tif (options?.localStorageKey) {\n\t\t\tthis._storage = persist(options.localStorageKey, startPosition)\n\t\t\tconst storagePostion = this._storage.get()\n\t\t\tif (storagePostion) {\n\t\t\t\tstartPosition.x = storagePostion.x\n\t\t\t\tstartPosition.y = storagePostion.y\n\t\t\t}\n\t\t}\n\n\t\tthis.x = startPosition.x\n\t\tthis.y = startPosition.y\n\n\t\t// Prevents mobile touch-event jank.\n\t\tthis.node.style.setProperty('touch-action', 'none')\n\n\t\tthis.handleEls = this.opts.handle ? select(this.opts.handle, this.node) : [this.node]\n\t\tthis.cancelEls = select(this.opts.cancel, this.node)\n\t\tthis.obstacleEls = select(this.opts.obstacles)\n\n\t\tthis._evm.listen(this.node, 'pointerdown', this.dragStart)\n\t\tthis._evm.listen(window, 'pointerup', this.dragEnd)\n\t\tthis._evm.listen(window, 'pointermove', this.drag)\n\t\tthis._evm.listen(window, 'resize', this.resize)\n\t\tthis._evm.add(\n\t\t\tthis.positionStore.subscribe(({ x, y }) => {\n\t\t\t\tthis.node.style.setProperty('translate', `${x}px ${y}px 1px`)\n\t\t\t}),\n\t\t)\n\n\t\tif (startPosition !== DRAGGABLE_DEFAULTS.position) {\n\t\t\tthis._recomputeBounds()\n\t\t\tthis._position = { x: this.x, y: this.y }\n\t\t\tthis.moveTo(startPosition)\n\t\t}\n\t}\n\n\t/**\n\t * Programmatically sets the position of the draggable element.\n\t */\n\tget position() {\n\t\treturn this._position\n\t}\n\tset position(v) {\n\t\tthis._position = v\n\t\tthis.moveTo(v)\n\t\tthis.updateLocalStorage()\n\t}\n\n\t/**\n\t * The x position of the draggable element's transform offset.\n\t */\n\tget x() {\n\t\treturn +this.node.dataset['translateX']! || 0\n\t}\n\tset x(v: number) {\n\t\tthis.node.dataset['translateX'] = String(v)\n\t}\n\n\t/**\n\t * The y position of the draggable element's transform offset.\n\t */\n\tget y() {\n\t\treturn +this.node.dataset['translateY']! || 0\n\t}\n\tset y(v: number) {\n\t\tthis.node.dataset['translateY'] = String(v)\n\t}\n\n\t/**\n\t * Whether the draggable element can move in the x direction,\n\t * based on the {@link DraggableOptions.axis|axis} option.\n\t */\n\tget canMoveX() {\n\t\treturn /(both|x)/.test(this.opts.axis)\n\t}\n\t/**\n\t * Whether the draggable element can move in the x direction,\n\t * based on the {@link DraggableOptions.axis|axis} option.\n\t */\n\tget canMoveY() {\n\t\treturn /(both|y)/.test(this.opts.axis)\n\t}\n\n\tget eventData(): DragEventData {\n\t\treturn {\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\trootNode: this.node,\n\t\t\teventTarget: this.eventTarget!,\n\t\t}\n\t}\n\n\tget isControlled() {\n\t\treturn !!this.opts.position\n\t}\n\n\tdragStart = (e: PointerEvent) => {\n\t\tif (this.disabled) return\n\t\t// Ignore right-clicks.\n\t\tif (e.button === 2) return\n\n\t\tif (this.opts.ignoreMultitouch && !e.isPrimary) return\n\t\t// Abort if a cancel element was clicked.\n\t\tif (\n\t\t\te\n\t\t\t\t.composedPath()\n\t\t\t\t.some(n => (n as HTMLElement).classList?.contains(this.opts.classes.cancel))\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// Refresh the obstacles.\n\t\tthis.obstacleEls = select(this.opts.obstacles)\n\n\t\tif (DEV) {\n\t\t\tfor (const el of this.obstacleEls) {\n\t\t\t\tel.dataset['outline'] = el.style.outline\n\t\t\t\tel.style.outline = '2px dotted #f007'\n\t\t\t}\n\t\t}\n\n\t\t// Error handling.\n\t\tif (\n\t\t\tisString(this.opts.handle) &&\n\t\t\tisString(this.opts.cancel) &&\n\t\t\tthis.opts.handle === this.opts.cancel\n\t\t) {\n\t\t\tthrow new Error(\"`handle` selector can't be same as `cancel` selector\")\n\t\t}\n\n\t\t// Resolve the event target.\n\n\t\tif (this._cancelElementContains(this.handleEls)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Element being dragged can't be a child of the element on which `cancel` is applied\",\n\t\t\t)\n\t\t}\n\n\t\tconst eventTarget = e.composedPath()[0] as HTMLElement\n\n\t\t// Return if the event target is not a handle element.\n\t\tif (\n\t\t\t!this.handleEls.some(\n\t\t\t\te => e.contains(eventTarget) || e.shadowRoot?.contains(eventTarget),\n\t\t\t)\n\t\t)\n\t\t\treturn\n\n\t\t// Make sure it's not a cancel element.\n\t\tif (this._cancelElementContains([eventTarget])) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._log.fn('dragStart').debug('Dragging initiated.')\n\t\te.stopPropagation()\n\n\t\t// Resolve the event target.\n\t\tthis.eventTarget =\n\t\t\tthis.handleEls.length === 1\n\t\t\t\t? this.node\n\t\t\t\t: this.handleEls.find(el => el.contains(eventTarget))!\n\n\t\tthis._active = true\n\n\t\t// Store the click offset\n\t\tif (this.canMoveX) this.clickOffset.x = e.clientX - this.x\n\t\tif (this.canMoveY) this.clickOffset.y = e.clientY - this.y\n\n\t\t// Update the virtual rectangle.\n\t\t// const { top, right, bottom, left } = this.node.getBoundingClientRect()\n\t\t// this.rect = { top, right, bottom, left }\n\t\tthis._updateRect()\n\n\t\t// Update the clientToNodeOffset.\n\t\tif (this.bounds) {\n\t\t\tthis.clientToNodeOffset = {\n\t\t\t\tx: e.clientX - this.rect.left,\n\t\t\t\ty: e.clientY - this.rect.top,\n\t\t\t}\n\t\t}\n\n\t\t// Set the initial position (with a forced duration of 0).\n\t\tthis.positionStore.set({ x: this.x, y: this.y })\n\t\t// Update the bounds rect.\n\t\tthis._recomputeBounds()\n\t\t// this.#updateBounds()\n\n\t\tthis.node.dispatchEvent(new CustomEvent('grab'))\n\n\t\t// Capture the pointer and store the release callback.\n\t\tconst { cursor } = getComputedStyle(this.node)\n\t\tthis.node.setPointerCapture(e.pointerId)\n\t\tthis.node.style.cursor = 'grabbing'\n\t\tthis._releaseCapture = () => {\n\t\t\t// this.node.releasePointerCapture(e.pointerId)\n\t\t\tthis.node.style.cursor = cursor\n\t\t}\n\n\t\t// Dispatch custom events\n\t\tthis._emitDragStart()\n\t\tthis._emitUpdate()\n\t}\n\n\t/**\n\t * This target node's cached {@link DOMRect}\n\t */\n\tget rect() {\n\t\treturn this._rect\n\t}\n\n\tprivate _updateRect() {\n\t\tthis._rect = this.node.getBoundingClientRect()\n\t}\n\n\tdrag = (e: PointerEvent) => {\n\t\tif (!this._active) return\n\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\n\t\t// Apply dragging and dragged classes.\n\t\tthis.node.classList.add(this.opts.classes.dragging)\n\t\tthis.node.classList.add(this.opts.classes.dragged)\n\n\t\tconst x = e.clientX - this.clickOffset.x\n\t\tconst y = e.clientY - this.clickOffset.y\n\t\tconst target = { x, y }\n\t\tthis.moveTo(target)\n\n\t\tthis._emitDrag()\n\t}\n\n\tdragEnd = () => {\n\t\tif (!this._active) return\n\n\t\tthis.node.classList.remove(this.opts.classes.dragging)\n\n\t\tif (this.opts.userSelectNone) {\n\t\t\tdocument.body.style.userSelect = this._bodyOriginalUserSelectVal\n\t\t}\n\n\t\tthis.clickOffset = { x: 0, y: 0 }\n\t\tthis.clientToNodeOffset = { x: 0, y: 0 }\n\t\tthis._position = { x: this.x, y: this.y }\n\n\t\tthis._active = false\n\n\t\tthis._releaseCapture()\n\n\t\tthis.node.dispatchEvent(new CustomEvent('release'))\n\n\t\tsetTimeout(() => this.node.classList.remove(this.opts.classes.dragged), 0)\n\n\t\tthis._emitDragEnd()\n\n\t\tthis.updateLocalStorage()\n\t}\n\n\tresize = () => {\n\t\tthis._recomputeBounds()\n\t\t// this.#updateBounds()\n\n\t\tthis.moveTo(this.position) // works but doesn't preserve original position\n\t}\n\n\t/**\n\t * Moves the {@link node|draggable element} to the specified position, adjusted\n\t * for collisions with {@link obstacleEls obstacles} or {@link boundsRect bounds}.\n\t */\n\tmoveTo(target: { x: number; y: number }) {\n\t\tif (this.disabled || this.disposed) return\n\t\tthis._log.fn('moveTo').debug('Moving to:', target, { bounds: this.bounds })\n\n\t\tif (this.bounds) {\n\t\t\ttarget.x = clamp(\n\t\t\t\ttarget.x,\n\t\t\t\tthis.bounds.left,\n\t\t\t\tthis.bounds.right - (this.rect.right - this.rect.left),\n\t\t\t)\n\t\t\ttarget.y = clamp(\n\t\t\t\ttarget.y,\n\t\t\t\tthis.bounds.top,\n\t\t\t\tthis.bounds.bottom - (this.rect.bottom - this.rect.top),\n\t\t\t)\n\t\t}\n\n\t\tif (this.canMoveX) {\n\t\t\tconst deltaX = target.x - this.x\n\n\t\t\tif (deltaX !== 0) {\n\t\t\t\tthis.x += deltaX\n\t\t\t}\n\t\t}\n\n\t\tif (this.canMoveY) {\n\t\t\tif (this.bounds) target.y = clamp(target.y, this.bounds.top, this.bounds.bottom)\n\t\t\tconst deltaY = target.y - this.y\n\t\t\tif (deltaY !== 0) {\n\t\t\t\tthis.y += deltaY\n\t\t\t}\n\t\t}\n\n\t\t// Check for a custom user transform function before applying ours.\n\t\tif (!this.opts.transform) {\n\t\t\t// Set the tween and let it animate the position.\n\t\t\tthis.positionStore.set({ x: this.x, y: this.y })\n\t\t} else {\n\t\t\t// Call the user's custom transform function.\n\t\t\tconst customTransformResult = this.opts.transform?.({\n\t\t\t\tx: this.x,\n\t\t\t\ty: this.y,\n\t\t\t\trootNode: this.node,\n\t\t\t\teventTarget: this.eventTarget!,\n\t\t\t})\n\n\t\t\t// If the user's custom transform function returns an `{x,y}` object, use it.\n\t\t\tif (\n\t\t\t\tcustomTransformResult &&\n\t\t\t\t'x' in customTransformResult &&\n\t\t\t\t'y' in customTransformResult\n\t\t\t) {\n\t\t\t\tconst { x, y } = customTransformResult\n\t\t\t\tthis.positionStore.set({ x, y })\n\t\t\t}\n\t\t}\n\n\t\tthis._emitUpdate()\n\t}\n\n\tupdate(v = this.position) {\n\t\tthis._log.fn('update').debug('Updating position:', v, this)\n\t\tthis.moveTo(v)\n\t}\n\n\t/**\n\t * Updates the {@link position} property in local storage.\n\t */\n\tupdateLocalStorage = () => {\n\t\tif (!this.opts.localStorageKey) return\n\n\t\tthis._log\n\t\t\t.fn('updateLocalStorage')\n\t\t\t.debug(\n\t\t\t\t'Updating position in localStorage:',\n\t\t\t\t`{ x: ${this._position.x}, y: ${this._position.y} }`,\n\t\t\t\tthis,\n\t\t\t)\n\n\t\tif (this._storage) {\n\t\t\tthis._storage.set(this._position)\n\t\t}\n\t}\n\n\tclearLocalStorage = () => {\n\t\tif (this._storage && this.opts.localStorageKey) {\n\t\t\tlocalStorage.removeItem(this.opts.localStorageKey)\n\t\t}\n\t}\n\n\t/**\n\t * Resolves a {@link DraggableOptions.position} option into an `{x,y}` vector\n\t * depending on its type:\n\t * - `undefined` -> {@link DRAGGABLE_DEFAULTS.position}\n\t * - {@link Placement} -> {@link place}\n\t * - `{x,y}` -> itself *(merged with {@link DRAGGABLE_DEFAULTS.position}*\n\t * if it's a partial.)\n\t */\n\tresolvePosition(pos: DraggableOptions['position']): { x: number; y: number } {\n\t\tconst defaultPos = DRAGGABLE_DEFAULTS.position as { x: number; y: number }\n\n\t\tif (!pos || this.disposed) {\n\t\t\treturn defaultPos\n\t\t}\n\n\t\tif (typeof pos === 'string') {\n\t\t\treturn place(this.node, pos, {\n\t\t\t\tbounds: this.boundsEl?.getBoundingClientRect(),\n\t\t\t\tmargin: this.opts.margin,\n\t\t\t})\n\t\t}\n\n\t\tif (typeof pos === 'object' && ('x' in pos || 'y' in pos)) {\n\t\t\treturn {\n\t\t\t\tx: (pos.x ?? defaultPos.x) + this.opts.margin.x,\n\t\t\t\ty: (pos.y ?? defaultPos.y) + this.opts.margin.y,\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid position: ' + JSON.stringify(pos), {\n\t\t\tcause: {\n\t\t\t\tdefaultPos,\n\t\t\t\tpos,\n\t\t\t},\n\t\t})\n\t}\n\n\t/**\n\t * Resolves the {@link DraggableOptions.bounds|bounds} and returns a\n\t * function that updates the {@link bounds} property when called.\n\t */\n\tprivate _resolveBounds(optsBounds: DraggableOptions['bounds']): () => void {\n\t\tif (this.disposed) return () => void 0\n\t\tconst resolveUpdater = () => {\n\t\t\tif (!optsBounds) return () => void 0\n\n\t\t\t// Check for a custom bounds rect.\n\t\t\tif (\n\t\t\t\toptsBounds &&\n\t\t\t\ttypeof optsBounds === 'object' &&\n\t\t\t\t('left' in optsBounds ||\n\t\t\t\t\t'right' in optsBounds ||\n\t\t\t\t\t'top' in optsBounds ||\n\t\t\t\t\t'bottom' in optsBounds)\n\t\t\t) {\n\t\t\t\treturn () => {\n\t\t\t\t\tObject.assign(this.bounds, optsBounds)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prettier-ignore\n\t\t\tconst node =\n\t\t\tisHTMLElement(optsBounds) ? optsBounds\n\t\t\t: optsBounds === 'body' \t? document.body\n\t\t\t: optsBounds === 'parent' ? this.node.offsetParent\n\t\t\t: isString(optsBounds) \t? select(optsBounds)[0]\n\t\t\t: !isDefined(optsBounds) \t? document.documentElement\n\t\t\t: undefined\n\n\t\t\t// Error handling.\n\t\t\tif (!node) {\n\t\t\t\tconsole.error(`Invalid bounds option provided: ${optsBounds}. Aborting.`)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.boundsEl = node as HTMLElement\n\n\t\t\t// Add a resize observer to the bounds element to automatically update the bounds.\n\t\t\tconst boundsResizeObserver = new ResizeObserver(() => {\n\t\t\t\tthis.resize()\n\t\t\t\tthis._emitUpdate()\n\t\t\t})\n\t\t\tboundsResizeObserver.observe(node)\n\t\t\tthis._evm.add(() => boundsResizeObserver.disconnect())\n\n\t\t\tthis._emitUpdate()\n\n\t\t\treturn () => {\n\t\t\t\tconst rect = node.getBoundingClientRect()\n\t\t\t\tthis.bounds.left = rect.left\n\t\t\t\tthis.bounds.top = rect.top\n\t\t\t\tthis.bounds.right = rect.right\n\t\t\t\tthis.bounds.bottom = rect.bottom\n\t\t\t}\n\t\t}\n\t\tconst updateBounds = resolveUpdater()\n\t\treturn () => {\n\t\t\tupdateBounds?.()\n\t\t\tthis._updateRect()\n\t\t}\n\t}\n\n\tprivate _cancelElementContains = (dragElements: HTMLElement[]) => {\n\t\treturn this.cancelEls.some(cancelEl => dragElements.some(el => cancelEl.contains(el)))\n\t}\n\n\tprivate _callEvent = (\n\t\teventName: 'dragstart' | 'drag' | 'dragend',\n\t\tfn: (data: DragEventData) => void,\n\t) => {\n\t\tconst data = this.eventData\n\t\tthis.node.dispatchEvent(new CustomEvent(eventName, { detail: data }))\n\t\tfn?.(data)\n\t}\n\n\tprivate _emitDragStart = () => {\n\t\tthis._callEvent('dragstart', this.opts.onDragStart)\n\t}\n\n\tprivate _emitDragEnd = () => {\n\t\tthis._callEvent('dragend', this.opts.onDragEnd)\n\t}\n\n\tprivate _emitDrag = () => {\n\t\tthis._callEvent('drag', this.opts.onDrag)\n\t}\n\n\tprivate _emitUpdate = () => {\n\t\tthis.node.dispatchEvent(new CustomEvent('update', { detail: this }))\n\t}\n\n\tdisposed = false\n\tdispose() {\n\t\tthis.disposed = true\n\t\tthis._evm.dispose()\n\t}\n}\n\n/**\n * Events fired by the draggable svelte action.\n */\nexport interface DragEvents {\n\t'on:dragStart': (e: DragEventData) => void\n\t'on:drag': (e: DragEventData) => void\n\t'on:dragEnd': (e: DragEventData) => void\n\t'on:collision': (e: { x: number; y: number }) => void\n\t'on:update': (e: CustomEvent<Draggable>) => void\n}\n\n/**\n * A svelte action to make an element draggable.\n *\n * @example\n * ```svelte\n * <script>\n * \timport { draggable } from 'fractils'\n * </script>\n *\n * <div use:draggable> Drag Me </div>\n * ```\n * @todo - Finish this -- I've never actually used or spent time on it..\n */\nexport function draggable(node: HTMLElement, options?: Partial<DraggableOptions>) {\n\tconst d = new Draggable(node, options ?? {})\n\n\treturn {\n\t\tdestroy: () => {\n\t\t\td.dispose()\n\t\t},\n\t\t// The update function of a svelte action automatically fires whenever the\n\t\t// options object is changed externally, enabling easy reactivity.\n\t\tupdate: (options: Partial<DraggableOptions> | undefined) => {\n\t\t\tif (!options) return\n\n\t\t\t// Update all the values that need to be changed\n\t\t\td.opts.axis = options.axis || DRAGGABLE_DEFAULTS.axis\n\t\t\td.disabled = options.disabled ?? DRAGGABLE_DEFAULTS.disabled\n\t\t\td.opts.ignoreMultitouch =\n\t\t\t\toptions.ignoreMultitouch ?? DRAGGABLE_DEFAULTS.ignoreMultitouch\n\t\t\td.opts.handle = options.handle\n\t\t\td.opts.bounds = options.bounds!\n\t\t\td.opts.cancel = options.cancel\n\t\t\td.opts.userSelectNone = options.userSelectNone ?? DRAGGABLE_DEFAULTS.userSelectNone\n\t\t\td.opts.transform = options.transform\n\n\t\t\tconst dragged = d.node.classList.contains(d.opts.classes.dragged)\n\n\t\t\td.node.classList.remove(d.opts.classes.default, d.opts.classes.dragged)\n\n\t\t\td.opts.classes.default = options?.classes?.default ?? DEFAULT_CLASSES.default\n\t\t\td.opts.classes.dragging = options?.classes?.dragging ?? DEFAULT_CLASSES.dragging\n\t\t\td.opts.classes.dragged = options?.classes?.dragged ?? DEFAULT_CLASSES.dragged\n\n\t\t\td.node.classList.add(d.opts.classes.default)\n\n\t\t\tif (dragged) d.node.classList.add(d.opts.classes.default)\n\n\t\t\tif (d.isControlled) {\n\t\t\t\tif (options.position) {\n\t\t\t\t\tconst pos = d.resolvePosition(options.position)\n\t\t\t\t\td.x = pos.x\n\t\t\t\t\td.y = pos.y\n\t\t\t\t}\n\n\t\t\t\td.moveTo({ x: d.x, y: d.y })\n\t\t\t}\n\t\t},\n\t}\n}\n"],"names":[],"mappings":"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"}