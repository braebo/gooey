{"version":3,"file":"partition.js","sources":["../../../../src/shared/partition.ts"],"sourcesContent":["/**\n * Partitions an array into two arrays based on a predicate.  The second argument\n * is a callback that takes an element from the array and returns a boolean.\n * - If it returns true, the element will be placed in the first array.\n * - If it returns false, the element will be placed in the second array.\n *\n * @example\n * ```ts\n * const [even, odd] = partition([1, 2, 3, 4, 5], (n) => n % 2 === 0)\n *\n * console.log(even) // [2, 4]\n * console.log(odd) // [1, 3, 5]\n * ```\n */\nexport function partition<const T>(array: T[], predicate: (element: T) => boolean): [T[], T[]] {\n\tconst left = [] as T[]\n\tconst right = [] as T[]\n\n\tfor (const element of array) {\n\t\tif (predicate(element)) {\n\t\t\tleft.push(element)\n\t\t} else {\n\t\t\tright.push(element)\n\t\t}\n\t}\n\n\treturn [left, right]\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAaG;AACa,SAAA,SAAS,CAAU,KAAU,EAAE,SAAkC,EAAA;IAChF,MAAM,IAAI,GAAG,EAAS,CAAA;IACtB,MAAM,KAAK,GAAG,EAAS,CAAA;AAEvB,IAAA,KAAK,MAAM,OAAO,IAAI,KAAK,EAAE;AAC5B,QAAA,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE;AACvB,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;SAClB;aAAM;AACN,YAAA,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;SACnB;KACD;AAED,IAAA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AACrB;;;;"}