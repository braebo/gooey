{"version":3,"file":"scrollParent.js","sources":["../../../../src/shared/scrollParent.ts"],"sourcesContent":["/**\n * Checks if a node is scrollable.\n */\nexport const isScrollable = (node: Element) => {\n\tif (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n\t\treturn false\n\t}\n\tconst style = getComputedStyle(node)\n\treturn ['overflow', 'overflow-x', 'overflow-y'].some(propertyName => {\n\t\tconst value = style.getPropertyValue(propertyName)\n\t\treturn value === 'auto' || value === 'scroll'\n\t})\n}\n\n/**\n * Resolves the nearest scroll parent of a node.\n */\nexport const getScrollParent = (node: Element): Element => {\n\tlet currentParent = node.parentElement\n\twhile (currentParent) {\n\t\tif (isScrollable(currentParent)) {\n\t\t\treturn currentParent\n\t\t}\n\t\tcurrentParent = currentParent.parentElement\n\t}\n\treturn document.scrollingElement || document.documentElement\n}\n"],"names":[],"mappings":"AAAA;;AAEG;AACU,MAAA,YAAY,GAAG,CAAC,IAAa,KAAI;IAC7C,IAAI,EAAE,IAAI,YAAY,WAAW,IAAI,IAAI,YAAY,UAAU,CAAC,EAAE;AACjE,QAAA,OAAO,KAAK,CAAA;KACZ;AACD,IAAA,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAA;AACpC,IAAA,OAAO,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,YAAY,IAAG;QACnE,MAAM,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAA;AAClD,QAAA,OAAO,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,QAAQ,CAAA;AAC9C,KAAC,CAAC,CAAA;AACH,EAAC;AAED;;AAEG;AACU,MAAA,eAAe,GAAG,CAAC,IAAa,KAAa;AACzD,IAAA,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAA;IACtC,OAAO,aAAa,EAAE;AACrB,QAAA,IAAI,YAAY,CAAC,aAAa,CAAC,EAAE;AAChC,YAAA,OAAO,aAAa,CAAA;SACpB;AACD,QAAA,aAAa,GAAG,aAAa,CAAC,aAAa,CAAA;KAC3C;AACD,IAAA,OAAO,QAAQ,CAAC,gBAAgB,IAAI,QAAQ,CAAC,eAAe,CAAA;AAC7D;;;;"}