{"version":3,"file":"stringify.js","sources":["../../../../src/shared/stringify.ts"],"sourcesContent":["/**\n * A stringify replacer that handles circular references, undefined values, and functions.\n * - Circular references are replaced with the string `[Circular ~<path>]`\n * where `<path>` is the path to the circular reference relative to the\n * root object, i.e. `[Circular ~.b.c]`.\n * - Functions are replaced with the string `\"[Function]\"`.\n * - `undefined` values are replaced with the string `\"undefined\"`.\n *\n * @param obj - The object to stringify.\n * @param indentation - Number of spaces for indentation. Optional.\n */\nexport const stringify = (input: unknown, indentation = 0) => {\n\tconst stack = [] as unknown[]\n\treturn JSON.stringify(input, serialize(stack), indentation)\n}\n\n/**\n * A replacer function for `JSON.stringify` that handles circular references,\n * undefined values, and functions with strings.\n * @see {@link stringify}\n */\nexport function serialize(stack: unknown[]) {\n\tconst keys: string[] = []\n\n\treturn function (this: unknown, key: string, value: unknown): unknown {\n\t\tif (typeof value === 'undefined') return\n\t\tif (typeof value === 'function') return '[Function]'\n\n\t\tlet thisPos = stack.indexOf(this)\n\t\tif (thisPos !== -1) {\n\t\t\tstack.length = thisPos + 1\n\t\t\tkeys.length = thisPos\n\t\t\tkeys[thisPos] = key\n\t\t} else {\n\t\t\tstack.push(this)\n\t\t\tkeys.push(key)\n\t\t}\n\n\t\tlet valuePos = stack.indexOf(value)\n\t\tif (valuePos !== -1) {\n\t\t\treturn '[Circular ~' + keys.slice(0, valuePos).join('.') + ']'\n\t\t}\n\n\t\tif (value instanceof Set) {\n\t\t\treturn Array.from(value)\n\t\t}\n\n\t\tif (value instanceof Map) {\n\t\t\treturn Object.fromEntries(\n\t\t\t\tArray.from(value.entries()).map(([k, v]) => {\n\t\t\t\t\tconst newStack = [...stack]\n\t\t\t\t\treturn [k, JSON.parse(JSON.stringify(v, serialize(newStack)))]\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\n\t\tif (value instanceof Element) {\n\t\t\treturn `${value.tagName}.${Array.from(value.classList)\n\t\t\t\t.filter(s => !s.startsWith('s-'))\n\t\t\t\t.join('.')}#${value.id}`\n\t\t}\n\n\t\tif (stack.length > 0) {\n\t\t\tstack.push(value)\n\t\t}\n\n\t\treturn value\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUG;AACU,MAAA,SAAS,GAAG,CAAC,KAAc,EAAE,WAAW,GAAG,CAAC,KAAI;IAC5D,MAAM,KAAK,GAAG,EAAe,CAAA;AAC7B,IAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,CAAA;AAC5D,EAAC;AAED;;;;AAIG;AACG,SAAU,SAAS,CAAC,KAAgB,EAAA;IACzC,MAAM,IAAI,GAAa,EAAE,CAAA;IAEzB,OAAO,UAAyB,GAAW,EAAE,KAAc,EAAA;QAC1D,IAAI,OAAO,KAAK,KAAK,WAAW;YAAE,OAAM;QACxC,IAAI,OAAO,KAAK,KAAK,UAAU;AAAE,YAAA,OAAO,YAAY,CAAA;QAEpD,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AACjC,QAAA,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;AACnB,YAAA,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,CAAC,CAAA;AAC1B,YAAA,IAAI,CAAC,MAAM,GAAG,OAAO,CAAA;AACrB,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAA;SACnB;aAAM;AACN,YAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAChB,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACd;QAED,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;AACnC,QAAA,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;AACpB,YAAA,OAAO,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;SAC9D;AAED,QAAA,IAAI,KAAK,YAAY,GAAG,EAAE;AACzB,YAAA,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SACxB;AAED,QAAA,IAAI,KAAK,YAAY,GAAG,EAAE;YACzB,OAAO,MAAM,CAAC,WAAW,CACxB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAI;AAC1C,gBAAA,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,CAAA;gBAC3B,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;aAC9D,CAAC,CACF,CAAA;SACD;AAED,QAAA,IAAI,KAAK,YAAY,OAAO,EAAE;AAC7B,YAAA,OAAO,CAAG,EAAA,KAAK,CAAC,OAAO,CAAI,CAAA,EAAA,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AACpD,iBAAA,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBAChC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,EAAI,KAAK,CAAC,EAAE,EAAE,CAAA;SACzB;AAED,QAAA,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACrB,YAAA,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SACjB;AAED,QAAA,OAAO,KAAK,CAAA;AACb,KAAC,CAAA;AACF;;;;"}