{"version":3,"file":"isType.js","sources":["../../../../src/shared/isType.ts"],"sourcesContent":["export function isType<const T extends any, const U extends string = string>(\n\tvalue: T | boolean | undefined,\n\ttype: U,\n): value is NonNullable<T> & { __type: U }\nexport function isType(value: any, type: 'number'): value is number\nexport function isType(value: any, type: 'string'): value is string\nexport function isType(value: any, type: 'boolean'): value is boolean\nexport function isType(value: any, type: 'function'): value is (...args: any[]) => any\nexport function isType<const _T extends any, const U extends string>(\n\tvalue: any,\n\ttype: U | 'number' | 'string' | 'boolean' | 'function' | 'object',\n): boolean {\n\tif (typeof value !== 'object' || value === null || ['object', 'function'].includes(type)) {\n\t\treturn typeof value === type\n\t}\n\treturn '__type' in value && (value as any)['__type'] === type\n}\n"],"names":[],"mappings":"AAQgB,SAAA,MAAM,CACrB,KAAU,EACV,IAAiE,EAAA;IAEjE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzF,QAAA,OAAO,OAAO,KAAK,KAAK,IAAI,CAAA;KAC5B;IACD,OAAO,QAAQ,IAAI,KAAK,IAAK,KAAa,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAA;AAC9D;;;;"}