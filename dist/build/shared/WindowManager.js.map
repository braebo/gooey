{"version":3,"file":"WindowManager.js","sources":["../../../../src/shared/WindowManager.ts"],"sourcesContent":["import type { ElementOrSelector, ElementsOrSelectors } from './select'\n\nimport { Resizable, RESIZABLE_DEFAULTS, type ResizableOptions } from './resizable'\nimport { DRAGGABLE_DEFAULTS, Draggable, type DraggableOptions } from './draggable'\nimport { EventManager } from './EventManager'\nimport { resolveOpts } from './resolveOpts'\nimport { Logger } from './logger'\nimport { nanoid } from './nanoid'\nimport { isObject } from './is'\nimport { state } from './state'\n\nexport interface WindowManagerOptions {\n\t__type?: 'WindowManagerOptions'\n\n\t/**\n\t * Whether to make windows draggable. Can be a boolean, or your own\n\t * {@link DraggableOptions}.  Set to `false` to disable dragging.\n\t * @default true\n\t */\n\tdraggable: boolean | Partial<DraggableOptions>\n\n\t/**\n\t * Whether to make windows resizable. Can be a boolean, or your own\n\t * {@link ResizableOptions}.  Set to `false` to disable resizing.\n\t * @default true\n\t */\n\tresizable: boolean | Partial<ResizableOptions>\n\n\t/**\n\t * Element's or selectors which will act as collision obstacles for the element.\n\t * @default ''\n\t */\n\tobstacles: ElementsOrSelectors\n\n\t/**\n\t * Element's or selectors which will act as bounds obstacles for the element.\n\t * @default ''\n\t */\n\tbounds: ElementOrSelector\n\n\t/**\n\t * The base z-index value.\n\t * @default 10\n\t */\n\tzFloor: number\n\n\t/**\n\t * Restores a selected window's z-index immediately upon release.\n\t * @default false\n\t */\n\tpreserveZ: boolean\n\n\t/**\n\t * If defined, position and/or size will be persisted to localStorage.\n\t *\n\t * `true` to use the {@link WINDOWMANGER_STORAGE_DEFAULTS}.\n\t *\n\t * @defaultValue `undefined`\n\t *\n\t * @see WindowManagerStorageOptions\n\t */\n\tlocalStorage?: boolean | WindowManagerStorageOptions\n}\n\ninterface WindowManagerStorageOptions {\n\t__type?: 'WindowManagerStorageOptions'\n\n\t/**\n\t * Prefix to use for localStorage keys.\n\t * @default \"window-manager\"\n\t */\n\tkey: string\n\n\t/**\n\t * Whether to persist the size of {@link resizable} windows.\n\t * @default true\n\t */\n\tsize?: boolean\n\n\t/**\n\t * Whether to persist the position of {@link draggable} windows.\n\t * @default true\n\t */\n\tposition?: boolean\n\n\t/**\n\t * How long to debounce writes to localStorage (0 to disable).\n\t * @default 50\n\t */\n\tdebounce?: number\n}\n\nexport const WINDOWMANGER_STORAGE_DEFAULTS = {\n\t__type: 'WindowManagerStorageOptions',\n\tkey: 'window-manager',\n\tsize: true,\n\tposition: true,\n\tdebounce: 50,\n} as const satisfies WindowManagerStorageOptions\n\nexport const WINDOWMANAGER_DEFAULTS = {\n\t__type: 'WindowManagerOptions',\n\tresizable: RESIZABLE_DEFAULTS,\n\tdraggable: DRAGGABLE_DEFAULTS,\n\tzFloor: 10,\n\tpreserveZ: false,\n\tbounds: undefined,\n\tobstacles: undefined,\n\tlocalStorage: undefined,\n} as const satisfies WindowManagerOptions\n\n/**\n * Manages multiple draggable and/or resizable {@link WindowInstance}s.\n *\n * {@link WindowManager.windows|`windows`} can be added, removed, and their\n * z-index values are managed to ensure the most recently selected element is on top.\n * @todo Add examples\n */\nexport class WindowManager {\n\t/**\n\t * A map of all windows managed by the instance.  The key is the window's id specified in the\n\t * options for each window.\n\t */\n\twindows = new Map<WindowInstance['id'], WindowInstance>()\n\n\t/**\n\t * The initial {@link WindowManagerOptions} provided.\n\t */\n\treadonly opts: WindowManagerOptions\n\n\tprivate _log = new Logger('WindowManager', { fg: 'lightseagreen' })\n\tprivate _evm = new EventManager()\n\n\tconstructor(options?: Partial<WindowManagerOptions>) {\n\t\toptions ??= WINDOWMANAGER_DEFAULTS\n\t\toptions.__type = 'WindowManagerOptions'\n\t\tthis.opts = Object.freeze(this._resolveOptions(options))\n\t\tthis._log.fn('constructor').info({ opts: this.opts, options, this: this })\n\t}\n\n\tadd = (\n\t\tnode: HTMLElement,\n\t\toptions?: Partial<WindowInstanceOptions>,\n\t): { destroy: () => void } => {\n\t\tconst instance = new WindowInstance(this, node, options)\n\t\tthis.windows.set(instance.id, instance)\n\n\t\tconst listenerId = this._evm.listen(node, 'grab', this.select)\n\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tinstance.dispose()\n\t\t\t\tthis.windows.delete(instance.id)\n\t\t\t\tthis._evm.unlisten(listenerId)\n\t\t\t},\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis.windows.forEach(({ resizableInstance, draggableInstance }) => {\n\t\t\tif (draggableInstance) draggableInstance.update()\n\t\t\tif (resizableInstance) resizableInstance.size = resizableInstance.size\n\t\t})\n\t}\n\n\tapplyZ() {\n\t\tlet i = 0\n\t\tfor (const instance of this.windows.values()) {\n\t\t\tinstance.node.style.setProperty('z-index', String(this.opts.zFloor + i++))\n\t\t}\n\n\t\treturn this\n\t}\n\n\tselect = (e: PointerEvent) => {\n\t\tconst target_node = e.currentTarget as HTMLElement\n\n\t\tconst instance = this.windows.get(target_node.id)\n\n\t\tif (!instance) {\n\t\t\tthrow new Error('Unable to resolve instance from selected node: ' + target_node.id)\n\t\t}\n\n\t\t// this.#animate(node)\n\n\t\tif (this.windows.size > 1) {\n\t\t\tconst initialZ = target_node.style.getPropertyValue('z-index')\n\t\t\ttarget_node.style.setProperty('z-index', String(this.opts.zFloor + this.windows.size))\n\n\t\t\tif (target_node.dataset['keepZ'] === 'true' || this.opts.preserveZ) {\n\t\t\t\taddEventListener(\n\t\t\t\t\t'pointerup',\n\t\t\t\t\t() => target_node.style.setProperty('z-index', initialZ),\n\t\t\t\t\t{\n\t\t\t\t\t\tonce: true,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tthis.windows.delete(instance.id)\n\t\t\t\tthis.windows.set(instance.id, instance)\n\t\t\t\tthis.applyZ()\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\tprivate _resolveOptions(\n\t\toptions?: Partial<WindowManagerOptions>,\n\t\tdefaults = WINDOWMANAGER_DEFAULTS,\n\t): WindowManagerOptions & {\n\t\tlocalStorage: WindowManagerStorageOptions | false\n\t\tdraggable: DraggableOptions | false\n\t\tresizable: ResizableOptions | false\n\t} {\n\t\tconst opts = {} as WindowManagerOptions & {\n\t\t\tlocalStorage: WindowManagerStorageOptions | false\n\t\t\tdraggable: DraggableOptions | false\n\t\t\tresizable: ResizableOptions | false\n\t\t}\n\n\t\topts.zFloor = options?.zFloor ?? defaults.zFloor\n\t\topts.preserveZ = options?.preserveZ ?? defaults.preserveZ\n\t\topts.draggable = resolveOpts(options?.draggable, defaults.draggable)\n\t\topts.resizable = resolveOpts(options?.resizable, defaults.resizable)\n\t\topts.obstacles = options?.obstacles ?? defaults.obstacles\n\t\topts.bounds =\n\t\t\toptions?.bounds ??\n\t\t\t(isObject(options?.draggable) ? options.draggable.bounds : defaults.bounds)\n\n\t\tif (typeof options?.obstacles === 'undefined') {\n\t\t\tif (opts.obstacles) {\n\t\t\t\tif (isObject(opts.draggable)) {\n\t\t\t\t\topts.draggable.obstacles = opts.obstacles\n\t\t\t\t}\n\t\t\t\tif (isObject(opts.resizable)) {\n\t\t\t\t\topts.resizable.obstacles = opts.obstacles\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (isObject(opts.draggable)) {\n\t\t\t\tif (typeof opts.draggable.obstacles === 'undefined') {\n\t\t\t\t\topts.draggable.obstacles = options.obstacles\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (opts.bounds) {\n\t\t\tif (opts.draggable) {\n\t\t\t\tif (isObject(options?.draggable) && options?.draggable.bounds) {\n\t\t\t\t\topts.draggable.bounds = options.draggable.bounds\n\t\t\t\t}\n\t\t\t\topts.draggable.bounds = opts.bounds\n\t\t\t}\n\t\t\tif (opts.resizable) {\n\t\t\t\topts.resizable.bounds = opts.bounds\n\t\t\t}\n\t\t}\n\n\t\t// Resolve localStorage options.\n\t\tif (typeof options?.localStorage !== 'undefined') {\n\t\t\tif (options.localStorage === true) {\n\t\t\t\topts.localStorage = WINDOWMANGER_STORAGE_DEFAULTS\n\t\t\t} else if (typeof options.localStorage === 'object') {\n\t\t\t\topts.localStorage = Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\tWINDOWMANGER_STORAGE_DEFAULTS,\n\t\t\t\t\toptions.localStorage,\n\t\t\t\t)\n\n\t\t\t\tif (isObject(opts.draggable)) {\n\t\t\t\t\tif (opts.localStorage.position === false) {\n\t\t\t\t\t\topts.draggable.localStorageKey = undefined\n\t\t\t\t\t} else {\n\t\t\t\t\t\topts.draggable.localStorageKey = opts.localStorage.key\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isObject(opts.resizable)) {\n\t\t\t\t\topts.resizable.localStorageKey = opts.localStorage.key\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn opts\n\t}\n\n\t/**\n\t * Dispose of the instance and all windows.\n\t */\n\tdispose() {\n\t\tthis._log.fn('dispose').info(this)\n\t\tthis._evm?.dispose()\n\t\tfor (const instance of this.windows.values()) {\n\t\t\tinstance?.dispose()\n\t\t}\n\t\tthis.windows.clear()\n\t}\n}\n\nexport type WindowInstanceOptions = Partial<WindowManagerOptions> & {\n\t/**\n\t * A unique identifier for the window, making it accessible via the\n\t * {@link WindowManager.windows|`windows`} map (i.e. `windowManager.windows.get(id)`).\n\t *\n\t * If not provided, a random id will be generated.\n\t * @default nanoid()\n\t */\n\tid?: string\n}\n\n/**\n * A single window in a window manager.\n */\nexport class WindowInstance {\n\tdraggableInstance?: Draggable\n\tresizableInstance?: Resizable\n\n\tid: string\n\tposition = state({ x: 0, y: 0 })\n\tsize = state({ width: 0, height: 0 })\n\n\tconstructor(\n\t\tpublic manager: WindowManager,\n\t\tpublic node: HTMLElement,\n\t\toptions?: WindowInstanceOptions,\n\t) {\n\t\tthis.id = node.id || options?.id || `wm-instance-${nanoid(8)}`\n\t\tnode.id ||= this.id\n\n\t\t// @ts-expect-error - yoink\n\t\tconst opts = manager._resolveOptions(options, manager.opts)\n\n\t\tconst dragOpts = opts.draggable\n\t\tconst resizeOpts = opts.resizable\n\n\t\t// Respect disabled localStorage for individual windows independently of the manager.\n\t\tif (options?.localStorage === false) {\n\t\t\tif (dragOpts) dragOpts.localStorageKey = undefined\n\t\t\tif (resizeOpts) resizeOpts.localStorageKey = undefined\n\t\t} else {\n\t\t\t// Construct a unique draggable localStorage key for each window.\n\t\t\tif (typeof dragOpts === 'object' && dragOpts.localStorageKey !== undefined) {\n\t\t\t\tconst dragKeyParts = [] as string[]\n\t\t\t\tif (typeof dragOpts.localStorageKey === 'undefined') {\n\t\t\t\t\tif (typeof manager.opts.localStorage === 'object') {\n\t\t\t\t\t\tdragKeyParts.push(manager.opts.localStorage.key)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdragKeyParts.push(WINDOWMANGER_STORAGE_DEFAULTS.key)\n\t\t\t\t\t}\n\t\t\t\t} else if (dragOpts.localStorageKey) {\n\t\t\t\t\tdragKeyParts.push(dragOpts.localStorageKey)\n\t\t\t\t}\n\t\t\t\tdragKeyParts.push('wm', `${this.manager.windows.size}`, 'position')\n\t\t\t\tdragOpts.localStorageKey = dragKeyParts.join('::')\n\t\t\t}\n\t\t\t// Construct a unique resizable localStorage key for each window.\n\t\t\tif (typeof resizeOpts === 'object' && resizeOpts.localStorageKey !== undefined) {\n\t\t\t\tconst resizeKeyParts = [] as string[]\n\t\t\t\tif (typeof resizeOpts.localStorageKey === 'undefined') {\n\t\t\t\t\tif (typeof manager.opts.localStorage === 'object') {\n\t\t\t\t\t\tresizeKeyParts.push(manager.opts.localStorage.key)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresizeKeyParts.push(WINDOWMANGER_STORAGE_DEFAULTS.key)\n\t\t\t\t\t}\n\t\t\t\t} else if (resizeOpts.localStorageKey) {\n\t\t\t\t\tresizeKeyParts.push(resizeOpts.localStorageKey)\n\t\t\t\t}\n\t\t\t\tresizeKeyParts.push('wm', `${this.manager.windows.size}`, 'size')\n\t\t\t\tresizeOpts.localStorageKey = resizeKeyParts.join('::')\n\t\t\t}\n\t\t}\n\n\t\tthis.draggableInstance = new Draggable(node, dragOpts || { disabled: true })\n\t\tthis.resizableInstance = new Resizable(node, resizeOpts || { disabled: true })\n\n\t\tif (opts?.preserveZ) {\n\t\t\tnode.dataset['keepZ'] = 'true'\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.resizableInstance?.dispose()\n\t\tthis.draggableInstance?.dispose()\n\t}\n}\n"],"names":[],"mappings":";;;;;;;;;AA4Fa,MAAA,6BAA6B,GAAG;AAC5C,IAAA,MAAM,EAAE,6BAA6B;AACrC,IAAA,GAAG,EAAE,gBAAgB;AACrB,IAAA,IAAI,EAAE,IAAI;AACV,IAAA,QAAQ,EAAE,IAAI;AACd,IAAA,QAAQ,EAAE,EAAE;EACmC;AAEnC,MAAA,sBAAsB,GAAG;AACrC,IAAA,MAAM,EAAE,sBAAsB;AAC9B,IAAA,SAAS,EAAE,kBAAkB;AAC7B,IAAA,SAAS,EAAE,kBAAkB;AAC7B,IAAA,MAAM,EAAE,EAAE;AACV,IAAA,SAAS,EAAE,KAAK;AAChB,IAAA,MAAM,EAAE,SAAS;AACjB,IAAA,SAAS,EAAE,SAAS;AACpB,IAAA,YAAY,EAAE,SAAS;EACiB;AAEzC;;;;;;AAMG;MACU,aAAa,CAAA;AACzB;;;AAGG;AACH,IAAA,OAAO,GAAG,IAAI,GAAG,EAAwC,CAAA;AAEzD;;AAEG;AACM,IAAA,IAAI,CAAsB;AAE3B,IAAA,IAAI,GAAG,IAAI,MAAM,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,CAAC,CAAA;AAC3D,IAAA,IAAI,GAAG,IAAI,YAAY,EAAE,CAAA;AAEjC,IAAA,WAAA,CAAY,OAAuC,EAAA;QAClD,OAAO,KAAK,sBAAsB,CAAA;AAClC,QAAA,OAAO,CAAC,MAAM,GAAG,sBAAsB,CAAA;AACvC,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAA;QACxD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAA;KAC1E;AAED,IAAA,GAAG,GAAG,CACL,IAAiB,EACjB,OAAwC,KACZ;QAC5B,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;QACxD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAA;AAEvC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAE9D,OAAO;YACN,OAAO,EAAE,MAAK;gBACb,QAAQ,CAAC,OAAO,EAAE,CAAA;gBAClB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;AAChC,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;aAC9B;SACD,CAAA;AACF,KAAC,CAAA;IAED,MAAM,GAAA;AACL,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,KAAI;AACjE,YAAA,IAAI,iBAAiB;gBAAE,iBAAiB,CAAC,MAAM,EAAE,CAAA;AACjD,YAAA,IAAI,iBAAiB;AAAE,gBAAA,iBAAiB,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAA;AACvE,SAAC,CAAC,CAAA;KACF;IAED,MAAM,GAAA;QACL,IAAI,CAAC,GAAG,CAAC,CAAA;QACT,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAC7C,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;SAC1E;AAED,QAAA,OAAO,IAAI,CAAA;KACX;AAED,IAAA,MAAM,GAAG,CAAC,CAAe,KAAI;AAC5B,QAAA,MAAM,WAAW,GAAG,CAAC,CAAC,aAA4B,CAAA;AAElD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;QAEjD,IAAI,CAAC,QAAQ,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,iDAAiD,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;SACnF;;QAID,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE;YAC1B,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAA;YAC9D,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;AAEtF,YAAA,IAAI,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACnE,gBAAA,gBAAgB,CACf,WAAW,EACX,MAAM,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,EACxD;AACC,oBAAA,IAAI,EAAE,IAAI;AACV,iBAAA,CACD,CAAA;aACD;iBAAM;gBACN,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;gBAChC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAA;gBACvC,IAAI,CAAC,MAAM,EAAE,CAAA;aACb;SACD;AAED,QAAA,OAAO,IAAI,CAAA;AACZ,KAAC,CAAA;AAEO,IAAA,eAAe,CACtB,OAAuC,EACvC,QAAQ,GAAG,sBAAsB,EAAA;QAMjC,MAAM,IAAI,GAAG,EAIZ,CAAA;QAED,IAAI,CAAC,MAAM,GAAG,OAAO,EAAE,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAA;QAChD,IAAI,CAAC,SAAS,GAAG,OAAO,EAAE,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAA;AACzD,QAAA,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAA;AACpE,QAAA,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAA;QACpE,IAAI,CAAC,SAAS,GAAG,OAAO,EAAE,SAAS,IAAI,QAAQ,CAAC,SAAS,CAAA;AACzD,QAAA,IAAI,CAAC,MAAM;AACV,YAAA,OAAO,EAAE,MAAM;iBACd,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAA;AAE5E,QAAA,IAAI,OAAO,OAAO,EAAE,SAAS,KAAK,WAAW,EAAE;AAC9C,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AACnB,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;iBACzC;AACD,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;iBACzC;aACD;SACD;aAAM;AACN,YAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC7B,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,KAAK,WAAW,EAAE;oBACpD,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAA;iBAC5C;aACD;SACD;AAED,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AAChB,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AACnB,gBAAA,IAAI,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE;oBAC9D,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAA;iBAChD;gBACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;aACnC;AACD,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;aACnC;SACD;;AAGD,QAAA,IAAI,OAAO,OAAO,EAAE,YAAY,KAAK,WAAW,EAAE;AACjD,YAAA,IAAI,OAAO,CAAC,YAAY,KAAK,IAAI,EAAE;AAClC,gBAAA,IAAI,CAAC,YAAY,GAAG,6BAA6B,CAAA;aACjD;AAAM,iBAAA,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,QAAQ,EAAE;AACpD,gBAAA,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAChC,EAAE,EACF,6BAA6B,EAC7B,OAAO,CAAC,YAAY,CACpB,CAAA;AAED,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,EAAE;AACzC,wBAAA,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,CAAA;qBAC1C;yBAAM;wBACN,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAA;qBACtD;iBACD;AACD,gBAAA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;oBAC7B,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAA;iBACtD;aACD;SACD;AAED,QAAA,OAAO,IAAI,CAAA;KACX;AAED;;AAEG;IACH,OAAO,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAClC,QAAA,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAA;QACpB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAC7C,QAAQ,EAAE,OAAO,EAAE,CAAA;SACnB;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;KACpB;AACD,CAAA;AAaD;;AAEG;MACU,cAAc,CAAA;AASlB,IAAA,OAAA,CAAA;AACA,IAAA,IAAA,CAAA;AATR,IAAA,iBAAiB,CAAY;AAC7B,IAAA,iBAAiB,CAAY;AAE7B,IAAA,EAAE,CAAQ;AACV,IAAA,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;AAChC,IAAA,IAAI,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAA;AAErC,IAAA,WAAA,CACQ,OAAsB,EACtB,IAAiB,EACxB,OAA+B,EAAA;QAFxB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAe;QACtB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAa;AAGxB,QAAA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,CAAe,YAAA,EAAA,MAAM,CAAC,CAAC,CAAC,EAAE,CAAA;AAC9D,QAAA,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAA;;AAGnB,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAA;AAE3D,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAA;AAC/B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;;AAGjC,QAAA,IAAI,OAAO,EAAE,YAAY,KAAK,KAAK,EAAE;AACpC,YAAA,IAAI,QAAQ;AAAE,gBAAA,QAAQ,CAAC,eAAe,GAAG,SAAS,CAAA;AAClD,YAAA,IAAI,UAAU;AAAE,gBAAA,UAAU,CAAC,eAAe,GAAG,SAAS,CAAA;SACtD;aAAM;;YAEN,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,eAAe,KAAK,SAAS,EAAE;gBAC3E,MAAM,YAAY,GAAG,EAAc,CAAA;AACnC,gBAAA,IAAI,OAAO,QAAQ,CAAC,eAAe,KAAK,WAAW,EAAE;oBACpD,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;wBAClD,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;qBAChD;yBAAM;AACN,wBAAA,YAAY,CAAC,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAA;qBACpD;iBACD;AAAM,qBAAA,IAAI,QAAQ,CAAC,eAAe,EAAE;AACpC,oBAAA,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAA;iBAC3C;AACD,gBAAA,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,CAAA;gBACnE,QAAQ,CAAC,eAAe,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aAClD;;YAED,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,CAAC,eAAe,KAAK,SAAS,EAAE;gBAC/E,MAAM,cAAc,GAAG,EAAc,CAAA;AACrC,gBAAA,IAAI,OAAO,UAAU,CAAC,eAAe,KAAK,WAAW,EAAE;oBACtD,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;wBAClD,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;qBAClD;yBAAM;AACN,wBAAA,cAAc,CAAC,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAA;qBACtD;iBACD;AAAM,qBAAA,IAAI,UAAU,CAAC,eAAe,EAAE;AACtC,oBAAA,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAA;iBAC/C;AACD,gBAAA,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAA;gBACjE,UAAU,CAAC,eAAe,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACtD;SACD;AAED,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,QAAQ,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;AAC5E,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,UAAU,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;AAE9E,QAAA,IAAI,IAAI,EAAE,SAAS,EAAE;AACpB,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,MAAM,CAAA;SAC9B;KACD;IAED,OAAO,GAAA;AACN,QAAA,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,CAAA;AACjC,QAAA,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,CAAA;KACjC;AACD;;;;"}