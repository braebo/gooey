{"version":3,"file":"Select.js","sources":["../../../../src/controllers/Select.ts"],"sourcesContent":["import type { State } from '../shared/state'\nimport type { Input } from '../inputs/Input'\n\nimport { disableable, type Disableable } from '../shared/decorators/disableable-class-decorator'\nimport { getScrollParent } from '../shared/scrollParent'\nimport { EventManager } from '../shared/EventManager'\nimport { isState } from '../shared/state'\nimport { values } from '../shared/object'\nimport { create } from '../shared/create'\nimport { Logger } from '../shared/logger'\n\nexport type LabeledOption<T> = { label: string; value: T }\nexport type Option<T> = T | LabeledOption<T>\n\nexport interface SelectInputOptions<T> {\n\treadonly __type?: 'SelectInputOptions'\n\tinput: Input\n\tcontainer: HTMLDivElement\n\tdisabled: boolean | (() => boolean)\n\t/**\n\t * The default selected option. If not provided, the first option in\n\t * the `options` array will be selected.\n\t * @todo - We need a 'blank' state where no option is selected.\n\t */\n\tselected?: Option<T>\n\t/**\n\t * The options to display in the select controller.  Pass each\n\t * option as a {@link LabeledOption} (`{ label: string, value: T }`)\n\t * to specify text to display for each option.  Alternatively, if the\n\t * label you want to display is already on the option object, use the\n\t * `labelKey` property to specify the key to use as the label.\n\t */\n\toptions: Option<T>[]\n\t/**\n\t * An optional key on each {@link Option} to use as the `label` when\n\t * converting to a {@link LabeledOption}.\n\t */\n\tlabelKey?: T extends Record<infer K, any> ? K : never\n\t/**\n\t * When `true`, options will be automatically selected when a user\n\t * hovers over them in the dropdown.  If none are selected, the\n\t * original value will be restored.\n\t * @default true\n\t */\n\tselectOnHover?: boolean\n\t/**\n\t * Just used internally for the logger label.\n\t * @internal\n\t */\n\ttitle?: string\n}\n\nexport type SelectElements = {\n\tcontainer: HTMLDivElement\n\tselected: HTMLDivElement\n\tdropdown: HTMLDivElement\n\toptions: HTMLDivElement[]\n}\n\ninterface SelectInputEvents<T> {\n\tchange: LabeledOption<T>\n\trefresh: void\n\topen: void\n\tclose: void\n\tcancel: void\n}\n\nexport interface Select<T> extends Disableable {}\n\n@disableable\nexport class Select<T> {\n\treadonly __type = 'Select' as const\n\telement: HTMLDivElement\n\n\tprivate _opts: SelectInputOptions<T> & {\n\t\tselected: LabeledOption<T>\n\t\toptions: LabeledOption<T>[]\n\t\tselectOnHover: boolean\n\t}\n\telements: SelectElements\n\n\t/**\n\t * All options in the select controller.\n\t */\n\toptions: LabeledOption<T>[]\n\n\t/**\n\t * A map of all options by their (internally generated) id.\n\t */\n\toptionMap = new Map<\n\t\tstring,\n\t\t{\n\t\t\toption: LabeledOption<T>\n\t\t\telement: HTMLDivElement\n\t\t}\n\t>()\n\n\t/**\n\t * Whether the dropdown is currently visible.\n\t */\n\texpanded = false\n\n\t/**\n\t * The initial selected option.\n\t */\n\tinitialValue: LabeledOption<T>\n\n\t/**\n\t * The initial options array.\n\t */\n\tinitialOptions: LabeledOption<T>[]\n\n\t/**\n\t * When true, clicking clicks will be ignored.\n\t */\n\tdisableClicks = false\n\n\t/**\n\t * Used to prevent infinite loops when updating internally.\n\t */\n\tbubble = true\n\n\t/**\n\t * The currently selected option.\n\t */\n\tprivate _selected: LabeledOption<T>\n\n\t/**\n\t * The currently selected option preserved when hot-swapping on:hover.\n\t */\n\tprivate _currentSelection: LabeledOption<T>\n\n\t/**\n\t * The parent element that the selected element is scrolling in.\n\t */\n\tprivate _scrollParent: Element | undefined\n\n\tprivate _evm = new EventManager<SelectInputEvents<T>>([\n\t\t'change',\n\t\t'refresh',\n\t\t'cancel',\n\t\t'open',\n\t\t'close',\n\t])\n\n\t/**\n\t * Used to subscribe to {@link SelectInputEvents}.\n\t */\n\ton = this._evm.on.bind(this._evm) as <K extends keyof SelectInputEvents<T>>(\n\t\tevent: K,\n\t\thandler: (v: SelectInputEvents<T>[K]) => void,\n\t) => void\n\n\tprivate _log: Logger\n\n\tconstructor(options: SelectInputOptions<T>) {\n\t\tconst opts = {\n\t\t\t...options,\n\t\t\tselected: toLabeledOption(options.selected ? options.selected : options.options[0]),\n\t\t\toptions: options.options.map(o => toLabeledOption(o)),\n\t\t\tselectOnHover: options.selectOnHover ?? true,\n\t\t}\n\t\tthis._opts = opts\n\n\t\tif (options?.title) {\n\t\t\tthis._log = new Logger(`Select ${options.title}`, { fg: 'burlywood' })\n\t\t} else {\n\t\t\tthis._log = new Logger('Select', { fg: 'blueviolet' })\n\t\t}\n\n\t\tthis._selected = this._currentSelection = this.initialValue = this._opts.selected\n\t\tthis.options = this.initialOptions = this._opts.options\n\n\t\tconst container = create('div', {\n\t\t\tclasses: ['fracgui-controller-select-container'],\n\t\t\tparent: options.container,\n\t\t})\n\t\tthis.element = container\n\n\t\tconst selected = create('div', {\n\t\t\tclasses: ['fracgui-controller-select-selected'],\n\t\t\tparent: container,\n\t\t\ttextContent: String(this.getLabel(this.selected)),\n\t\t})\n\n\t\tthis._evm.listen(selected, 'click', () => {\n\t\t\tif (this.disableClicks) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.toggle()\n\t\t})\n\n\t\tconst dropdown = create('div', { classes: ['fracgui-controller-select-dropdown'] })\n\n\t\tthis.elements = {\n\t\t\tcontainer,\n\t\t\tselected,\n\t\t\tdropdown,\n\t\t\toptions: [],\n\t\t}\n\n\t\tfor (const option of this.options) {\n\t\t\tthis.add(option)\n\t\t}\n\n\t\tthis.disabled = this._opts.disabled\n\n\t\tthis._log.fn('constructor').debug({ opts: this._opts, this: this })\n\t}\n\n\t/**\n\t * The currently selected option. Assigning a new value will update the UI.\n\t */\n\tget selected(): LabeledOption<T> {\n\t\treturn this._selected\n\t}\n\tset selected(v: Option<T> | State<Option<T>>) {\n\t\tthis._log.fn('set selected').debug(v)\n\n\t\tconst newValue = isState(v) ? toLabeledOption(v.value) : toLabeledOption(v)\n\n\t\tthis._selected = newValue as LabeledOption<T>\n\t\tthis.elements.selected.innerHTML = newValue.label\n\n\t\tif (!this.bubble) {\n\t\t\tthis.bubble = true\n\t\t\treturn\n\t\t}\n\n\t\tthis._evm.emit('change', this.selected)\n\t}\n\n\tgetLabel(v: LabeledOption<T> | State<LabeledOption<T>>) {\n\t\tif (isState(v)) {\n\t\t\treturn v.value.label\n\t\t} else {\n\t\t\treturn v.label\n\t\t}\n\t}\n\n\t/**\n\t * Adds an option to the select controller.\n\t * @param option The option to add.\n\t * @returns The id of the added option.\n\t */\n\tadd(option: Option<T>) {\n\t\tconst opt = toLabeledOption(option)\n\n\t\tconst el = create('div', {\n\t\t\tclasses: ['fracgui-controller-select-option'],\n\t\t\tparent: this.elements.dropdown,\n\t\t\tinnerText: opt.label,\n\t\t})\n\n\t\tconst id = this._evm.listen(el, 'click', this.select)\n\t\tel.dataset['optionId'] = id\n\n\t\tthis.optionMap.set(id, {\n\t\t\toption: opt,\n\t\t\telement: el,\n\t\t})\n\n\t\tthis.elements.options.push(el)\n\n\t\tthis._log.fn('add').debug({ option, added: this.optionMap.get(id), id, this: this })\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Removes an option from the select controller by id.\n\t */\n\tremove(\n\t\t/**\n\t\t * The id of the option to remove.\n\t\t */\n\t\tid: string,\n\t\t/**\n\t\t * If false, the select controller will not attempt to select a new fallback option\n\t\t * when the removed option is also the currently selection one.\n\t\t * @default false\n\t\t */\n\t\tautoSelectFallback = false,\n\t) {\n\t\tconst found = this.optionMap.get(id)\n\t\tif (!found) {\n\t\t\tconsole.error({ this: this })\n\t\t\tthrow new Error('No option found in map for id: ' + id)\n\t\t}\n\n\t\tconst btn = found\n\n\t\tthis._log.fn('remove').debug({ btn, id, this: this })\n\n\t\t// If the selected option is being removed, select the next option in the list.\n\t\tif (\n\t\t\tautoSelectFallback &&\n\t\t\tJSON.stringify(this.selected.value) === JSON.stringify(btn.option.value)\n\t\t) {\n\t\t\tconst nextIndex = this.options.indexOf(btn.option) + 1\n\t\t\tconst fallback = this.options[nextIndex % this.options.length]\n\t\t\t// this.selected = next\n\t\t\t// this.select(next)\n\t\t\tthis._log\n\t\t\t\t.fn('remove')\n\t\t\t\t.debug('Auto-selecting fallback btn', { fallback, btn, id, this: this })\n\n\t\t\tthis.select(fallback, false)\n\t\t}\n\n\t\tthis.elements.options = this.elements.options.filter(el => el !== btn.element)\n\t\tbtn.element.remove()\n\n\t\tthis.options = this.options.filter(o => o.label !== btn.option.label)\n\t\tthis.optionMap.delete(id)\n\t}\n\n\t/**\n\t * Removes all options and their elements.\n\t */\n\tclear() {\n\t\tthis._log.fn('clear').debug({ this: this })\n\t\tfor (const id of this.optionMap.keys()) {\n\t\t\tthis.remove(id, false)\n\t\t}\n\t\tthis.options = []\n\t\tthis.optionMap.clear()\n\t}\n\n\tselect = (\n\t\tv: LabeledOption<T> | Event,\n\t\t/**\n\t\t * When `false`, the select controller won't call {@link onChange}\n\t\t * to notify the parent Input or other listeners of the change.\n\t\t * @default true\n\t\t */\n\t\tbubble = true,\n\t) => {\n\t\tif (this.disabled) {\n\t\t\treturn this\n\t\t}\n\n\t\tthis._log.fn('select').debug('v', v, { this: this })\n\n\t\tif (v instanceof Event) {\n\t\t\tconst target = v.target as HTMLDivElement\n\n\t\t\tconst id = target.dataset['optionId']\n\t\t\tif (typeof id !== 'string') {\n\t\t\t\tconsole.error({ target })\n\t\t\t\tthrow new Error('No option id found on select click')\n\t\t\t}\n\n\t\t\tconst option = this.optionMap.get(id)\n\t\t\tif (!option) {\n\t\t\t\tconsole.error({ target })\n\t\t\t\tthrow new Error('No option found in map')\n\t\t\t}\n\n\t\t\tfor (const [, { element }] of this.optionMap) {\n\t\t\t\telement.classList.toggle('selected', element === option.element)\n\t\t\t}\n\n\t\t\tthis.close()\n\t\t\tthis.selected = option.option\n\t\t} else {\n\t\t\tconst newValue = toLabeledOption(v)\n\n\t\t\tif (isState(newValue)) {\n\t\t\t\tthis.selected = newValue.value as LabeledOption<T>\n\t\t\t} else if (isLabeledOption(newValue)) {\n\t\t\t\tthis.bubble = bubble\n\t\t\t\tthis.selected = newValue\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid value: ' + newValue)\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Updates the UI to reflect the current state of the source.\n\t */\n\trefresh = () => {\n\t\tthis._log.fn('refresh').debug({ this: this })\n\t\t// Make sure the selected value text is in the selected div.\n\t\tthis.elements.selected.innerHTML = this.selected.label\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Toggles the dropdown's visibility.\n\t */\n\ttoggle = () => {\n\t\tthis._log.fn('toggle').debug({ this: this })\n\t\tif (this.expanded) {\n\t\t\tthis._evm.emit('cancel')\n\t\t\tthis.close()\n\t\t} else {\n\t\t\tthis.open()\n\t\t}\n\t}\n\n\t// private _groupId = nanoid()\n\n\t/**\n\t * Shows the dropdown.\n\t */\n\topen = () => {\n\t\tthis.expanded = true\n\t\tthis._opts.input.folder.gui!.wrapper.appendChild(this.elements.dropdown)\n\t\tthis.elements.dropdown.classList.add('expanded')\n\t\tthis.elements.selected.classList.add('active')\n\t\tthis.updatePosition()\n\n\t\t// We need to monitor the selected element's scroll parent for scroll events to keep the dropdown position synced up.\n\t\tthis._scrollParent ??= getScrollParent(this.elements.selected)\n\t\tthis._scrollParent?.addEventListener('scroll', this.updatePosition)\n\n\t\tthis._evm.listen(window, 'keydown', this._closeOnEscape, {}, 'dropdown')\n\t\tthis._evm.listen(window, 'click', this._clickOutside, {}, 'dropdown')\n\n\t\tif (this._opts.selectOnHover) {\n\t\t\tthis._currentSelection = this.selected\n\n\t\t\tfor (const [, { option, element }] of this.optionMap) {\n\t\t\t\telement.classList.toggle('selected', option.label === this.selected.label)\n\n\t\t\t\t// todo - these listeners could be one listener on the dropdown that gets the option id from the target's dataset.\n\t\t\t\tconst select = () => {\n\t\t\t\t\tthis._log\n\t\t\t\t\t\t.fn('on(mouseenter)')\n\t\t\t\t\t\t.debug('currentSelection', { option, element, this: this })\n\t\t\t\t\tthis.select(option)\n\t\t\t\t}\n\t\t\t\tthis._evm.listen(element, 'mouseenter', select, {}, 'dropdown')\n\t\t\t}\n\t\t}\n\n\t\tthis._evm.emit('open')\n\n\t\tsetTimeout(() => {\n\t\t\tthis.elements.dropdown.style.pointerEvents = 'all'\n\t\t}, 200)\n\t}\n\n\t/**\n\t * Positions the dropdown to the selected element.\n\t */\n\tupdatePosition = () => {\n\t\tif (!this.expanded) return\n\n\t\tthis.elements.dropdown.style.setProperty('width', 'unset')\n\t\tthis.elements.dropdown.style.setProperty('top', 'unset')\n\n\t\tconst { dropdown, selected } = this.elements\n\t\tconst guiScrollTop = this._opts.input.folder.root.elements.content.scrollTop\n\t\tconst { top, left } = selected.getBoundingClientRect()\n\n\t\tthis.elements.dropdown.style.setProperty(\n\t\t\t'width',\n\t\t\t`${Math.max(selected.offsetWidth, dropdown.offsetWidth)}px`,\n\t\t)\n\t\tthis.elements.dropdown.style.setProperty(\n\t\t\t'top',\n\t\t\t`${top + selected.offsetHeight - guiScrollTop}px`,\n\t\t)\n\t\tthis.elements.dropdown.style.setProperty(\n\t\t\t'left',\n\t\t\t`${left + selected.offsetWidth / 2 - dropdown.offsetWidth / 2}px`,\n\t\t)\n\t}\n\n\t/**\n\t * Hides the dropdown.\n\t */\n\tclose = () => {\n\t\tthis.expanded = false\n\t\tthis.elements.dropdown.classList.remove('expanded')\n\t\tthis.elements.selected.classList.remove('active')\n\t\tthis.elements.dropdown.style.pointerEvents = 'none'\n\n\t\tthis._evm.clearGroup('dropdown')\n\n\t\tthis._evm.emit('close')\n\n\t\tsetTimeout(() => {\n\t\t\tthis.elements.dropdown.remove()\n\t\t}, 200)\n\t}\n\n\t/**\n\t * Closes the dropdown if the escape key was pressed.  If {@link selectOnHover}\n\t * is enabled, the current selection will be re-selected to restore the original\n\t * value.\n\t */\n\tprivate _closeOnEscape = (e: KeyboardEvent) => {\n\t\tif (e.key === 'Escape') {\n\t\t\tthis._cancel()\n\t\t}\n\t}\n\n\tprivate _clickOutside = (e: MouseEvent) => {\n\t\tconst path = e.composedPath()\n\t\tif (!path.includes(this.elements.selected) && !path.includes(this.elements.dropdown)) {\n\t\t\tthis._cancel()\n\t\t}\n\t}\n\n\tprivate _cancel() {\n\t\tthis.close()\n\t\tif (this._opts.selectOnHover) {\n\t\t\tthis.select(this._currentSelection)\n\t\t}\n\t\tthis._evm.emit('cancel')\n\t}\n\n\tenable() {\n\t\tthis.elements.selected.classList.remove('disabled')\n\t\tthis.elements.selected.removeAttribute('disabled')\n\t\treturn this\n\t}\n\n\tdisable() {\n\t\tthis.elements.selected.classList.add('disabled')\n\t\tthis.elements.selected.setAttribute('disabled', 'true')\n\t\treturn this\n\t}\n\n\tdispose() {\n\t\tfor (const el of values(this.elements)) {\n\t\t\tif (Array.isArray(el)) {\n\t\t\t\tel.forEach(e => e.remove())\n\t\t\t} else el.remove()\n\t\t}\n\n\t\tthis._scrollParent?.removeEventListener('scroll', this.updatePosition)\n\t\tremoveEventListener('click', this._clickOutside)\n\n\t\tthis._evm.dispose()\n\t}\n}\n\nexport function isLabeledOption<T>(v: any): v is LabeledOption<T> {\n\treturn typeof v === 'object' && Object.keys(v).length === 2 && 'label' in v && 'value' in v\n}\n\nexport function toLabeledOption<T>(v: Option<T>): LabeledOption<T> {\n\tif (isLabeledOption(v)) return v\n\n\tif (['string', 'number'].includes(typeof v)) {\n\t\treturn {\n\t\t\tlabel: String(v),\n\t\t\tvalue: v,\n\t\t} as LabeledOption<T>\n\t}\n\n\tif (isState(v)) {\n\t\tif (isLabeledOption(v.value)) return v.value as LabeledOption<T>\n\n\t\treturn {\n\t\t\tlabel: String(v.value),\n\t\t\tvalue: v,\n\t\t}\n\t}\n\n\tif (v && typeof v === 'object') {\n\t\treturn {\n\t\t\tlabel: JSON.stringify(v),\n\t\t\tvalue: v,\n\t\t}\n\t}\n\n\tconsole.error(\n\t\t'Invalid option:',\n\t\tv,\n\t\t'. Please provide a named option ({ label: string, value: T })' +\n\t\t\t'and place your value in the `value` property.',\n\t)\n\n\tthrow new Error('Missing label:' + JSON.stringify(v), { cause: { v } })\n}\n\nexport function fromLabeledOption<T>(v: Option<T> | State<Option<T>>): T {\n\tfunction rtrn(v: any) {\n\t\treturn v\n\t}\n\n\tif (isLabeledOption(v)) return rtrn(v.value)\n\n\tif (isState(v)) {\n\t\tconst t = v.value\n\t\tif (isLabeledOption(t)) {\n\t\t\treturn rtrn(t.value)\n\t\t} else {\n\t\t\treturn rtrn(t as T)\n\t\t}\n\t}\n\n\treturn v as T\n}\n"],"names":[],"mappings":"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"}