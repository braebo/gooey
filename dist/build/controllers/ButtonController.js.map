{"version":3,"file":"ButtonController.js","sources":["../../../../src/controllers/ButtonController.ts"],"sourcesContent":["import type { JavascriptStyleProperty } from '../shared/css-types'\nimport type { InputButtonGrid } from '../inputs/InputButtonGrid'\nimport type { TooltipOptions } from '../shared/Tooltip'\n\nimport { create, type CreateOptions } from '../shared/create'\nimport { EventManager } from '../shared/EventManager'\nimport { Logger } from '../shared/logger'\nimport { nanoid } from '../shared/nanoid'\nimport { toFn } from '../shared/toFn'\n\nexport type ButtonClickFunction = () => void\n\nexport type ButtonEventPayload = {\n\tevent: MouseEvent & { target: HTMLButtonElement }\n\tbutton: ButtonController\n}\n\nexport interface ButtonControllerOptions {\n\treadonly __type?: 'ButtonControllerOptions'\n\n\t/**\n\t * The text or HTML to display on the button.  If a function is passed, it will be called\n\t * on {@link ButtonController.refresh|`refresh`}.\n\t * @defaultValue `'click me'`\n\t */\n\ttext: string | (() => string)\n\n\t/**\n\t * Callback function to run when the button is clicked.  It is passed an object containing the\n\t * click event, and individual instance of the {@link ButtonController} that was clicked.\n\t *\n\t * If not provided, the click event can still be listened to via the `click` event on the\n\t * {@link ButtonController.on} method.\n\t * @defaultValue `undefined`\n\t */\n\tonClick?: (data: ButtonEventPayload) => void\n\n\t/**\n\t * Set this option to override the default id applied to the button element.  By default, the\n\t * id is generated by the {@link Logger} class.\n\t *\n\t * In an {@link InputButtonGrid}, the id is also used as the key in the\n\t * {@link InputButtonGrid.buttons} map for easy access.\n\t */\n\tid?: string\n\n\t/**\n\t * If true, the button will be disabled.  A function can be passed for dynamic disabling, as it\n\t * will be called whenever the button is refreshed.\n\t * @defaultValue `false`\n\t */\n\tdisabled?: boolean | (() => boolean)\n\n\t/**\n\t * Optional css style overrides in {@link JavascriptStyleProperty} (camelCase) format.\n\t * @example\n\t * ```ts\n\t * {\n\t *   width: '50%',\n\t *   'backgroundColor': 'red',\n\t *   border: '1px solid #000',\n\t * }\n\t * ```\n\t * @defaultValue `undefined`\n\t */\n\tstyle?: CreateOptions['style']\n\n\t/**\n\t * Optional {@link TooltipOptions}.\n\t * @defaultValue `undefined`\n\t */\n\ttooltip?: Partial<TooltipOptions>\n\n\t/**\n\t * An arbitrary value used externally by {@link InputButtonGrid}.  If a function is passed, it\n\t * will be called whenever the button is refreshed.\n\t * @defaultValue `false`\n\t */\n\tactive?: boolean | (() => boolean)\n\n\t/**\n\t * The button element to wrap.  If not provided, a new button element is created.\n\t * @defaultValue `undefined`\n\t */\n\telement?: HTMLButtonElement\n\n\t/**\n\t * If provided, the button will be appended to this parent element.\n\t * @defaultValue `undefined`\n\t */\n\tparent?: HTMLElement\n}\n\nexport interface ButtonControllerEvents {\n\t/**\n\t * Fires when the button is updated externally via the {@link ButtonController.set} method.\n\t */\n\tchange: ButtonController\n\t/**\n\t * Fires when the button is clicked.\n\t */\n\tclick: ButtonEventPayload\n\t/**\n\t * Fires when the button is refreshed via the {@link ButtonController.refresh} method.\n\t */\n\trefresh: void\n}\n\nexport const BUTTON_INPUT_DEFAULTS: ButtonControllerOptions = {\n\t__type: 'ButtonControllerOptions' as const,\n\ttext: () => 'click me',\n\tonClick: () => void 0,\n\tid: nanoid(8),\n\tdisabled: false,\n\tstyle: undefined,\n\ttooltip: undefined,\n\tactive: false,\n\telement: undefined,\n\tparent: undefined,\n} as const\n\nexport class ButtonController {\n\treadonly __type = 'ButtonController' as const\n\tstatic is(v: any): v is ButtonController {\n\t\treturn v?.__type === 'ButtonController' && v instanceof ButtonController\n\t}\n\n\tprivate _text!: () => string\n\tprivate _active = () => false\n\tprivate _disabled = () => false\n\n\telement: HTMLButtonElement\n\tparent: HTMLElement | undefined\n\n\tprivate _evm = new EventManager<ButtonControllerEvents>(['change', 'refresh', 'click'])\n\ton = this._evm.on.bind(this._evm)\n\n\tprivate _log = new Logger('ButtonController', { fg: 'coral' })\n\n\tconstructor(options: Partial<ButtonControllerOptions>) {\n\t\tconst opts = Object.assign({}, BUTTON_INPUT_DEFAULTS, options)\n\t\tthis._log.fn('constructor').debug({ opts, this: this })\n\n\t\tthis.element = opts.element\n\t\t\t? opts.element\n\t\t\t: create('button', {\n\t\t\t\t\tid: opts.id ?? nanoid(8),\n\t\t\t\t\tclasses: ['gooey-controller', 'gooey-controller-button'],\n\t\t\t\t\tparent: opts.parent,\n\t\t\t\t})\n\n\t\tthis.text = opts.text\n\t\tthis.active = opts.active\n\t\tif (typeof opts.disabled !== 'undefined') this.disabled = opts.disabled\n\n\t\tthis._evm.listen(this.element, 'click', this.click)\n\n\t\tif (opts.onClick) {\n\t\t\tthis._evm.on('click', opts.onClick)\n\t\t}\n\t}\n\n\tget id() {\n\t\treturn this.element.id\n\t}\n\n\tget text(): string {\n\t\treturn this._text()\n\t}\n\tset text(value: string | (() => string)) {\n\t\tthis._text = toFn(value)\n\t\tthis.element.innerHTML = this._text()\n\t}\n\n\tget active(): boolean {\n\t\treturn this._active()\n\t}\n\tset active(value: boolean | (() => boolean) | undefined) {\n\t\tif (typeof value === 'undefined') return\n\t\tthis._active = toFn(value)\n\t\t// this.element.classList.toggle('active', this._active())\n\t}\n\n\t/**\n\t * Set this to `true` to disable the button.  If a function is assigned, it will be called\n\t * whenever the button is refreshed.\n\t */\n\tget disabled(): boolean {\n\t\treturn this._disabled()\n\t}\n\tset disabled(value: boolean | (() => boolean) | undefined) {\n\t\tif (typeof value === 'undefined') return\n\t\tthis._disabled = toFn(value)\n\t\tthis._disabled() ? this.disable() : this.enable()\n\t}\n\n\t/**\n\t * Update the button with new options.\n\t */\n\tset(options: Partial<ButtonControllerOptions>) {\n\t\tObject.assign(this, options)\n\t\tthis._evm.emit('change', this)\n\t\tthis.refresh()\n\t}\n\n\tclick = (event: MouseEvent & { target: HTMLButtonElement }) => {\n\t\tthis._log.fn('click').debug({ this: this })\n\t\tthis._evm.emit('click', { event, button: this })\n\t\tthis.refresh()\n\t}\n\n\tenable = () => {\n\t\tif (this.disabled) return (this.disabled = false)\n\t\tthis.element.classList.remove('disabled')\n\t\tthis.element.removeAttribute('disabled')\n\t\treturn this\n\t}\n\n\tdisable = () => {\n\t\tif (!this.disabled) return (this.disabled = true)\n\t\tthis.element.classList.add('disabled')\n\t\tthis.element.setAttribute('disabled', 'true')\n\t\treturn this\n\t}\n\n\trefresh = () => {\n\t\tthis.element.toggleAttribute('disabled', this.disabled)\n\t\tthis.element.classList.toggle('disabled', this.disabled)\n\t\tthis.element.innerHTML = this.text\n\t\t// this.element.classList.toggle('active', this.active)\n\t\tthis._evm.emit('refresh')\n\t\treturn this\n\t}\n\n\ttoJSON() {\n\t\treturn {\n\t\t\t__type: this.__type,\n\t\t\tid: this.id,\n\t\t\ttext: this.text,\n\t\t\tactive: this.active,\n\t\t\tdisabled: this.disabled,\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.element.remove()\n\t\tthis._evm.dispose()\n\t}\n}\n"],"names":[],"mappings":"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"}