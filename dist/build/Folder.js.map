{"version":3,"file":"Folder.js","sources":["../../../src/Folder.ts"],"sourcesContent":["// The custom-regions extension is recommended for this file.\n\nimport { DEV } from 'esm-env'\n\nimport type {\n\tInput,\n\tInputOptions,\n\tInputPreset,\n\tInputType,\n\tValidInput,\n\tValidInputValue,\n} from './inputs/Input'\nimport type { ColorFormat } from './shared/color/types/colorFormat'\nimport type { LabeledOption, Option } from './controllers/Select'\nimport type { GooeyOptions, GooeyPreset } from './Gooey'\nimport type { Tooltip } from './shared/Tooltip'\n\nimport { InputSwitch, type SwitchInputOptions } from './inputs/InputSwitch'\nimport { InputButton, type ButtonInputOptions } from './inputs/InputButton'\nimport { InputSelect, type SelectInputOptions } from './inputs/InputSelect'\nimport { InputNumber, type NumberInputOptions } from './inputs/InputNumber'\nimport { InputColor, type ColorInputOptions } from './inputs/InputColor'\nimport { InputText, type TextInputOptions } from './inputs/InputText'\nimport { isLabeledOption } from './controllers/Select'\nimport {\n\tInputButtonGrid,\n\ttype ButtonGridInputOptions,\n\ttype ButtonGridArrays,\n} from './inputs/InputButtonGrid'\n\nimport { animateConnector, createFolderConnector, createFolderSvg } from './svg/createFolderSVG'\nimport { Color, isColor, isColorFormat } from './shared/color/color'\nimport { composedPathContains } from './shared/cancelClassFound'\nimport { fromState, state, type State } from './shared/state'\nimport { EventManager } from './shared/EventManager'\nimport { TerminalSvg } from './svg/TerminalSvg'\nimport { Search } from './toolbar/Search'\nimport { create } from './shared/create'\nimport { select } from './shared/select'\nimport { Logger } from './shared/logger'\nimport { nanoid } from './shared/nanoid'\nimport { defer } from './shared/defer'\nimport { toFn } from './shared/toFn'\nimport { Gooey } from './Gooey'\n\n//· Types ························································································¬\n\ntype InvalidBinding = never\n\n/**\n * Resolves the provided value to the corresponding {@link InputOptions} type associated with the type\n * based on what type of {@link InputOptions.value|`value`} property it expects.\n */\nexport type InferOptions<T> = T extends number\n\t? NumberInputOptions\n\t: T extends boolean\n\t\t? SwitchInputOptions\n\t\t: T extends ColorFormat\n\t\t\t? ColorInputOptions\n\t\t\t: T extends string\n\t\t\t\t? TextInputOptions\n\t\t\t\t: T extends Array<infer T>\n\t\t\t\t\t? SelectInputOptions<T>\n\t\t\t\t\t: T extends Option<infer T>\n\t\t\t\t\t\t? SelectInputOptions<T>\n\t\t\t\t\t\t: InputOptions\n\n/**\n * Resolves any provided value to the corresponding {@link ValidInput} associated with the type.\n */\nexport type InferInput<TValueType> = TValueType extends number\n\t? InputNumber\n\t: TValueType extends boolean\n\t\t? InputSwitch\n\t\t: TValueType extends ColorFormat\n\t\t\t? InputColor\n\t\t\t: TValueType extends string\n\t\t\t\t? InputText\n\t\t\t\t: TValueType extends Array<infer T>\n\t\t\t\t\t? InputSelect<T>\n\t\t\t\t\t: TValueType extends Option<infer T>\n\t\t\t\t\t\t? InputSelect<T>\n\t\t\t\t\t\t: ValidInput\n\n/**\n * Resolves a target object to a type that represents the same structure, but with all values\n * replaced with the corresponding input type that would be generated by\n * {@link Folder.addMany|`addMany`} or {@link Folder.bindMany|`bindMany`}.\n * @template TTarget - The target object being used to generate inputs.\n */\nexport type InferTarget<TTarget> =\n\tTTarget extends Record<string, any>\n\t\t? {\n\t\t\t\t[K in keyof TTarget]: TTarget[K] extends number\n\t\t\t\t\t? InputNumber\n\t\t\t\t\t: TTarget[K] extends boolean\n\t\t\t\t\t\t? InputSwitch\n\t\t\t\t\t\t: TTarget[K] extends string\n\t\t\t\t\t\t\t? InputText\n\t\t\t\t\t\t\t: TTarget[K] extends Array<infer T>\n\t\t\t\t\t\t\t\t? InputSelect<T>\n\t\t\t\t\t\t\t\t: TTarget[K] extends ColorFormat\n\t\t\t\t\t\t\t\t\t? InputColor\n\t\t\t\t\t\t\t\t\t: TTarget[K] extends object\n\t\t\t\t\t\t\t\t\t\t? InferTarget<TTarget[K]>\n\t\t\t\t\t\t\t\t\t\t: never\n\t\t\t}\n\t\t: never\n\n/**\n * Resolves a target object to a type that represents the same structure, but with all values\n * replaced with the corresponding input options type accepted by the input type that would be\n * @template TTarget - The target object being used to generate inputs.\n * @example\n * ```typescript\n * const target = { foo: 5, bar: 'baz' }\n * // The inferred result:\n * type TargetOptions = InferTargetOptions<typeof target>\n * // Generates:\n * \tfoo: NumberInputOptions,\n * \tbar: TextInputOptions,\n * }\n * ```\n */\nexport type InferTargetOptions<TTarget> = {\n\t[K in keyof TTarget]?: TTarget[K] extends Array<infer U>\n\t\t? Partial<SelectInputOptions<U>>\n\t\t: TTarget[K] extends object\n\t\t\t? InferTargetOptions<TTarget[K]> & { folderOptions?: Partial<FolderOptions> }\n\t\t\t: Partial<InferOptions<TTarget[K]>>\n}\n\n/**\n * Resolves a target object into a flat array of all keys that are not objects,\n * recursively resolving objects into their keys.\n * @template TTarget - The target object being used to generate inputs.\n */\ntype InferTargetKeys<TTarget> = TTarget extends object\n\t? {\n\t\t\t[K in keyof TTarget]:\n\t\t\t\t| K\n\t\t\t\t| InferTargetKeys<\n\t\t\t\t\t\t// Circular reference guard.\n\t\t\t\t\t\tExclude<TTarget[K], TTarget>\n\t\t\t\t  >\n\t\t}[keyof TTarget]\n\t: never\n\nexport interface FolderOptions {\n\t__type?: 'FolderOptions'\n\n\t/**\n\t * The element to append the folder to (usually\n\t * the parent folder's content element).\n\t */\n\tcontainer: HTMLElement\n\n\t/**\n\t * The title of the folder.\n\t * @default ''\n\t */\n\ttitle?: string\n\n\t/**\n\t * A preset namespace to use for saving/loading.  By default, the {@link title|`title`}\n\t * is used, in combiniation with the parent folder's title (and so on up the hierarchy).\n\t * Therefore, if you want to use presets, you will only need to set this if you:\n\t * - Use the same title for multiple inputs _in the same {@link Folder}_, or\n\t * - Leave all titles empty\n\t * Otherwise, this can be left as the default and presets will work as expected.\n\t * @default The provided `title`.\n\t */\n\tpresetId?: string\n\n\t/**\n\t * The child folders of this folder.\n\t */\n\tchildren?: Folder[]\n\n\t/**\n\t * Whether the folder should be collapsed by default.\n\t * @default false\n\t */\n\tclosed?: boolean\n\n\t/**\n\t * Whether the folder should be hidden by default.  If a function is\n\t * provided, it will be called to determine the hidden state.  Use\n\t * {@link Folder.refresh} to update the hidden state.\n\t * @default false\n\t */\n\thidden?: boolean | (() => boolean)\n\n\t/**\n\t * Any controls this folder should contain.\n\t */\n\tcontrols?: Map<string, ValidInput>\n\n\t/**\n\t * Whether this Folder should be saved as a {@link FolderPreset} when saving the\n\t * {@link GooeyPreset} for the {@link Gooey} this Folder belongs to.  If `false`, this Input will\n\t * be skipped.\n\t * @default true\n\t */\n\tsaveable?: boolean\n\n\t/**\n\t * The order in which this input should appear in its folder relative to the other inputs.\n\t * - To force an input to be first *(at the top of its folder)*, set `order` to `0` or below.\n\t * - To force an input to be last *(at the bottom of its folder)*, set `order` to any number\n\t * greater than number of inputs + 1.\n\t * @default folder.inputs.size + folder.children.size + 1\n\t */\n\torder?: number\n\n\t/**\n\t * When `true`, a search input will be added to the folder's toolbar, allowing users to search\n\t * for inputs within the folder by title.  By default, only the root folder is searchable.\n\t * @default false\n\t */\n\tsearchable?: boolean\n\n\t/**\n\t * Disables all user interactions and dims the folder brightness.  If a function is provided,\n\t * it will be called to update the disabled state each time the {@link refresh} method runs.\n\t * @default false\n\t */\n\tdisabled?: boolean | (() => boolean)\n}\n\n/**\n * @internal\n */\nexport interface InternalFolderOptions {\n\t__type?: 'InternalFolderOptions'\n\n\t/**\n\t * The parent folder of this folder (or a circular reference if this is the root folder).\n\t */\n\tparentFolder?: Folder\n\n\t/**\n\t * The GUI instance this folder belongs to.\n\t */\n\tgooey?: Gooey\n\n\t/**\n\t * Whether this folder is the root folder.  Always true when\n\t * creating a `new Folder()`. Always false inside of the\n\t * `gooey.addFolder` and `folder.addFolder` methods.\n\t * Be wary of infinite loops when setting manually.\n\t * @default true\n\t * @internal\n\t */\n\tisRoot: boolean\n\n\t/**\n\t * Temporarily bypasses the folder open/close animations upon creation.\n\t * @internal\n\t */\n\t_skipAnimations: boolean\n\n\t/**\n\t * Hides the folder header.\n\t * @default false\n\t * @internal\n\t */\n\t_headerless: boolean\n}\n\n/**\n * A folder preset stores the state of a folder and all of its inputs, as well as the state of all\n * child folders and their inputs.\n */\nexport interface FolderPreset {\n\t__type: 'FolderPreset'\n\tid: string\n\ttitle: string\n\thidden: boolean\n\tchildren: FolderPreset[]\n\tinputs: InputPreset<any>[]\n}\n\nexport interface FolderElements {\n\theader: HTMLElement\n\ttitle: HTMLElement\n\tcontentWrapper: HTMLElement\n\tcontent: HTMLElement\n\ttoolbar: {\n\t\tcontainer: HTMLElement\n\t\tsettingsButton?: HTMLButtonElement & { tooltip?: Tooltip }\n\t}\n}\n\nexport interface FolderEvents {\n\t/**\n\t * When any input in the folder changes, this event emits the input that changed.\n\t */\n\tchange: ValidInput\n\n\t/**\n\t * When the folder is opened or closed, this event emits the new\n\t * {@link Folder.closed | `closed`} state.\n\t */\n\ttoggle: Folder['closed']['value']\n\n\t/**\n\t * Fires when {@link Folder.refresh} is called.\n\t */\n\trefresh: void\n\n\t/**\n\t * Fired after the folder and all of it's children/graphics have been mounted.\n\t */\n\tmount: void\n}\n//⌟\n\n//· Contants ·····················································································¬\n\nconst FOLDER_DEFAULTS = Object.freeze({\n\tpresetId: '',\n\ttitle: '',\n\tchildren: [],\n\tclosed: false,\n\thidden: false,\n\tcontrols: new Map(),\n\tsaveable: true,\n\tdisabled: false,\n}) satisfies Omit<FolderOptions, 'container'>\n\n/**\n * Internal folder creation api defaults.\n */\nconst INTERNAL_FOLDER_DEFAULTS = {\n\t__type: 'InternalFolderOptions',\n\tparentFolder: undefined,\n\tisRoot: true,\n\t_skipAnimations: true,\n\tgooey: undefined,\n\t_headerless: false,\n} as const satisfies InternalFolderOptions\n//⌟\n\n/**\n * Folder is a container for organizing and grouping {@link Input|Inputs} and child Folders.\n *\n * This class should not be instantiated directly.  Instead, use the {@link Gooey.addFolder} method.\n *\n * @example\n * ```typescript\n * const gooey = new Gooey()\n * const folder = gooey.addFolder({ title: 'My Folder' })\n * folder.addNumber({ title: 'foo', value: 5 })\n * ```\n */\nexport class Folder {\n\t//· Props ····················································································¬\n\t__type = 'Folder' as const\n\tisRoot = true\n\tid = nanoid()\n\tgooey?: Gooey\n\n\t/**\n\t * A preset namespace to use for saving/loading.  By default, the {@link title|`title`}\n\t * is used, in combiniation with the parent folder's title (and so on up the hierarchy).\n\t * Therefore, if you want to use presets, you will only need to set this if you:\n\t * - Use the same title for multiple inputs _in the same {@link Folder}_, or\n\t * - Leave all titles empty\n\t * Otherwise, this can be left as the default and presets will work as expected.\n\t * @default The provided `title`.\n\t */\n\tpresetId: string\n\n\t/**\n\t * Whether this Folder should be saved as a {@link FolderPreset} when saving the\n\t * {@link GooeyPreset} for the {@link Gooey} this Folder belongs to.  If `false`, this Input will\n\t * be skipped.\n\t * @default true\n\t */\n\tsaveable: boolean\n\n\t/**\n\t * The child folders of this folder.\n\t */\n\tchildren = [] as Folder[]\n\n\t/**\n\t * All inputs added to this folder.\n\t */\n\tinputs = new Map<string, ValidInput>()\n\n\t/**\n\t * The root folder.  All folders share a reference to the same root folder.\n\t */\n\troot: Folder\n\n\t/**\n\t * The parent folder of this folder (or a circular reference if this is the root folder).\n\t */\n\tparentFolder: Folder\n\n\t/**\n\t * The folder containing Gooey instance settings, like the `ui` and `presets` sections.\n\t */\n\tsettingsFolder!: Folder\n\n\t/**\n\t * An observable responsible for the folder's open/closed state.  Setting this value will\n\t * open/close the folder, and subscribing to this value will allow you to listen for\n\t * open/close events.\n\t */\n\tclosed: State<boolean>\n\n\t/**\n\t * The folder's root container element, containing all other related folder {@link elements}.\n\t */\n\telement: HTMLDivElement\n\n\t/**\n\t * All HTMLElements that make up the folder's UI.\n\t */\n\telements = {} as {\n\t\theader: HTMLElement\n\t\ttitle: HTMLElement\n\t\tcontentWrapper: HTMLElement\n\t\tcontent: HTMLElement\n\t\ttoolbar: {\n\t\t\tcontainer: HTMLElement\n\t\t\tsettingsButton?: HTMLButtonElement & { tooltip?: Tooltip }\n\t\t}\n\t}\n\n\t/**\n\t * The animated svg graphics belonging to the folder.\n\t */\n\tgraphics?: {\n\t\ticon: HTMLDivElement\n\t\tconnector?: {\n\t\t\tcontainer: HTMLDivElement\n\t\t\tsvg: SVGElement\n\t\t\tpath: SVGPathElement\n\t\t\tupdate: () => void\n\t\t}\n\t}\n\n\t/**\n\t * The event manager for the folder.  This should rarely need to be accessed directly, since\n\t * subscribing to events can be done with a Folder's {@link on} method.\n\t * @internal\n\t */\n\tevm = new EventManager<FolderEvents>(['change', 'refresh', 'toggle', 'mount'])\n\n\t/**\n\t * Equivalent to `addEventListener`.\n\t */\n\ton = this.evm.on.bind(this.evm)\n\n\t/**\n\t * The pixel height of the folder header element.\n\t * @internal\n\t */\n\tprivate initialHeaderHeight = 0\n\n\tprivate _title: string\n\tprivate _hidden = false\n\tprivate _hiddenFn?: () => boolean\n\tprivate _disabled = () => false\n\tprivate _log: Logger\n\t/**\n\t * Used to disable clicking the header to open/close the folder.\n\t */\n\tprivate _disabledTimer?: ReturnType<typeof setTimeout>\n\t/**\n\t * The time in ms to wait after mousedown before disabling toggle for a potential drag.\n\t */\n\tprivate _clickTime = 200\n\t/**\n\t * Whether clicking the header to open/close the folder is disabled.\n\t */\n\tprivate _clicksDisabled = false\n\tprivate _depth = -1\n\t/**\n\t * Maps preset ids to their inputs.\n\t */\n\tprivate static _presetIdMap = new Map<string, string>()\n\t/**\n\t * The duration of the open/close and hide/show animations in ms.\n\t * @default 350\n\t *\n\t * @todo This needs to sync with the animation duration in the css.\n\t */\n\tprivate _animDuration = 350\n\t//⌟\n\tconstructor(options: FolderOptions) {\n\t\tif (!('container' in options)) {\n\t\t\tthrow new Error('Folder must have a container.')\n\t\t}\n\n\t\tconst opts = Object.assign(\n\t\t\t{},\n\t\t\tFOLDER_DEFAULTS,\n\t\t\tINTERNAL_FOLDER_DEFAULTS,\n\t\t\t{\n\t\t\t\tgooey: this.gooey,\n\t\t\t\tisRoot: true,\n\t\t\t} as const,\n\t\t\toptions,\n\t\t) as FolderOptions & InternalFolderOptions\n\n\t\tthis._log = new Logger(`Folder ${opts.title}`, { fg: 'DarkSalmon' })\n\t\tthis._log.fn('constructor').debug({ opts, this: this })\n\n\t\tthis.isRoot = opts.isRoot\n\n\t\tif (this.isRoot) {\n\t\t\tthis._depth = 0\n\t\t\tthis.parentFolder = this\n\t\t\tthis.root = this\n\t\t} else {\n\t\t\tif (!opts.parentFolder) {\n\t\t\t\tthrow new Error('Non-root folders must have a parent folder.')\n\t\t\t}\n\t\t\tthis.parentFolder = opts.parentFolder\n\t\t\tthis._depth = this.parentFolder._depth + 1\n\t\t\tthis.root = this.parentFolder.root\n\t\t}\n\n\t\tthis.gooey = opts.gooey\n\t\tthis._title = opts.title ?? ''\n\n\t\tthis.element = this._createElement(opts)\n\t\tthis.element.style.setProperty(\n\t\t\t'order',\n\t\t\topts.order?.toString() ??\n\t\t\t\t`${this.parentFolder.children.length + this.parentFolder.inputs.size + 1}`,\n\t\t)\n\t\tthis.elements = this._createElements(this.element)\n\n\t\tthis.presetId = opts.presetId || this._resolvePresetId()\n\n\t\topts.closed ??= false\n\t\tif (\n\t\t\ttypeof this.gooey!.opts.storage === 'object' &&\n\t\t\ttypeof this.gooey!.opts.storage.closed === 'boolean'\n\t\t) {\n\t\t\t// @ts-expect-error @internal\n\t\t\tlet closedStorage = this.gooey!._closedMap.get()[this.presetId]\n\t\t\tif (typeof closedStorage !== 'undefined') opts.closed = closedStorage\n\t\t}\n\t\tthis.closed = state(opts.closed)\n\n\t\tthis.saveable = !!opts.saveable\n\n\t\tif (this.isRoot || opts.searchable) {\n\t\t\tnew Search(this)\n\t\t}\n\n\t\tthis.element.classList.add('instant')\n\t\tthis.initialHeaderHeight = this.elements.header.scrollHeight\n\n\t\tif (typeof opts.hidden === 'function') {\n\t\t\tthis._hiddenFn = opts.hidden\n\t\t\tthis._hidden = this._hiddenFn()\n\t\t} else {\n\t\t\tthis._hidden = !!opts.hidden\n\t\t}\n\n\t\tthis._disabled = toFn(opts.disabled ?? false)\n\n\t\tthis._createGraphics(opts._headerless).then(() => {\n\t\t\tthis.evm.emit('mount')\n\n\t\t\t// Open/close the folder when the closed state changes.\n\t\t\tthis.evm.add(\n\t\t\t\tthis.closed.subscribe(v => {\n\t\t\t\t\tv ? this.close() : this.open()\n\t\t\t\t\tthis.evm.emit('toggle', v)\n\t\t\t\t\t// @ts-expect-error @internal\n\t\t\t\t\tthis.gooey._closedMap.update(m => {\n\t\t\t\t\t\tm[this.presetId] = v\n\t\t\t\t\t\treturn m\n\t\t\t\t\t})\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tif (opts.closed) {\n\t\t\t\tthis.closed.set(opts.closed)\n\t\t\t}\n\n\t\t\tif (this._hidden) this.hide(true)\n\t\t})\n\n\t\tsetTimeout(() => {\n\t\t\tthis.element.classList.toggle('disabled', this._disabled())\n\t\t}, 100)\n\t}\n\n\t//· Getters/Setters ··········································································¬\n\n\t/**\n\t * The folder's title.  Changing this will update the UI.\n\t */\n\tget title(): string {\n\t\treturn this._title\n\t}\n\tset title(v: string) {\n\t\tif (v === this._title) return\n\t\tthis._title = v\n\t\tthis.elements.title.animate(\n\t\t\t{\n\t\t\t\topacity: 0,\n\t\t\t\ttransform: 'translateY(-0.33rem)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tduration: 75,\n\t\t\t\teasing: 'ease-out',\n\t\t\t\tfill: 'forwards',\n\t\t\t},\n\t\t).onfinish = () => {\n\t\t\tthis.elements.title.innerHTML = v\n\t\t\tthis.elements.title.animate(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\ttransform: 'translateY(.33rem)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\ttransform: 'translateY(0rem)',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tdelay: 0,\n\t\t\t\t\tduration: 75,\n\t\t\t\t\teasing: 'ease-in',\n\t\t\t\t\tfill: 'forwards',\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n\n\t/**\n\t * Whether the folder is visible.\n\t */\n\tget hidden(): boolean {\n\t\treturn this._hidden\n\t}\n\n\t/**\n\t * Whether the input is disabled.  Modifying this value will update the UI.\n\t */\n\tget disabled(): boolean {\n\t\treturn this.element.classList.contains('disabled')\n\t}\n\tset disabled(v: boolean | (() => boolean)) {\n\t\tthis.element.classList.toggle('disabled', toFn(v)())\n\t}\n\n\t/**\n\t * A flat array of all child folders of this folder (and their children, etc).\n\t */\n\tget allChildren(): Folder[] {\n\t\treturn this.children.flatMap<Folder>(child => [child, ...child.allChildren])\n\t}\n\n\t/**\n\t * A flat array of all inputs in all child folders of this folder (and their children, etc).\n\t * See Input Generators region.\n\t */\n\tget allInputs(): Map<string, ValidInput> {\n\t\tconst allControls = new Map<string, ValidInput>()\n\t\tfor (const child of [this, ...this.allChildren]) {\n\t\t\tfor (const [key, value] of child.inputs.entries()) {\n\t\t\t\tallControls.set(key, value)\n\t\t\t}\n\t\t}\n\t\treturn allControls\n\t}\n\n\tisRootFolder(): this is Folder & { isRoot: true } {\n\t\treturn this.isRoot\n\t}\n\t//⌟\n\n\t//· Folders ··················································································¬\n\n\taddFolder(title?: string, options?: Partial<FolderOptions>): Folder {\n\t\toptions ??= {}\n\t\toptions.title ??= title\n\t\tthis._log.fn('addFolder').debug({ options, this: this })\n\t\tconst defaults = Object.assign({}, INTERNAL_FOLDER_DEFAULTS, {\n\t\t\tparentFolder: this,\n\t\t\tdepth: this._depth + 1,\n\t\t\tgooey: this.gooey,\n\t\t})\n\n\t\tconst overrides = {\n\t\t\t__type: 'InternalFolderOptions',\n\t\t\tcontainer: this.elements.content,\n\t\t\tgooey: this.gooey,\n\t\t\tisRoot: false,\n\t\t}\n\n\t\tconst opts = Object.assign({}, defaults, options, overrides) as FolderOptions &\n\t\t\tInternalFolderOptions\n\n\t\tconst folder = new Folder(opts)\n\t\tfolder.on('change', v => this.evm.emit('change', v))\n\n\t\tthis.children.push(folder)\n\n\t\tif (opts._headerless) {\n\t\t\tfolder.initialHeaderHeight ??= folder.elements.header.scrollHeight\n\t\t\tfolder.elements.header.style.display = 'none'\n\t\t}\n\n\t\treturn folder\n\t}\n\n\tprivate _handleClick(event: PointerEvent): void {\n\t\tif (event.button !== 0) return\n\n\t\tthis._log.fn('#handleClick').debug({ event, this: this })\n\n\t\tthis.element.removeEventListener('pointerup', this.toggle)\n\t\tthis.element.addEventListener('pointerup', this.toggle, { once: true })\n\n\t\t// Abort if a toolbar button was clicked.\n\t\tif (composedPathContains(event, 'gooey-cancel')) return this._disableClicks()\n\n\t\t// We need to watch for the mouseup event within a certain timeframe\n\t\t// to make sure we don't accidentally trigger a click after dragging.\n\t\tclearTimeout(this._disabledTimer)\n\t\t// First we delay the drag check to allow for messy clicks.\n\t\tthis._disabledTimer = setTimeout(() => {\n\t\t\tthis.elements.header.removeEventListener('pointermove', this._disableClicks)\n\t\t\tthis.elements.header.addEventListener('pointermove', this._disableClicks, {\n\t\t\t\tonce: true,\n\t\t\t})\n\n\t\t\t// Then we set a timer to disable the drag check.\n\t\t\tthis._disabledTimer = setTimeout(() => {\n\t\t\t\tthis.elements.header.removeEventListener('pointermove', this._disableClicks)\n\t\t\t\tthis.element.removeEventListener('pointerup', this.toggle)\n\t\t\t\tthis._clicksDisabled = false\n\t\t\t}, this._clickTime)\n\t\t}, 150)\n\n\t\tif (this._clicksDisabled) return\n\t}\n\tprivate _disableClicks = (): void => {\n\t\tif (!this._clicksDisabled) {\n\t\t\tthis._clicksDisabled = true\n\t\t\tthis._log.fn('disable').debug('Clicks DISABLED')\n\t\t}\n\t\tthis._clicksDisabled = true\n\t\tclearTimeout(this._disabledTimer)\n\t}\n\tprivate _resetClicks(): void {\n\t\tthis._log.fn('cancel').debug('Clicks ENABLED')\n\t\tremoveEventListener('pointerup', this.toggle)\n\t\tthis._clicksDisabled = false\n\t}\n\n\t//·· Open/Close ······································································¬\n\n\ttoggle = (): this => {\n\t\tthis._log.fn('toggle').debug()\n\t\tclearTimeout(this._disabledTimer)\n\t\tif (this._clicksDisabled) {\n\t\t\tthis._resetClicks()\n\t\t\treturn this\n\t\t}\n\n\t\t// If the folder is being dragged, don't toggle.\n\t\tif (this.element.classList.contains('gooey-dragged')) {\n\t\t\tthis.element.classList.remove('gooey-dragged')\n\t\t\treturn this\n\t\t}\n\n\t\tconst state = !this.closed.value\n\n\t\tthis.closed.set(state)\n\n\t\tthis.evm.emit('toggle', state)\n\n\t\treturn this\n\t}\n\n\topen(updateState = false): this {\n\t\tthis._log.fn('open').debug()\n\t\tthis.element.classList.remove('closed')\n\t\tthis.evm.emit('toggle', false)\n\t\tif (updateState) this.closed.set(false)\n\n\t\tthis._clicksDisabled = false\n\n\t\tthis._toggleClass()\n\t\tanimateConnector(this, 'open')\n\t\treturn this\n\t}\n\n\tclose(updateState = false): this {\n\t\tthis._log.fn('close').debug()\n\n\t\tthis.element.classList.add('closed')\n\t\tif (updateState) this.closed.set(true)\n\t\tthis.evm.emit('toggle', true)\n\t\tthis._clicksDisabled = false\n\n\t\tthis._toggleClass()\n\t\tanimateConnector(this, 'close')\n\t\treturn this\n\t}\n\n\tprivate static _EASE = {\n\t\tshow: 'cubic-bezier(.05,1,.56,.91)',\n\t\thide: 'cubic-bezier(0.9, 0, 0.9, 0)',\n\t\tslow: 'cubic-bezier(.41,.77,.36,.96)',\n\t}\n\n\tprivate static _SHOW_ANIM = [\n\t\t{\n\t\t\toffset: 0,\n\t\t\tgridTemplateRows: '0fr',\n\t\t\tclipPath: 'inset(50%)',\n\t\t\twebkitClipPath: 'inset(50%)',\n\t\t\teasing: Folder._EASE.show,\n\t\t},\n\t\t{\n\t\t\toffset: 0.1,\n\t\t\tclipPath: 'inset(49% 50%)',\n\t\t\twebkitClipPath: 'inset(49% 50%)',\n\t\t\teasing: Folder._EASE.show,\n\t\t\tfilter: 'brightness(10)',\n\t\t},\n\t\t{\n\t\t\toffset: 0.35,\n\t\t\tclipPath: 'inset(49% 0%)',\n\t\t\twebkitClipPath: 'inset(49% 0%)',\n\t\t\teasing: 'linear',\n\t\t\tfilter: 'brightness(1)',\n\t\t},\n\t\t{\n\t\t\toffset: 0.36,\n\t\t\tclipPath: 'inset(49% 0%)',\n\t\t\twebkitClipPath: 'inset(49% 0%)',\n\t\t\teasing: Folder._EASE.slow,\n\t\t},\n\t\t{\n\t\t\toffset: 1,\n\t\t\tgridTemplateRows: '1fr',\n\t\t\tclipPath: 'inset(0%)',\n\t\t\twebkitClipPath: 'inset(0%)',\n\t\t},\n\t]\n\n\tprivate static _HIDE_ANIM = [\n\t\t{\n\t\t\toffset: 0,\n\t\t\tgridTemplateRows: '0fr',\n\t\t\tclipPath: 'inset(50%)',\n\t\t\twebkitClipPath: 'inset(50%)',\n\t\t\teasing: Folder._EASE.hide,\n\t\t},\n\t\t{\n\t\t\toffset: 0.1,\n\t\t\tclipPath: 'inset(49% 50%)',\n\t\t\twebkitClipPath: 'inset(49% 50%)',\n\t\t\tfilter: 'brightness(10)',\n\t\t},\n\t\t{\n\t\t\toffset: 0.42,\n\t\t\tclipPath: 'inset(49% 0%)',\n\t\t\twebkitClipPath: 'inset(49% 0%)',\n\t\t\tfilter: 'brightness(1)',\n\t\t},\n\t\t{\n\t\t\toffset: 0.43,\n\t\t\tclipPath: 'inset(49% 0%)',\n\t\t\twebkitClipPath: 'inset(49% 0%)',\n\t\t\teasing: Folder._EASE.slow,\n\t\t},\n\t\t{\n\t\t\toffset: 1,\n\t\t\tgridTemplateRows: '1fr',\n\t\t\tclipPath: 'inset(0%)',\n\t\t\twebkitClipPath: 'inset(0%)',\n\t\t},\n\t]\n\n\ttoggleHidden(\n\t\t/**\n\t\t * Whether to show the folder instantly, bypassing the animation.\n\t\t * @default false\n\t\t */\n\t\tinstant = false,\n\t): this {\n\t\tthis._log.fn('toggleHidden').debug()\n\t\tthis.hidden ? this.show(instant) : this.hide(instant)\n\t\treturn this\n\t}\n\n\tasync show(\n\t\t/**\n\t\t * Whether to show the folder instantly, bypassing the animation.\n\t\t * @default false\n\t\t */\n\t\tinstant = false,\n\t): Promise<this> {\n\t\tthis._log.fn('show').debug({ instant })\n\t\tthis._hidden = false\n\n\t\tconst anim = await this.element.animate(Folder._SHOW_ANIM, {\n\t\t\tduration: instant ? 0 : this._animDuration,\n\t\t\tfill: 'forwards',\n\t\t}).finished\n\n\t\tif (!this._hidden && this.element) anim.commitStyles()\n\n\t\treturn this\n\t}\n\n\tasync hide(\n\t\t/**\n\t\t * Whether to show the folder instantly, bypassing the animation.\n\t\t * @default false\n\t\t */\n\t\tinstant = false,\n\t): Promise<this> {\n\t\tthis._log.fn('hide').debug({ instant })\n\t\tthis._hidden = true\n\n\t\tconst anim = await this.element.animate(Folder._HIDE_ANIM, {\n\t\t\tduration: instant ? 0 : this._animDuration,\n\t\t\tdirection: 'reverse',\n\t\t\tfill: 'forwards',\n\t\t}).finished\n\n\t\tif (this._hidden && this.element) anim.commitStyles()\n\n\t\treturn this\n\t}\n\n\tprivate _toggleTimeout!: ReturnType<typeof setTimeout>\n\tprivate _toggleClass = (classname = 'animating' as string | string[]): void => {\n\t\tconst classes = Array.isArray(classname) ? classname : [classname]\n\t\tthis.element.classList.add(...classes)\n\n\t\tclearTimeout(this._toggleTimeout)\n\t\tthis._toggleTimeout = setTimeout(() => {\n\t\t\tthis.element.classList.remove(...classes)\n\t\t}, this._animDuration)\n\t}\n\t//⌟\n\n\t//·· Save/Load ···············································································¬\n\n\tprivate _resolvePresetId = (identifiers: string[] = [], opts?: InputOptions): string => {\n\t\tconst parts = [] as string[]\n\n\t\tlet id = opts?.presetId\n\n\t\tif (!id) {\n\t\t\tlet folder: Folder = this\n\t\t\twhile (!folder.isRoot) {\n\t\t\t\tparts.unshift(folder.title)\n\t\t\t\tfolder = folder.parentFolder\n\t\t\t}\n\n\t\t\tparts.unshift(this.root.title)\n\t\t}\n\n\t\tid ??= [...parts, ...identifiers].join('__')\n\n\t\tlet i = 0\n\t\twhile (this.inputs.has(id)) {\n\t\t\ti++\n\t\t\tid = i ? `${id}_${i}` : id\n\t\t}\n\n\t\tthis._log.fn('resolvePresetId', this.title, ...identifiers).debug({ id, opts, this: this })\n\t\treturn id\n\t}\n\n\tsave(): FolderPreset {\n\t\tthis._log.fn('save').debug({ this: this })\n\n\t\tif (this.saveable !== true) {\n\t\t\tthrow new Error('Attempted to save unsaveable Folder: ' + this.title)\n\t\t}\n\n\t\tconst preset: FolderPreset = {\n\t\t\t__type: 'FolderPreset',\n\t\t\tid: this.presetId,\n\t\t\ttitle: this.title,\n\t\t\t// closed: this.closed.value,\n\t\t\thidden: toFn(this._hidden)(),\n\t\t\tchildren: this.children\n\t\t\t\t.filter(c => c.title !== this.gooey!.settingsFolder.title && c.saveable)\n\t\t\t\t.map(child => child.save()),\n\t\t\tinputs: Array.from(this.inputs.values())\n\t\t\t\t.filter(i => i.opts.saveable)\n\t\t\t\t.map(input => input.save()),\n\t\t}\n\n\t\treturn preset\n\t}\n\n\t/**\n\t * Updates all inputs with values from the {@link FolderPreset}.  If the preset has children,\n\t * those presets will also be passed to the corresponding child folders'\n\t * {@link Folder.load|`load`} method.\n\t */\n\tload(preset: FolderPreset): this {\n\t\tthis._log.fn('load').debug({ preset, this: this })\n\n\t\t// this.closed.set(preset.closed) // todo - global settings?\n\n\t\tif (preset.hidden !== this.hidden) {\n\t\t\tpreset.hidden ? this.hide() : this.show(true)\n\t\t}\n\n\t\tfor (const input of this.inputs.values()) {\n\t\t\tconst inputPreset = preset.inputs.find(c => c.presetId === input.opts.presetId)\n\t\t\tif (!inputPreset) {\n\t\t\t\tconsole.warn(`Missing input for preset: ${preset.title}`, {\n\t\t\t\t\tpreset,\n\t\t\t\t\tinput,\n\t\t\t\t\tthis: this,\n\t\t\t\t})\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tinput.load(inputPreset)\n\t\t}\n\n\t\tfor (const child of this.children) {\n\t\t\tif (!child.saveable) continue\n\n\t\t\tconst folderPreset = preset.children?.find(f => f.id === child.presetId)\n\t\t\tif (!folderPreset) {\n\t\t\t\tconsole.warn(`No folder found with presetId: ${preset.id}`, {\n\t\t\t\t\tchild,\n\t\t\t\t\tpreset,\n\t\t\t\t\tthis: this,\n\t\t\t\t})\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tchild.load(folderPreset)\n\t\t}\n\n\t\treturn this\n\t}\n\t//⌟\n\t//⌟\n\n\t//· Input Generators ·········································································¬\n\n\t/**\n\t * Updates the ui for all inputs belonging to this folder to reflect their current values.\n\t */\n\trefresh(): this {\n\t\tthis._log.fn('refresh').debug(this)\n\n\t\tconst disabledState = this._disabled()\n\t\tif (disabledState !== this.disabled) {\n\t\t\tthis.disabled = disabledState\n\t\t}\n\t\tconst hiddenState = this._hiddenFn?.()\n\t\tif (typeof hiddenState !== 'undefined' && hiddenState !== this._hidden) {\n\t\t\thiddenState ? this.hide() : this.show()\n\t\t}\n\n\t\tfor (const input of this.inputs.values()) {\n\t\t\tinput.refresh()\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Updates the ui for all inputs in this folder and all child folders recursively.\n\t */\n\trefreshAll(): this {\n\t\tfor (const input of this.allInputs.values()) {\n\t\t\tinput.refresh()\n\t\t}\n\n\t\tthis.evm.emit('refresh')\n\t\treturn this\n\t}\n\n\t/**\n\t * Registers all new inputs by adding them to the {@link inputs|folder inputs} map, updating\n\t * the internal preset-id map, and and refreshing the folder icon (debounced slightly).\n\t */\n\tprivate _registerInput<T extends ValidInput>(input: T, presetId: string): T {\n\t\tlet i = 0\n\t\tlet titleId = input.title || input.id\n\t\twhile (this.inputs.has(titleId)) {\n\t\t\ttitleId = `${input.title}_${i}`\n\t\t\ti++\n\t\t}\n\t\tthis.inputs.set(titleId, input)\n\t\tFolder._presetIdMap.set(input.id, presetId)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Takes in a title, value, and options, and return an updated options object.\n\t *\n\t * Updates:\n\t * - {@link InputOptions.title|`title`}\n\t * - {@link InputOptions.value|`value`}\n\t * - {@link InputOptions.presetId|`presetId`}\n\t */\n\tprivate _resolveOpts<TValue extends ValidInputValue, TOptions extends InputOptions>(\n\t\tt: string,\n\t\tv?: TValue,\n\t\to?: TOptions,\n\t): TOptions & { title: string; value: TValue; presetId: string } {\n\t\to ??= {} as TOptions\n\t\to.title ??= t\n\t\tif (typeof v !== 'undefined') o.value ??= v\n\t\to.presetId ??= this._resolvePresetId([t])\n\t\treturn o as TOptions & { title: string; value: TValue; presetId: string }\n\t}\n\n\t//·· Add ···································································¬\n\n\tadd(title: string, initialValue: boolean, options?: SwitchInputOptions): InputSwitch\n\tadd(title: string, initialValue: number, options?: NumberInputOptions): InputNumber\n\tadd(title: string, initialValue: string, options?: TextInputOptions): InputText\n\tadd(title: string, initialValue: () => void, options?: ButtonInputOptions): InputButton\n\tadd(title: string, initialValue: ColorFormat, options?: ColorInputOptions): InputColor\n\t// add<T>(title: string, initialValue: Option<T>, options: SelectInputOptions<T>): InputSelect<T>\n\t// prettier-ignore\n\tadd<T>(title: string, initialValue: LabeledOption<T>, options: SelectInputOptions<T>): InputSelect<T>\n\t// prettier-ignore\n\tadd(title: string, initialValue: ButtonGridArrays, options?: ButtonGridInputOptions ): InputButtonGrid\n\t/**\n\t * Adds an input to the folder based on typoe of the `initialValue` parameter.\n\t * @param title - The title of the input to display in the label area of the input's \"row\".\n\t * @param initialValue - The initial value of the input.  The type of this value will determine\n\t * the type of input created.\n\t */\n\tadd(title: string, initialValue: ValidInputValue, options?: InputOptions): ValidInput {\n\t\tconst opts = this._resolveOpts(title, initialValue, options)\n\t\tconst input = this._createInput(opts)\n\t\tthis._registerInput(input, opts.presetId)\n\t\treturn input\n\t}\n\t//⌟\n\n\t//·· Bind ···································································¬\n\n\t/**\n\t * Binds an input to a target object and key.  The input will automatically update the target\n\t * object's key when the input value changes.\n\t * @param target - The object to bind the input to.\n\t * @param key - The key of the target object to bind the input to.\n\t * @param options - The {@link InputOptions}, the type of which is inferred based on the type\n\t * of the value at the {@link target} object's {@link key}.\n\t * @example\n\t * ```ts\n\t * const gui = new Gooey()\n\t *\n\t * // Some state.\n\t * const params = { foo: 5, bar: 'baz', qux: true }\n\t *\n\t * const numberInput = gui.bind(params, 'foo', { min: 0, max: 10, step: 1 })\n\t * //    ^? InputNumber\n\t *\n\t * // By default, the `title` is inferred from the key.\n\t * // To override it, use the `title` option:\n\t * const switchInput = gui.bind(params, 'qux', { title: 'Kwucks' })\n\t * ```\n\t */\n\tbind<\n\t\tTTarget extends Record<string, any>,\n\t\tTKey extends keyof TTarget,\n\t\tconst TValue extends TTarget[TKey],\n\t\tTOptions extends InferOptions<TValue>,\n\t\tTInput extends InferInput<TValue>,\n\t>(target: TTarget, key: TKey, options: Partial<TOptions> = {}): TInput {\n\t\tconst title = options.title ?? (key as string)\n\t\tconst opts = this._resolveOpts(title, target[key] as TValue, options)\n\n\t\topts.value ??= target[key] as TValue\n\t\topts.binding = { target, key, initial: opts.value }\n\n\t\tconst input = this._createInput(opts)\n\t\tthis._registerInput(input, opts.presetId)\n\n\t\treturn input as unknown as TInput\n\t}\n\n\t/**\n\t * Used to store a ref to the top level folder of a nested generator like `bindMany`.\n\t */\n\t#transientRoot: Folder | null = null\n\n\t/**\n\t * Takes an object and generates a set of inputs based on the object's keys and values.  Any\n\t * nested objects will result in child folders being created.  Options can be passed to\n\t * customize the inputs generated, and to exclude/include specific keys.\n\t * @param target - The object to generate inputs from.\n\t * @param options - Options to customize the inputs generated, as well as `include` and\n\t * `exclude` arrays to omit certain keys.\n\t * @example\n\t * ```ts\n\t * const gui = new Gooey()\n\t *\n\t * const params = {\n\t *  myNumber: 5,\n\t * \tmyFolder: {\n\t *    myOptions: 'foo',\n\t * \t}\n\t * }\n\t *\n\t * gui.addMany(params, {\n\t *   myFolder: {\n\t * folderOptions: title: 'My Folder' }}, // optional folder controls\n\t * })\n\t */\n\taddMany<\n\t\tT extends object,\n\t\tTOptions extends InferTargetOptions<T> = InferTargetOptions<T>,\n\t\tTInputs extends InferTarget<T> = this & InferTarget<T>,\n\t>(\n\t\ttarget: T,\n\t\toptions?: TOptions & {\n\t\t\t/**\n\t\t\t * An array of keys to exclude from a target object when generating inputs.\n\t\t\t */\n\t\t\texclude?: InferTargetKeys<T>[]\n\t\t\t/**\n\t\t\t * An array of keys to include in a target object when generating inputs.\n\t\t\t */\n\t\t\tinclude?: InferTargetKeys<T>[]\n\t\t},\n\t): TInputs {\n\t\tlet rootFolder: Folder = this\n\n\t\tif (!this.#transientRoot) {\n\t\t\tthis.#transientRoot = rootFolder\n\t\t}\n\n\t\tthis._walk(target, ((options as any) || undefined) ?? {}, rootFolder, new Set(), 'add')\n\n\t\tconst finalRoot = this.#transientRoot\n\t\tthis.#transientRoot = null\n\t\treturn finalRoot as this & TInputs\n\t}\n\n\tbindMany<\n\t\tT extends object,\n\t\tTOptions extends InferTargetOptions<T> = InferTargetOptions<T>,\n\t\tTInputs extends InferTarget<T> = this & InferTarget<T>,\n\t>(\n\t\ttarget: T,\n\t\toptions?: TOptions & {\n\t\t\t/**\n\t\t\t * An array of keys to exclude from a target object when generating inputs.\n\t\t\t */\n\t\t\texclude?: InferTargetKeys<T>[]\n\t\t\t/**\n\t\t\t * An array of keys to include in a target object when generating inputs.\n\t\t\t */\n\t\t\tinclude?: InferTargetKeys<T>[]\n\t\t},\n\t): TInputs {\n\t\tlet rootFolder: Folder = this\n\n\t\tif (!this.#transientRoot) {\n\t\t\tthis.#transientRoot = rootFolder\n\t\t}\n\n\t\tthis._walk(target, ((options as any) || undefined) ?? {}, rootFolder, new Set(), 'bind')\n\n\t\tconst finalRoot = this.#transientRoot\n\t\tthis.#transientRoot = null\n\t\treturn finalRoot as this & TInputs\n\t}\n\t//⌟\n\n\tprivate _walk<T extends object, TOptions extends InferTargetOptions<T> = InferTargetOptions<T>>(\n\t\ttarget: T,\n\t\toptions: TOptions & {\n\t\t\t/**\n\t\t\t * An array of keys to exclude from a target object when generating inputs.\n\t\t\t */\n\t\t\texclude?: InferTargetKeys<T>[]\n\t\t\t/**\n\t\t\t * An array of keys to include in a target object when generating inputs.\n\t\t\t */\n\t\t\tinclude?: InferTargetKeys<T>[]\n\t\t},\n\t\tfolder: Folder,\n\t\tseen: Set<any>,\n\t\tmode: 'bind' | 'add',\n\t) {\n\t\tif (seen.has(target)) return\n\t\tseen.add(target)\n\n\t\tfor (let [key, value] of Object.entries(target)) {\n\t\t\tif (Array.isArray(options['exclude']) && options['exclude'].includes(key as any))\n\t\t\t\tcontinue\n\t\t\tif (Array.isArray(options['include']) && !options['include'].includes(key as any))\n\t\t\t\tcontinue\n\n\t\t\tconst inputOptions = (options[key as keyof T] as any as TOptions) || ({} as TOptions)\n\n\t\t\tlet folderOptions = {} as FolderOptions\n\n\t\t\tif (value === null) {\n\t\t\t\tconst hasValue = 'value' in inputOptions\n\n\t\t\t\tif (!hasValue && mode === 'bind') {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`bindMany() error: target object's key \"${key}\" is \\`null\\`, and no valid \"value\" option was provided as a fallback.`,\n\t\t\t\t\t\t{ key, value, inputOptions },\n\t\t\t\t\t)\n\t\t\t\t\tthrow new Error('Invalid binding.')\n\t\t\t\t}\n\n\t\t\t\tif (hasValue) {\n\t\t\t\t\tvalue = inputOptions['value']\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof value === 'object') {\n\t\t\t\tif (isColor(value)) {\n\t\t\t\t\tmode === 'bind'\n\t\t\t\t\t\t? folder.bindColor(value, 'color', { title: key, ...inputOptions })\n\t\t\t\t\t\t: folder.addColor(key, value, inputOptions)\n\t\t\t\t} else {\n\t\t\t\t\tif ('folderOptions' in inputOptions) {\n\t\t\t\t\t\tfolderOptions = inputOptions['folderOptions'] as FolderOptions\n\t\t\t\t\t} else if ('folderOptions' in value) {\n\t\t\t\t\t\tfolderOptions = value.folderOptions\n\t\t\t\t\t}\n\t\t\t\t\tconst subFolder = folder.addFolder(key, folderOptions)\n\t\t\t\t\tthis._walk(value, inputOptions, subFolder, seen, mode)\n\t\t\t\t}\n\t\t\t} else if ('options' in inputOptions) {\n\t\t\t\tmode === 'bind'\n\t\t\t\t\t? folder.bindSelect(target, key as keyof T, inputOptions as SelectInputOptions)\n\t\t\t\t\t: folder.addSelect(\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t(inputOptions as SelectInputOptions).options!,\n\t\t\t\t\t\t\tinputOptions,\n\t\t\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tmode === 'bind'\n\t\t\t\t\t? folder.bind(target, key as keyof T, inputOptions as any)\n\t\t\t\t\t: folder.add(key, value, inputOptions)\n\t\t\t}\n\t\t}\n\t}\n\n\t//·· Adders ···································································¬\n\n\t/**\n\t * Adds a new {@link InputNumber} to the folder.\n\t * @example\n\t * ```ts\n\t * const number = gui.addNumber('Foo', true)\n\t * number.on('change', console.log)\n\t * ```\n\t */\n\taddNumber(\n\t\ttitle: string,\n\t\tvalue?: number,\n\t\toptions = {} as Partial<NumberInputOptions>,\n\t): InputNumber {\n\t\tconst opts = this._resolveOpts(title, value, options)\n\t\tconst input = new InputNumber(opts, this)\n\t\treturn this._registerInput(input, opts.presetId)\n\t}\n\tbindNumber<\n\t\tconst T extends Record<string, any>,\n\t\tconst K extends keyof T,\n\t\tV extends T[K] extends number ? number : InvalidBinding,\n\t>(target: T, key: K, options?: Partial<NumberInputOptions>): InputNumber {\n\t\tconst opts = this._resolveBinding(target, key, options)\n\t\treturn this.addNumber(key as string, opts.value as V, opts)\n\t}\n\n\taddText(title: string, value?: string, options?: TextInputOptions): InputText {\n\t\tconst opts = this._resolveOpts(title, value, options)\n\t\tconst input = new InputText(opts, this)\n\t\treturn this._registerInput(input, opts.presetId)\n\t}\n\tbindText<\n\t\tT extends Record<string, any>,\n\t\tK extends keyof T,\n\t\tTValue extends T[K] extends string ? string : InvalidBinding,\n\t>(target: T, key: K, options?: Partial<TextInputOptions>): InputText {\n\t\tconst opts = this._resolveBinding(target, key, options)\n\t\treturn this.addText(key as string, opts.value as TValue, opts)\n\t}\n\n\taddColor(title: string, value?: ColorFormat, options?: ColorInputOptions): InputColor {\n\t\tconst opts = this._resolveOpts(title, value, options)\n\t\tconst input = new InputColor(opts, this)\n\t\treturn this._registerInput(input, opts.presetId)\n\t}\n\tbindColor<\n\t\tT extends Record<string, any> | Color,\n\t\tK extends keyof T,\n\t\tTValue extends T[K] extends ColorFormat ? Color : InvalidBinding,\n\t>(target: T, key: K, options?: Partial<ColorInputOptions>): InputColor {\n\t\tconst opts = this._resolveBinding(target, key, options)\n\t\treturn this.addColor(key as string, opts.value as TValue, opts)\n\t}\n\n\taddButton(title: string, onclick: () => void, options?: ButtonInputOptions): InputButton {\n\t\tconst opts = this._resolveOpts(title, onclick, options)\n\t\topts.onClick = onclick || opts.value\n\t\tconst input = new InputButton(opts, this)\n\t\treturn this._registerInput(input, opts.presetId)\n\t}\n\t/**\n\t * Passes the function at `target[key]` to {@link addButton} as the `onclick` handler.\n\t */\n\tbindButton<\n\t\tT extends Record<string, any>,\n\t\tK extends keyof T,\n\t\tTValue extends T[K] extends Function ? () => void : InvalidBinding,\n\t>(target: T, key: K, options?: Partial<ButtonInputOptions>): InputButton {\n\t\treturn this.addButton(key as string, target[key] as TValue, options)\n\t}\n\n\taddButtonGrid(\n\t\ttitle: string,\n\t\tvalue: ButtonGridArrays,\n\t\toptions?: Partial<ButtonGridInputOptions>,\n\t): InputButtonGrid {\n\t\tconst opts = this._resolveOpts(title, value, options)\n\t\tconst input = new InputButtonGrid(opts, this)\n\t\treturn this._registerInput(input, opts.presetId)\n\t}\n\tbindButtonGrid<\n\t\tT extends Record<string, any>,\n\t\tK extends keyof T,\n\t\tV extends T[K] extends ButtonGridArrays ? ButtonGridArrays : never,\n\t>(target: T, key: K, options?: Partial<ButtonGridInputOptions>): InputButtonGrid {\n\t\treturn this.addButtonGrid(key as string, target[key] as V, options)\n\t}\n\n\t/**\n\t * Adds a new {@link InputSelect} to the folder.\n\t * @example\n\t * ```ts\n\t * // For primitives:\n\t * gui.addSelect('theme', ['light', 'dark'], { initialValue: 'light' })\n\t *\n\t * // For objects:\n\t * const options = {\n\t *   foo: { id: 0 },\n\t *   bar: { id: 1 },\n\t * }\n\t *\n\t * todo - Implement this -- will need to detect that the list has objects and pass a union of\n\t * todo - their keys to the initialValue type or something?\n\t * gui.addSelect('foobar', options, { initialValue: 'foo' })\n\t * ```\n\t */\n\taddSelect<T>(\n\t\ttitle: string,\n\t\tarray: T[],\n\t\toptions?: SelectInputOptions<NoInfer<T>> & {\n\t\t\tinitialValue?: NoInfer<T>\n\t\t},\n\t): InputSelect<T> {\n\t\tconst opts = this._resolveOpts(title, array, options)\n\t\topts.options = array\n\t\topts.value =\n\t\t\toptions?.initialValue ?? (fromState(array)?.at(0) as T) ?? options?.binding?.initial\n\n\t\tif (!opts.value) {\n\t\t\tconsole.warn('No value provided for select:', { title, array, options, opts })\n\t\t}\n\t\treturn this._registerInput(new InputSelect(opts, this), opts.presetId) as InputSelect<T>\n\t}\n\t/**\n\t * todo - Does this work / make sense?  It's just wrapping the list in a function.. which\n\t * happens internally anyways... I'm not sure what binding to a select should do, other than\n\t * ensure that the options array is regularly refreshed after interactions... but without a\n\t * way to listen to changes on the target object's array (i.e. forcing or wrapping with a\n\t * store), I'm not sure what the behavior should be.\n\t */\n\tbindSelect<\n\t\tT extends Record<string, any>,\n\t\tK extends keyof T,\n\t\tV extends T[K] extends Option<infer U> ? U : InvalidBinding,\n\t\tA extends Array<V>,\n\t\tO extends SelectInputOptions<V> = SelectInputOptions<V> & {\n\t\t\toptions: A\n\t\t\tinitialValue?: V\n\t\t\ttargetKey?: keyof T\n\t\t},\n\t\t// >(target: T, key: K, options: Partial<O> = {}): InputSelect<V> {\n\t>(target: T, key: K, options = {} as O): InputSelect<V> {\n\t\tconst opts = this._resolveBinding(target, key, options)\n\t\topts.value = target[key]\n\t\treturn this.addSelect(key as string, opts.options as A, opts as O)\n\t}\n\n\t/**\n\t * Adds a new {@link InputSwitch} to the folder.\n\t * @example\n\t * ```ts\n\t * const switch = gui.addSwitch('Foo', true)\n\t * switch.on('change', console.log)\n\t * ```\n\t */\n\taddSwitch(title: string, value: boolean, options?: SwitchInputOptions): InputSwitch {\n\t\tconst opts = this._resolveOpts(title, value, options)\n\t\tconst input = new InputSwitch(opts, this)\n\t\treturn this._registerInput(input, opts.presetId)\n\t}\n\t/**\n\t * Binds an {@link InputSwitch} to the `boolean` at the target object's key.\n\t * @example\n\t * ```ts\n\t * const params = { foo: true }\n\t * const switch = gui.bindSwitch(params, 'foo')\n\t * ```\n\t */\n\tbindSwitch<\n\t\tT extends Record<string, any>,\n\t\tK extends keyof T,\n\t\tV extends T[K] extends boolean ? boolean : InvalidBinding,\n\t>(target: T, key: K, options?: Partial<SwitchInputOptions>): InputSwitch {\n\t\tconst opts = this._resolveBinding(target, key, options)\n\t\treturn this.addSwitch(key as string, opts.value as V, opts)\n\t}\n\t//⌟\n\n\t//·· Helpers ···································································¬\n\n\t/**\n\t * Does validation / error handling.\n\t * If no title was provided, this method will also assign the binding key to the title.\n\t * @returns The processed options.\n\t */\n\tprivate _validateBinding<T extends InputOptions>(options: T, validate?: boolean): T {\n\t\toptions.title ??= options.binding?.key\n\n\t\t// Some (hopefully) helpful error handling.\n\t\tif (validate) {\n\t\t\tconst b = options.binding\n\t\t\tlet value = options.value\n\n\t\t\tif (!value) {\n\t\t\t\tvalue = b?.target[b?.key]\n\t\t\t}\n\n\t\t\tif (!value) {\n\t\t\t\tif (b) {\n\t\t\t\t\tlet err = false\n\n\t\t\t\t\tif (typeof b.target === 'undefined') {\n\t\t\t\t\t\terr = true\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`\\x1b[96mgooey\\x1b[39m ~ \\x1b[91mError\\x1b[39m Binding \"target\" is undefined:`,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof b.key === 'undefined') {\n\t\t\t\t\t\terr = true\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`\\x1b[96mgooey\\x1b[39m ~ \\x1b[91mError\\x1b[39m Binding \"key\" is undefined:`,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof b.target[b.key] === 'undefined') {\n\t\t\t\t\t\terr = true\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`\\x1b[96mgooey\\x1b[39m ~ \\x1b[91mError\\x1b[39m The provided binding key \\x1b[33m\"${b.key}\"\\x1b[39m does not exist on provided \\x1b[33mtarget\\x1b[39m:`,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'gooey ~ Failed to bind input to the provided target object.',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcause: options,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('gooey ~ No value or binding provided.', { cause: options })\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn options\n\t}\n\n\tprivate _createInput<TOptions extends InputOptions>(options: TOptions): ValidInput {\n\t\tthis._log.fn('#createInput').debug(this)\n\t\tconst type = this._resolveType(options)\n\t\toptions = this._validateBinding(options, false)\n\n\t\tswitch (type) {\n\t\t\tcase 'InputText':\n\t\t\t\treturn new InputText(options as TextInputOptions, this)\n\t\t\tcase 'InputNumber':\n\t\t\t\treturn new InputNumber(options as NumberInputOptions, this)\n\t\t\tcase 'InputColor':\n\t\t\t\treturn new InputColor(options as ColorInputOptions, this)\n\t\t\tcase 'InputSelect':\n\t\t\t\treturn new InputSelect(options as SelectInputOptions<Option<any>>, this)\n\t\t\tcase 'InputButton':\n\t\t\t\treturn new InputButton(options as ButtonInputOptions, this)\n\t\t\tcase 'InputSwitch':\n\t\t\t\treturn new InputSwitch(options as SwitchInputOptions, this)\n\t\t}\n\n\t\tthrow new Error('Invalid input type: ' + type + ' for options: ' + options)\n\t}\n\n\tprivate _resolveBinding<\n\t\tTTarget extends Record<string, any> = Record<string, any>,\n\t\tTKey extends keyof TTarget = keyof TTarget,\n\t\tTValue extends TTarget[TKey] = TTarget[TKey],\n\t\tTOptions extends InputOptions = InputOptions,\n\t\tTResolvedOptions = Partial<TOptions> & {\n\t\t\ttitle: string\n\t\t\tvalue: TValue\n\t\t\tpresetId: string\n\t\t\tbinding: {\n\t\t\t\ttarget: TTarget\n\t\t\t\tkey: TKey\n\t\t\t\tinitial: TValue\n\t\t\t}\n\t\t},\n\t>(target: TTarget, key: TKey, options: Partial<TOptions> | undefined = {}): TResolvedOptions {\n\t\tconst title = options.title ?? (key as string)\n\t\tconst opts = this._resolveOpts(title, target[key], options)\n\n\t\topts.binding = { target, key, initial: opts.value }\n\t\tconst res = this._validateBinding(opts, true)\n\n\t\treturn res as TResolvedOptions\n\t}\n\n\tprivate _resolveType(options: any): InputType {\n\t\tthis._log.fn('resolveType').debug({ options, this: this })\n\t\tlet value = options.value ?? options.binding?.target[options.binding!.key]\n\n\t\tif ('onClick' in options) {\n\t\t\treturn 'InputButton'\n\t\t}\n\n\t\tif (('options' in options && Array.isArray(options.options)) || isLabeledOption(value)) {\n\t\t\tvalue ??= options.options[0]\n\t\t\toptions.value ??= value\n\t\t\treturn 'InputSelect'\n\t\t}\n\n\t\tswitch (typeof value) {\n\t\t\tcase 'boolean': {\n\t\t\t\t// todo:\n\t\t\t\t// We need some way to differentiate between a switch and a checkbox once the checkbox is added.\n\t\t\t\t// ^ Why do we need a checkbox?\n\t\t\t\treturn 'InputSwitch'\n\t\t\t}\n\t\t\tcase 'number': {\n\t\t\t\treturn 'InputNumber'\n\t\t\t}\n\t\t\tcase 'string': {\n\t\t\t\tif (isColorFormat(value)) return 'InputColor'\n\t\t\t\t// todo:\n\t\t\t\t// Could detect CSS units like `rem` and `-5px 0 0 3px` for an advanced `CSSTextInput` or something.\n\t\t\t\t// Or like a \"TextComponents\" input that can have any number of \"components\" (like a color picker, number, select, etc) inside a string.\n\t\t\t\treturn 'InputText'\n\t\t\t}\n\t\t\tcase 'function': {\n\t\t\t\treturn 'InputButton'\n\t\t\t}\n\t\t\tcase 'object': {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\treturn 'InputSelect'\n\t\t\t\t}\n\t\t\t\tif (isColor(value)) {\n\t\t\t\t\treturn 'InputColor'\n\t\t\t\t}\n\t\t\t\tif (isLabeledOption(value)) {\n\t\t\t\t\treturn 'InputSelect'\n\t\t\t\t}\n\t\t\t\tthrow new Error('Invalid input view: ' + JSON.stringify(value))\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new Error('Invalid input view: ' + value)\n\t\t\t}\n\t\t}\n\t}\n\t//⌟\n\t//⌟\n\n\t//· Elements ·················································································¬\n\n\tprivate _createElement(opts: FolderOptions | GooeyOptions): HTMLDivElement {\n\t\tthis._log.fn('#createElement').debug({ el: opts.container, this: this })\n\t\tif (this.isRoot) {\n\t\t\tconst width = (opts as GooeyOptions).width\n\t\t\treturn create('div', {\n\t\t\t\tid: `gooey-root_${this.id}`,\n\t\t\t\tclasses: ['gooey-root', 'gooey-folder', 'closed'],\n\t\t\t\tdataset: { theme: this.gooey!.theme ?? 'default' },\n\t\t\t\tparent: select(opts.container)[0],\n\t\t\t\tstyle: width ? { width } : undefined,\n\t\t\t})\n\t\t}\n\n\t\treturn create('div', {\n\t\t\tparent: this.parentFolder.elements.content,\n\t\t\tclasses: ['gooey-folder', 'closed'],\n\t\t})\n\t}\n\n\tprivate _createElements(element: HTMLElement): FolderElements {\n\t\tthis._log.fn('#createElements').debug({ element, this: this })\n\t\tconst header = create('div', {\n\t\t\tparent: element,\n\t\t\tclasses: ['gooey-header'],\n\t\t})\n\t\theader.addEventListener('pointerdown', this._handleClick.bind(this))\n\n\t\tconst title = create('div', {\n\t\t\tparent: header,\n\t\t\tclasses: ['gooey-title'],\n\t\t\tinnerHTML: this.title,\n\t\t})\n\n\t\tconst toolbar = create('div', {\n\t\t\tparent: header,\n\t\t\tclasses: ['gooey-toolbar'],\n\t\t})\n\n\t\tconst contentWrapper = create('div', {\n\t\t\tclasses: ['gooey-content-wrapper'],\n\t\t\tparent: element,\n\t\t})\n\t\tconst content = create('div', {\n\t\t\tclasses: ['gooey-content'],\n\t\t\tparent: contentWrapper,\n\t\t})\n\n\t\treturn {\n\t\t\theader,\n\t\t\ttoolbar: {\n\t\t\t\tcontainer: toolbar,\n\t\t\t\t// settingsButton,\n\t\t\t},\n\t\t\ttitle,\n\t\t\tcontentWrapper,\n\t\t\tcontent,\n\t\t}\n\t}\n\t//⌟\n\n\t//· SVG's ····················································································¬\n\n\tprivate async _createGraphics(headerless = false): Promise<void> {\n\t\tsetTimeout(() => {\n\t\t\tnew TerminalSvg(this)\n\t\t}, 10)\n\n\t\tif (this.isRootFolder()) return\n\t\tthis._log.fn('createGraphics').debug({ this: this })\n\n\t\tif (!this.isRootFolder()) {\n\t\t\tthis.graphics = { icon: createFolderSvg(this) }\n\t\t\tthis.elements.header.prepend(this.graphics.icon)\n\n\t\t\tif (!headerless) {\n\t\t\t\tthis.initialHeaderHeight ??= this._resolveHeaderHeight()\n\t\t\t\tthis.graphics.connector = createFolderConnector(this, this.graphics.icon)\n\t\t\t\tanimateConnector(this, this.closed.value ? 'close' : 'open')\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _resolveHeaderHeight(): number {\n\t\tlet height = 16 * 1.75\n\t\tconst wrapper = this.root?.gooey?.wrapper\n\t\tif (!wrapper) {\n\t\t\tthrow new Error('No wrapper found!  This should never happen...')\n\t\t}\n\t\tconst prop = getComputedStyle(wrapper).getPropertyValue('--gooey-header_height')\n\t\tif (prop.endsWith('px')) {\n\t\t\theight = parseFloat(prop)\n\t\t} else if (prop.endsWith('em')) {\n\t\t\tlet fontSize = parseFloat(getComputedStyle(document.documentElement).fontSize) || 16\n\t\t\theight = parseFloat(prop) * fontSize\n\t\t}\n\t\treturn height\n\t}\n\n\tget hue(): number {\n\t\tconst localIndex = this.parentFolder.children.indexOf(this)\n\t\t// note: Color will be off if we ever add built-in folders other than \"Settings Folder\".\n\t\tconst i = this.parentFolder.isRootFolder() ? localIndex - 1 : localIndex\n\t\t// Don't count the root folder.\n\t\tconst depth = this._depth - 1\n\t\t// return i * 20 + depth * 80\n\t\tif (depth === 0) {\n\t\t\treturn i * 30\n\t\t} else {\n\t\t\treturn this.parentFolder.hue + i * -20\n\t\t}\n\t}\n\n\tget scrollHeight(): number {\n\t\tlet height = this.element.scrollHeight\n\t\theight += this.elements.header.scrollHeight\n\t\tfor (const child of this.allChildren) {\n\t\t\theight += child.scrollHeight\n\t\t\theight += this.elements.header.scrollHeight\n\t\t}\n\t\treturn height\n\t}\n\n\t#timeout?: ReturnType<typeof setTimeout>\n\t#first = true\n\tprivate _refreshIcon(): void {\n\t\tthis._log.fn('#refreshIcon').debug(this)\n\n\t\t// Really don't love this...\n\t\tif (this.graphics) {\n\t\t\tdefer(() => {\n\t\t\t\tclearTimeout(this.#timeout)\n\t\t\t\tthis.#timeout = setTimeout(() => {\n\t\t\t\t\tconst svg = createFolderSvg(this)\n\t\t\t\t\tthis.graphics?.icon.replaceWith(svg)\n\t\t\t\t\tif (this.graphics) this.graphics.icon = svg\n\t\t\t\t\tif (this.#first) {\n\t\t\t\t\t\tthis.graphics?.connector?.update()\n\t\t\t\t\t\tthis.#first = false\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.graphics?.connector?.update()\n\t\t\t\t\t}\n\t\t\t\t}, 1)\n\t\t\t})\n\t\t}\n\t}\n\t//⌟\n\n\tdisposed = false\n\tdispose(): void {\n\t\tif (this.disposed && DEV) {\n\t\t\tthis._log.fn('dispose').debug('Already disposed.', this)\n\t\t\treturn\n\t\t}\n\t\tthis.elements.header.removeEventListener('click', this.toggle)\n\t\tthis.elements.header.addEventListener('pointerdown', this._handleClick)\n\n\t\tthis.element.remove()\n\n\t\tfor (const input of this.inputs.values()) {\n\t\t\tinput.dispose()\n\t\t}\n\n\t\tfor (const child of this.children) {\n\t\t\tchild.dispose()\n\t\t}\n\n\t\ttry {\n\t\t\tthis.parentFolder.children.splice(this.parentFolder.children.indexOf(this), 1)\n\t\t} catch (err) {\n\t\t\tthis._log.fn('dispose').error('Error removing folder from parent', { err })\n\t\t}\n\n\t\tthis.disposed = true\n\t}\n}\n\n//#region Type Tests ···································································¬\n\n// const testTargetInferer = <T>(_target: T): InferTarget<T> => {\n// \treturn {} as InferTarget<T>\n// }\n\n// const testTarget = {\n// \t// number\n// \tfoo: 5,\n// \t// text\n// \tbar: 'baz',\n// \t// switch\n// \tbaz: false,\n// \t// select\n// \tqux: [1, 2, 3],\n// \t// nested\n// \tquux: { a: 'a', b: 'b' },\n// \t// color\n// \tquuz: new Color('red'),\n// \t// nested\n// \tparent: {\n// \t\tchild: 'foo',\n// \t},\n// }\n\n// interface ExpectedTargetInference {\n// \tfoo: InputNumber\n// \tbar: InputText\n// \tbaz: InputSwitch\n// \tqux: InputSelect<number>\n// \tquux: {\n// \t\ta: InputText\n// \t\tb: InputText\n// \t}\n// \tquuz: InputColor\n// \tparent: {\n// \t\tchild: InputText\n// \t}\n// }\n\n// function test() {\n// \tconst inference: ExpectedTargetInference = testTargetInferer(testTarget)\n// \tinference // works!\n\n// \tconst gui = {} as Gooey\n\n// \tconst bindManyTest = gui.bindMany(testTarget, {\n// \t\tfoo: { min: 0, max: 10, step: 1 },\n// \t\tparent: {\n// \t\t\tchild: { title: 'Child' },\n// \t\t},\n// \t})\n// \tbindManyTest\n// }\n// test\n//#endregion\n"],"names":[],"mappings":"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"}