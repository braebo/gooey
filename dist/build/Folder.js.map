{"version":3,"file":"Folder.js","sources":["../../../src/Folder.ts"],"sourcesContent":["// The custom-regions extension is recommended for this file.\n\nimport type { Input, InputOptions, InputPreset, InputType, ValidInput } from './inputs/Input'\nimport type { ColorFormat } from './shared/color/types/colorFormat'\nimport type { Option } from './controllers/Select'\nimport type { Tooltip } from './shared/Tooltip'\nimport type { GooeyPreset } from './Gooey'\n\nimport { InputButtonGrid, type ButtonGridInputOptions } from './inputs/InputButtonGrid'\nimport { InputSwitch, type SwitchInputOptions } from './inputs/InputSwitch'\nimport { InputButton, type ButtonInputOptions } from './inputs/InputButton'\nimport { InputSelect, type SelectInputOptions } from './inputs/InputSelect'\nimport { InputNumber, type NumberInputOptions } from './inputs/InputNumber'\nimport { InputColor, type ColorInputOptions } from './inputs/InputColor'\nimport { InputText, type TextInputOptions } from './inputs/InputText'\nimport { isLabeledOption } from './controllers/Select'\n\nimport { animateConnector, createFolderConnector, createFolderSvg } from './svg/createFolderSVG'\nimport { composedPathContains } from './shared/cancelClassFound'\nimport { isColor, isColorFormat } from './shared/color/color'\nimport { EventManager } from './shared/EventManager'\nimport { TerminalSvg } from './svg/TerminalSvg'\nimport { Search } from './toolbar/Search'\nimport { create } from './shared/create'\nimport { Logger } from './shared/logger'\nimport { nanoid } from './shared/nanoid'\nimport { state } from './shared/state'\nimport { toFn } from './shared/toFn'\nimport { DEV } from 'esm-env'\nimport { Gooey } from './Gooey'\n\n//· Types ························································································¬\n\nexport type BindingFactory<\n\tTTarget extends Record<string, any>,\n\tTOptions extends InputOptions,\n\tTInput extends ValidInput,\n\tTTargetKey extends keyof TTarget,\n> = (target: TTarget, key: TTargetKey, options: Partial<TOptions>) => TInput\n\nexport type InferOptions<T> = T extends number\n\t? NumberInputOptions\n\t: T extends boolean\n\t\t? SwitchInputOptions\n\t\t: T extends Array<infer T>\n\t\t\t? SelectInputOptions<T>\n\t\t\t: T extends Option<infer T>\n\t\t\t\t? SelectInputOptions<T>\n\t\t\t\t: T extends ColorFormat\n\t\t\t\t\t? ColorInputOptions\n\t\t\t\t\t: T extends string\n\t\t\t\t\t\t? TextInputOptions\n\t\t\t\t\t\t: InputOptions\n\nexport type InferInput<T> = T extends number\n\t? InputNumber\n\t: T extends boolean\n\t\t? InputSwitch\n\t\t: T extends Array<infer T>\n\t\t\t? InputSelect<T>\n\t\t\t: T extends Option<infer T>\n\t\t\t\t? InputSelect<T>\n\t\t\t\t: T extends ColorFormat\n\t\t\t\t\t? InputColor\n\t\t\t\t\t: T extends string\n\t\t\t\t\t\t? InputText\n\t\t\t\t\t\t: ValidInput\n\nexport interface FolderOptions {\n\t__type?: 'FolderOptions'\n\n\t/**\n\t * The element to append the folder to (usually\n\t * the parent folder's content element).\n\t */\n\tcontainer: HTMLElement\n\n\t/**\n\t * The title of the folder.\n\t * @defaultValue `''`\n\t */\n\ttitle?: string\n\n\t/**\n\t * A preset namespace to use for saving/loading.  By default, the {@link title|`title`}\n\t * is used, in combiniation with the parent folder's title (and so on up the hierarchy).\n\t * Therefore, if you want to use presets, you will only need to set this if you:\n\t * - Use the same title for multiple inputs _in the same {@link Folder}_, or\n\t * - Leave all titles empty\n\t * Otherwise, this can be left as the default and presets will work as expected.\n\t * @defaultValue {@link title|`title`}\n\t */\n\tpresetId?: string\n\n\t/**\n\t * The child folders of this folder.\n\t */\n\tchildren?: Folder[]\n\n\t/**\n\t * Whether the folder should be collapsed by default.\n\t * @defaultValue `false`\n\t */\n\tclosed?: boolean\n\n\t/**\n\t * Whether the folder should be hidden by default.  If a function is\n\t * provided, it will be called to determine the hidden state.  Use\n\t * {@link refresh} to update the hidden state.\n\t * @defaultValue `false`\n\t */\n\thidden?: boolean | (() => boolean)\n\n\t/**\n\t * Any controls this folder should contain.\n\t */\n\tcontrols?: Map<string, ValidInput>\n\n\t/**\n\t * Whether this Folder should be saved as a {@link FolderPreset} when saving the\n\t * {@link GooeyPreset} for the {@link Gooey} this Folder belongs to.  If `false`, this Input will\n\t * be skipped.\n\t * @defaultValue `true`\n\t */\n\tsaveable?: boolean\n\n\t/**\n\t * When `true`, a search input will be added to the folder's toolbar, allowing users to search\n\t * for inputs within the folder by title.  By default, only the root folder is searchable.\n\t * @defaultValue `false`\n\t */\n\tsearchable?: boolean\n}\n\n/**\n * @internal\n */\nexport interface InternalFolderOptions {\n\t__type?: 'InternalFolderOptions'\n\n\t/**\n\t * The parent folder of this folder (or a circular reference if this is the root folder).\n\t */\n\tparentFolder?: Folder\n\n\t/**\n\t * The GUI instance this folder belongs to.\n\t */\n\tgooey?: Gooey\n\n\t/**\n\t * Whether this folder is the root folder.  Always true when\n\t * creating a `new Folder()`. Always false inside of the\n\t * `gooey.addFolder` and `folder.addFolder` methods.\n\t * Be wary of infinite loops when setting manually.\n\t * @defaultValue `true`\n\t * @internal\n\t */\n\tisRoot: boolean\n\n\t/**\n\t * Temporarily bypasses the folder open/close animations upon creation.\n\t * @internal\n\t */\n\t_skipAnimations: boolean\n\n\t/**\n\t * Hides the folder header.\n\t * @defaultValue `false`\n\t * @internal\n\t */\n\t_headerless: boolean\n}\n\n/**\n * A folder preset stores the state of a folder and all of its inputs, as well as the state of all\n * child folders and their inputs.\n */\nexport interface FolderPreset {\n\t__type: 'FolderPreset'\n\tid: string\n\ttitle: string\n\tclosed: boolean\n\thidden: boolean\n\tchildren: FolderPreset[]\n\tinputs: InputPreset<any>[]\n}\n\nexport interface FolderElements {\n\theader: HTMLElement\n\ttitle: HTMLElement\n\tcontentWrapper: HTMLElement\n\tcontent: HTMLElement\n\ttoolbar: {\n\t\tcontainer: HTMLElement\n\t\tsettingsButton?: HTMLButtonElement & { tooltip?: Tooltip }\n\t}\n}\n\nexport interface FolderEvents {\n\t/**\n\t * When any input in the folder changes, this event emits the input that changed.\n\t */\n\tchange: ValidInput\n\n\t/**\n\t * When the folder is opened or closed, this event emits the new\n\t * {@link Folder.closed | `closed`} state.\n\t */\n\ttoggle: Folder['closed']['value']\n\n\t/**\n\t * Fires when {@link Folder.refresh} is called.\n\t */\n\trefresh: void\n\n\t/**\n\t * Fired after the folder and all of it's children/graphics have been mounted.\n\t */\n\tmount: void\n}\n//⌟\n\n//· Contants ·····················································································¬\n\nconst FOLDER_DEFAULTS = Object.freeze({\n\tpresetId: '',\n\ttitle: '',\n\tchildren: [],\n\tclosed: false,\n\thidden: false,\n\tcontrols: new Map(),\n\tsaveable: true,\n}) satisfies Omit<FolderOptions, 'container'>\n\n/**\n * Internal folder creation api defaults.\n */\nconst INTERNAL_FOLDER_DEFAULTS = {\n\t__type: 'InternalFolderOptions',\n\tparentFolder: undefined,\n\tisRoot: true,\n\t_skipAnimations: true,\n\tgooey: undefined,\n\t_headerless: false,\n} as const satisfies InternalFolderOptions\n//⌟\n\n/**\n * Folder is a container for organizing and grouping {@link Input|Inputs} and child Folders.\n *\n * This class should not be instantiated directly.  Instead, use the {@link Gooey.addFolder} method.\n *\n * @example\n * ```typescript\n * const gooey = new Gooey()\n * const folder = gooey.addFolder({ title: 'My Folder' })\n * folder.addNumber({ title: 'foo', value: 5 })\n * ```\n */\nexport class Folder {\n\t//· Props ····················································································¬\n\t__type = 'Folder' as const\n\tisRoot = true\n\tid = nanoid()\n\tgooey?: Gooey\n\n\t/**\n\t * A preset namespace to use for saving/loading.  By default, the {@link title|`title`}\n\t * is used, in combiniation with the parent folder's title (and so on up the hierarchy).\n\t * Therefore, if you want to use presets, you will only need to set this if you:\n\t * - Use the same title for multiple inputs _in the same {@link Folder}_, or\n\t * - Leave all titles empty\n\t * Otherwise, this can be left as the default and presets will work as expected.\n\t * @defaultValue {@link title|`title`}\n\t */\n\tpresetId: string\n\n\t/**\n\t * Whether this Folder should be saved as a {@link FolderPreset} when saving the\n\t * {@link GooeyPreset} for the {@link Gooey} this Folder belongs to.  If `false`, this Input will\n\t * be skipped.\n\t * @defaultValue `true`\n\t */\n\tsaveable: boolean\n\n\t/**\n\t * The child folders of this folder.\n\t */\n\tchildren = [] as Folder[]\n\n\t/**\n\t * All inputs added to this folder.\n\t */\n\tinputs = new Map<string, ValidInput>()\n\n\t/**\n\t * The root folder.  All folders have a reference to the same root folder.\n\t */\n\troot: Folder\n\tparentFolder: Folder\n\tsettingsFolder!: Folder\n\t// closed: State<boolean>\n\tclosed = state(false)\n\n\telement: HTMLDivElement\n\telements = {} as FolderElements\n\tgraphics?: {\n\t\ticon: HTMLDivElement\n\t\tconnector?: {\n\t\t\tcontainer: HTMLDivElement\n\t\t\tsvg: SVGElement\n\t\t\tpath: SVGPathElement\n\t\t}\n\t}\n\n\tevm = new EventManager<FolderEvents>(['change', 'refresh', 'toggle', 'mount'])\n\ton = this.evm.on.bind(this.evm)\n\n\tinitialHeight = 0\n\tinitialHeaderHeight = 0\n\n\tprivate _title: string\n\tprivate _hidden = () => false\n\tprivate _log: Logger\n\t/** Used to disable clicking the header to open/close the folder. */\n\tprivate _disabledTimer?: ReturnType<typeof setTimeout>\n\t/** The time in ms to wait after mousedown before disabling toggle for a potential drag. */\n\tprivate _clickTime = 200\n\t/** Whether clicking the header to open/close the folder is disabled. */\n\tprivate _clicksDisabled = false\n\tprivate _depth = -1\n\t//⌟\n\tconstructor(options: FolderOptions) {\n\t\tif (!('container' in options)) {\n\t\t\tthrow new Error('Folder must have a container.')\n\t\t}\n\n\t\tconst opts = Object.assign(\n\t\t\t{},\n\t\t\tFOLDER_DEFAULTS,\n\t\t\tINTERNAL_FOLDER_DEFAULTS,\n\t\t\t{\n\t\t\t\tgooey: this.gooey,\n\t\t\t\tisRoot: true,\n\t\t\t} as const,\n\t\t\toptions,\n\t\t) as FolderOptions & InternalFolderOptions\n\n\t\t// this.closed = state(opts.closed ?? false)\n\t\t// if (opts.title === 'base') {\n\t\t// \tconsole.log(opts.closed)\n\t\t// \tconsole.log(this.closed.value)\n\t\t// \tsetTimeout(() => {\n\t\t// \t\tconsole.log(this.closed.value)\n\t\t// \t}, 1000)\n\t\t// }\n\n\t\tthis._log = new Logger(`Folder ${opts.title}`, { fg: 'DarkSalmon' })\n\t\tthis._log.fn('constructor').debug({ opts, this: this })\n\n\t\tthis.isRoot = opts.isRoot\n\n\t\tif (this.isRoot) {\n\t\t\tthis._depth = 0\n\t\t\tthis.parentFolder = this\n\t\t\tthis.root = this\n\t\t} else {\n\t\t\tif (!opts.parentFolder) {\n\t\t\t\tthrow new Error('Non-root folders must have a parent folder.')\n\t\t\t}\n\t\t\tthis.parentFolder = opts.parentFolder\n\t\t\tthis._depth = this.parentFolder._depth + 1\n\t\t\tthis.root = this.parentFolder.root\n\t\t}\n\n\t\tthis.gooey = opts.gooey\n\t\tthis._title = opts.title ?? ''\n\n\t\tthis.element = this._createElement(opts.container)\n\t\tthis.elements = this._createElements(this.element)\n\n\t\tthis.presetId = this.resolvePresetId(opts)\n\t\tthis.saveable = !!opts.saveable\n\n\t\tif (this.isRoot || opts.searchable) {\n\t\t\tnew Search(this)\n\t\t}\n\n\t\tif (opts._skipAnimations) {\n\t\t\t// We need to bypass animations so I can get the rect.\n\t\t\tthis.element.classList.add('instant')\n\n\t\t\tthis.initialHeight = this.element.scrollHeight\n\t\t\tif (this.initialHeight === 0) {\n\t\t\t\tconsole.error(`${this.title} has a height of 0.`, this.element)\n\t\t\t}\n\t\t\tthis.initialHeaderHeight = this.elements.header.scrollHeight\n\t\t\tif (this.initialHeaderHeight === 0) {\n\t\t\t\tconsole.error(`${this.title} header has a height of 0.`, this.elements.header)\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.element.classList.remove('instant')\n\t\t\t}, 0)\n\t\t}\n\n\t\tthis.hidden = opts.hidden ? toFn(opts.hidden) : () => false\n\n\t\tthis._createGraphics(opts._headerless).then(() => {\n\t\t\tthis.evm.emit('mount')\n\n\t\t\t// Open/close the folder when the closed state changes.\n\t\t\tthis.evm.add(\n\t\t\t\tthis.closed.subscribe(v => {\n\t\t\t\t\tv ? this.close() : this.open()\n\t\t\t\t\tthis.evm.emit('toggle', v)\n\t\t\t\t}),\n\t\t\t)\n\n\t\t\tif (opts.closed) {\n\t\t\t\tthis.closed.set(opts.closed)\n\t\t\t}\n\t\t})\n\t}\n\n\t//· Getters/Setters ··········································································¬\n\n\t/**\n\t * The folder's title.  Changing this will update the UI.\n\t */\n\tget title() {\n\t\treturn this._title\n\t}\n\tset title(v: string) {\n\t\tif (v === this._title) return\n\t\tthis._title = v\n\t\tthis.elements.title.animate(\n\t\t\t{\n\t\t\t\topacity: 0,\n\t\t\t\ttransform: 'translateY(-0.33rem)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tduration: 75,\n\t\t\t\teasing: 'ease-out',\n\t\t\t\tfill: 'forwards',\n\t\t\t},\n\t\t).onfinish = () => {\n\t\t\tthis.elements.title.textContent = v\n\t\t\tthis.elements.title.animate(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\ttransform: 'translateY(.33rem)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\ttransform: 'translateY(0rem)',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tdelay: 0,\n\t\t\t\t\tduration: 75,\n\t\t\t\t\teasing: 'ease-in',\n\t\t\t\t\tfill: 'forwards',\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\t}\n\n\t/**\n\t * Whether the folder is visible.\n\t */\n\tget hidden() {\n\t\treturn this._hidden()\n\t}\n\tset hidden(v: boolean | (() => boolean)) {\n\t\tthis._hidden = toFn(v)\n\t\tthis._hidden() ? this.hide() : this.show()\n\t}\n\n\t/**\n\t * A flat array of all child folders of this folder (and their children, etc).\n\t */\n\tget allChildren(): Folder[] {\n\t\treturn this.children.flatMap<Folder>(child => [child, ...child.allChildren])\n\t}\n\n\t/**\n\t * A flat array of all inputs in all child folders of this folder (and their children, etc).\n\t * See Input Generators region.\n\t */\n\tget allInputs(): Map<string, ValidInput> {\n\t\tconst allControls = new Map<string, ValidInput>()\n\t\tfor (const child of [this, ...this.allChildren]) {\n\t\t\tfor (const [key, value] of child.inputs.entries()) {\n\t\t\t\tallControls.set(key, value)\n\t\t\t}\n\t\t}\n\t\treturn allControls\n\t}\n\n\tisRootFolder(): this is Folder & { isRoot: true } {\n\t\treturn this.isRoot\n\t}\n\t//⌟\n\n\t//· Folders ··················································································¬\n\n\taddFolder(title?: string, options?: Partial<FolderOptions>): Folder {\n\t\toptions ??= {}\n\t\toptions.title ??= title\n\t\tthis._log.fn('addFolder').debug({ options, this: this })\n\t\tconst defaults = Object.assign({}, INTERNAL_FOLDER_DEFAULTS, {\n\t\t\tparentFolder: this,\n\t\t\tdepth: this._depth + 1,\n\t\t\tgooey: this.gooey,\n\t\t})\n\n\t\tconst overrides = {\n\t\t\t__type: 'InternalFolderOptions',\n\t\t\tcontainer: this.elements.content,\n\t\t\tgooey: this.gooey,\n\t\t\tisRoot: false,\n\t\t}\n\n\t\tconst opts = Object.assign({}, defaults, options, overrides) as FolderOptions &\n\t\t\tInternalFolderOptions\n\n\t\tconst folder = new Folder(opts)\n\t\tfolder.on('change', v => this.evm.emit('change', v))\n\n\t\tthis.children.push(folder)\n\n\t\tif (opts._headerless) {\n\t\t\tfolder.initialHeaderHeight ??= folder.elements.header.scrollHeight\n\t\t\tfolder.elements.header.style.display = 'none'\n\t\t}\n\n\t\treturn folder\n\t}\n\n\tprivate _handleClick(event: PointerEvent) {\n\t\tif (event.button !== 0) return\n\n\t\tthis._log.fn('#handleClick').debug({ event, this: this })\n\n\t\tthis.element.removeEventListener('pointerup', this.toggle)\n\t\tthis.element.addEventListener('pointerup', this.toggle, { once: true })\n\n\t\t// Abort if a toolbar button was clicked.\n\t\tif (composedPathContains(event, 'gooey-cancel')) return this._disableClicks()\n\n\t\t// We need to watch for the mouseup event within a certain timeframe\n\t\t// to make sure we don't accidentally trigger a click after dragging.\n\t\tclearTimeout(this._disabledTimer)\n\t\t// First we delay the drag check to allow for messy clicks.\n\t\tthis._disabledTimer = setTimeout(() => {\n\t\t\tthis.elements.header.removeEventListener('pointermove', this._disableClicks)\n\t\t\tthis.elements.header.addEventListener('pointermove', this._disableClicks, {\n\t\t\t\tonce: true,\n\t\t\t})\n\n\t\t\t// Then we set a timer to disable the drag check.\n\t\t\tthis._disabledTimer = setTimeout(() => {\n\t\t\t\tthis.elements.header.removeEventListener('pointermove', this._disableClicks)\n\t\t\t\tthis.element.removeEventListener('pointerup', this.toggle)\n\t\t\t\tthis._clicksDisabled = false\n\t\t\t}, this._clickTime)\n\t\t}, 150)\n\n\t\tif (this._clicksDisabled) return\n\t}\n\tprivate _disableClicks = () => {\n\t\tif (!this._clicksDisabled) {\n\t\t\tthis._clicksDisabled = true\n\t\t\tthis._log.fn('disable').debug('Clicks DISABLED')\n\t\t}\n\t\tthis._clicksDisabled = true\n\t\tclearTimeout(this._disabledTimer)\n\t}\n\tprivate _resetClicks() {\n\t\tthis._log.fn('cancel').debug('Clicks ENABLED')\n\t\tremoveEventListener('pointerup', this.toggle)\n\t\tthis._clicksDisabled = false\n\t}\n\n\t//·· Open/Close ······································································¬\n\n\ttoggle = () => {\n\t\tthis._log.fn('toggle').debug()\n\t\tclearTimeout(this._disabledTimer)\n\t\tif (this._clicksDisabled) {\n\t\t\tthis._resetClicks()\n\t\t\treturn\n\t\t}\n\n\t\t// If the folder is being dragged, don't toggle.\n\t\tif (this.element.classList.contains('gooey-dragged')) {\n\t\t\tthis.element.classList.remove('gooey-dragged')\n\t\t\treturn\n\t\t}\n\n\t\tconst state = !this.closed.value\n\n\t\tthis.closed.set(state)\n\n\t\tthis.evm.emit('toggle', state)\n\t}\n\n\topen(updateState = false) {\n\t\tthis._log.fn('open').debug()\n\t\tthis.element.classList.remove('closed')\n\t\tif (updateState) this.closed.set(false)\n\t\tthis._clicksDisabled = false\n\n\t\tthis.#toggleAnimClass()\n\t\tanimateConnector(this, 'open')\n\t}\n\n\tclose(updateState = false) {\n\t\tthis._log.fn('close').debug()\n\n\t\tthis.element.classList.add('closed')\n\t\tif (updateState) this.closed.set(true)\n\t\tthis._clicksDisabled = false\n\n\t\tthis.#toggleAnimClass()\n\t\tanimateConnector(this, 'close')\n\t}\n\n\ttoggleHidden() {\n\t\tthis._log.fn('toggleHidden').debug()\n\t\tthis.element.classList.toggle('hidden')\n\t}\n\n\thide() {\n\t\tthis._log.fn('hide').error()\n\t\tthis.element.classList.add('hidden')\n\t}\n\n\tshow() {\n\t\tthis._log.fn('show').debug()\n\t\tthis.element.classList.remove('hidden')\n\t}\n\n\t#toggleTimeout!: ReturnType<typeof setTimeout>\n\t#toggleAnimClass = () => {\n\t\tthis.element.classList.add('animating')\n\n\t\tclearTimeout(this.#toggleTimeout)\n\t\tthis.#toggleTimeout = setTimeout(() => {\n\t\t\tthis.element.classList.remove('animating')\n\t\t}, 600) // todo - This needs to sync with the animation duration in the css... smelly.\n\t}\n\t//⌟\n\n\t//·· Save/Load ···············································································¬\n\n\tresolvePresetId = (opts?: FolderOptions) => {\n\t\tthis._log.fn('resolvePresetId').debug({ opts, this: this })\n\t\tconst getPaths = (folder: Folder): string[] => {\n\t\t\tif (folder.isRootFolder.bind(folder) || !(folder.parentFolder === this))\n\t\t\t\treturn [folder.title]\n\n\t\t\treturn [...getPaths(folder.parentFolder), folder.title]\n\t\t}\n\t\tconst paths = getPaths(this)\n\n\t\tlet presetId = opts?.presetId || paths.join('__')\n\n\t\tif (!presetId) {\n\t\t\tlet i = 0\n\t\t\tfor (const child of this.allChildren) {\n\t\t\t\tif (child.presetId == presetId) i++\n\t\t\t}\n\t\t\tif (i > 0) presetId += i\n\t\t}\n\n\t\treturn presetId\n\t}\n\n\tsave(): FolderPreset {\n\t\tthis._log.fn('save').debug({ this: this })\n\n\t\tif (this.saveable !== true) {\n\t\t\tthrow new Error('Attempted to save unsaveable Folder: ' + this.title)\n\t\t}\n\n\t\tconst preset: FolderPreset = {\n\t\t\t__type: 'FolderPreset',\n\t\t\tid: this.presetId,\n\t\t\ttitle: this.title,\n\t\t\tclosed: this.closed.value,\n\t\t\thidden: toFn(this._hidden)(),\n\t\t\tchildren: this.children\n\t\t\t\t.filter(c => c.title !== Gooey.settingsFolderTitle && c.saveable)\n\t\t\t\t.map(child => child.save()),\n\t\t\tinputs: Array.from(this.inputs.values())\n\t\t\t\t.filter(i => i.opts.saveable)\n\t\t\t\t.map(input => input.save()),\n\t\t}\n\n\t\treturn preset\n\t}\n\n\t/**\n\t * Updates all inputs with values from the {@link FolderPreset}.  If the preset has children,\n\t * those presets will also be passed to the corresponding child folders'\n\t * {@link Folder.load|`load`} method.\n\t */\n\tload(preset: FolderPreset) {\n\t\tthis._log.fn('load').debug({ preset, this: this })\n\n\t\tthis.closed.set(preset.closed)\n\t\tthis.hidden = preset.hidden\n\n\t\tfor (const child of this.children) {\n\t\t\tconst data = preset.children?.find(f => f.id === child.presetId)\n\t\t\tif (data) child.load(data)\n\t\t}\n\n\t\tfor (const input of this.inputs.values()) {\n\t\t\tconst data = preset.inputs.find(c => c.presetId === input.id)\n\t\t\tif (data) input.load(data)\n\t\t}\n\t}\n\t//⌟\n\t//⌟\n\n\t//· Input Generators ·········································································¬\n\n\t/**\n\t * Updates the ui for all inputs belonging to this folder to reflect their current values.\n\t */\n\trefresh() {\n\t\tthis._log.fn('refresh').debug(this)\n\n\t\tfor (const input of this.inputs.values()) {\n\t\t\tinput.refresh()\n\t\t}\n\t}\n\n\t/**\n\t * Updates the ui for all inputs in this folder and all child folders recursively.\n\t */\n\trefreshAll() {\n\t\tfor (const input of this.allInputs.values()) {\n\t\t\tinput.refresh()\n\t\t}\n\n\t\tthis.evm.emit('refresh')\n\t}\n\n\taddMany(obj: Record<string, any>, options?: { folder?: Folder }) {\n\t\tconst folder = options?.folder ?? this\n\n\t\tfor (const [key, value] of Object.entries(obj)) {\n\t\t\tif (typeof value === 'object') {\n\t\t\t\tif (isColor(value)) {\n\t\t\t\t\tthis.addColor({ title: key, value })\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst subFolder = folder.addFolder(key)\n\t\t\t\tsubFolder.addMany(value, { folder: subFolder })\n\t\t\t} else {\n\t\t\t\tconst opts = {\n\t\t\t\t\ttitle: key,\n\t\t\t\t\tvalue,\n\t\t\t\t\tbinding: {\n\t\t\t\t\t\ttarget: obj,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tif (typeof value === 'number') {\n\t\t\t\t\tif (value > 0) {\n\t\t\t\t\t\t;(opts as NumberInputOptions).max = value * 2\n\t\t\t\t\t\t;(opts as NumberInputOptions).step = value / 10\n\t\t\t\t\t\t;(opts as NumberInputOptions).min = 0\n\t\t\t\t\t} else if (value == 0) {\n\t\t\t\t\t\t;(opts as NumberInputOptions).min = -1\n\t\t\t\t\t\t;(opts as NumberInputOptions).step = 0.01\n\t\t\t\t\t\t;(opts as NumberInputOptions).max = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\t;(opts as NumberInputOptions).min = value * 2\n\t\t\t\t\t\t;(opts as NumberInputOptions).step = value / 10\n\t\t\t\t\t\t;(opts as NumberInputOptions).max = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.add(opts)\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(title: string, options: SwitchInputOptions): InputSwitch\n\tadd(options: SwitchInputOptions, never?: never): InputSwitch\n\tadd(title: string, options: NumberInputOptions): InputNumber\n\tadd(options: NumberInputOptions, never?: never): InputNumber\n\tadd(title: string, options: TextInputOptions): InputText\n\tadd(options: TextInputOptions, never?: never): InputText\n\tadd(title: string, options: ColorInputOptions): InputColor\n\tadd(options: ColorInputOptions, never?: never): InputColor\n\tadd(title: string, options: ButtonInputOptions): InputButton\n\tadd(options: ButtonInputOptions, never?: never): InputButton\n\tadd(title: string, options: ButtonGridInputOptions): InputButtonGrid\n\tadd(options: ButtonGridInputOptions, never?: never): InputButtonGrid\n\tadd<T>(title: string, options: SelectInputOptions<T>): InputSelect<T>\n\tadd<T>(options: SelectInputOptions<T>, never?: never): InputSelect<T>\n\tadd(options: InputOptions, never?: never): ValidInput\n\tadd(titleOrOptions: string | InputOptions, maybeOptions?: InputOptions): ValidInput {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = this._createInput(opts)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Binds an input to a target object and key.  The input will automatically update the target\n\t * object's key when the input value changes.\n\t * @param target - The object to bind the input to.\n\t * @param key - The key of the target object to bind the input to.\n\t * @param options - The {@link InputOptions}, the type of which is inferred based on the type\n\t * of the value at the {@link target} object's {@link key}.\n\t * @example\n\t * ```ts\n\t * const gooey = new Gooey()\n\t * const params = { foo: 5, bar: 'baz' }\n\t * const folder = gooey.addFolder('params')\n\t *\n\t * const numberInput = folder.bind(params, 'foo', { min: 0, max: 10, step: 1 })\n\t * //    ^? `InputNumber`\n\t *\n\t * const textInput = folder.bind(params, 'bar', { maxLength: 50 })\n\t * //    ^? `InputText`\n\t */\n\tbind<\n\t\tTTarget extends Record<string, any>,\n\t\tTKey extends keyof TTarget,\n\t\tTValue extends TTarget[TKey],\n\t\tTOptions extends InferOptions<TValue>,\n\t\tTInput extends InferInput<TValue>,\n\t>(target: TTarget, key: TKey, options?: Partial<TOptions>): TInput {\n\t\tconst value = target[key] as TValue\n\t\tconst opts = options ?? ({} as TOptions)\n\t\topts.title ??= key as string\n\t\topts.binding = { target, key, initial: value }\n\n\t\tconst input = this._createInput(opts)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\n\t\treturn input as unknown as TInput\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputNumber} to the folder.\n\t */\n\taddNumber(title: string, options: NumberInputOptions): InputNumber\n\taddNumber(options: NumberInputOptions, never?: never): InputNumber\n\taddNumber(\n\t\ttitleOrOptions: string | NumberInputOptions,\n\t\tmaybeOptions?: NumberInputOptions,\n\t): InputNumber {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputNumber(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputNumber} to the provided key on the given target object.\n\t */\n\tbindNumber<T extends Record<string, any>, K extends keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<NumberInputOptions>,\n\t): InputNumber\n\tbindNumber(title: string, options: Partial<NumberInputOptions>): InputNumber\n\tbindNumber<\n\t\tT extends Record<any, any>,\n\t\tK extends keyof T,\n\t\tKK extends T[K] extends number ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<NumberInputOptions>,\n\t\toptions?: Partial<NumberInputOptions>,\n\t): InputNumber {\n\t\tconst opts = this._resolveBinding<NumberInputOptions>(titleOrTarget, keyOrOptions, options)\n\t\tconst input = new InputNumber(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputText} to the folder.\n\t */\n\taddText(title: string, options: TextInputOptions): InputText\n\taddText(options: TextInputOptions, never?: never): InputText\n\taddText(titleOrOptions: string | TextInputOptions, maybeOptions?: TextInputOptions): InputText {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputText(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputText} to the provided key on the given target object.\n\t */\n\tbindText<T extends Record<string, any>, K extends keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<TextInputOptions>,\n\t): InputText\n\tbindText(title: string, options: Partial<TextInputOptions>): InputText\n\tbindText<\n\t\tT extends Record<any, any>,\n\t\tK extends keyof T,\n\t\tKK extends T[K] extends string ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<TextInputOptions>,\n\t\toptions?: Partial<TextInputOptions>,\n\t): InputText {\n\t\tconst opts = this._resolveBinding<TextInputOptions>(titleOrTarget, keyOrOptions, options)\n\t\tconst input = new InputText(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputColor} to the folder.\n\t */\n\taddColor(title: string, options: ColorInputOptions): InputColor\n\taddColor(options: ColorInputOptions, never?: never): InputColor\n\taddColor(\n\t\ttitleOrOptions: string | ColorInputOptions,\n\t\tmaybeOptions?: ColorInputOptions,\n\t): InputColor {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputColor(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputColor} to the provided key on the given target object.\n\t */\n\tbindColor<T extends Record<string, any>, K extends keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<ColorInputOptions>,\n\t): InputColor\n\tbindColor(title: string, options: Partial<ColorInputOptions>): InputColor\n\tbindColor<\n\t\tT extends Record<any, any>,\n\t\tK extends keyof T,\n\t\tKK extends T[K] extends ColorFormat ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<ColorInputOptions>,\n\t\toptions?: Partial<ColorInputOptions>,\n\t): InputColor {\n\t\tconst opts = this._resolveBinding<ColorInputOptions>(titleOrTarget, keyOrOptions, options)\n\t\tconst input = new InputColor(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputButton} to the folder.\n\t */\n\taddButton(title: string, options: ButtonInputOptions): InputButton\n\taddButton(options: ButtonInputOptions, never?: never): InputButton\n\taddButton(\n\t\ttitleOrOptions: string | ButtonInputOptions,\n\t\tmaybeOptions?: ButtonInputOptions,\n\t): InputButton {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputButton(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputButton} to the provided key on the given target object.\n\t */\n\tbindButton<T extends Record<string, any>, K extends keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<ButtonInputOptions>,\n\t): InputButton\n\tbindButton(title: string, options: Partial<ButtonInputOptions>): InputButton\n\tbindButton<\n\t\tT extends Record<any, any>,\n\t\tK extends keyof T,\n\t\tKK extends T[K] extends Function ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<ButtonInputOptions>,\n\t\toptions?: Partial<ButtonInputOptions>,\n\t): InputButton {\n\t\tconst opts = this._resolveBinding<ButtonInputOptions>(titleOrTarget, keyOrOptions, options)\n\t\tconst input = new InputButton(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputButtonGrid} to the folder.\n\t */\n\taddButtonGrid(title: string, options: ButtonGridInputOptions): InputButtonGrid\n\taddButtonGrid(options: ButtonGridInputOptions, never?: never): InputButtonGrid\n\taddButtonGrid(\n\t\ttitleOrOptions: string | ButtonGridInputOptions,\n\t\tmaybeOptions?: ButtonGridInputOptions,\n\t): InputButtonGrid {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputButtonGrid(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputButtonGrid} to the provided key on the given target object.\n\t */\n\tbindButtonGrid<T extends Record<string, any>, K extends keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<ButtonGridInputOptions>,\n\t): InputButtonGrid\n\tbindButtonGrid(title: string, options: Partial<ButtonGridInputOptions>): InputButtonGrid\n\tbindButtonGrid<\n\t\tT extends Record<any, any>,\n\t\tK extends keyof T,\n\t\tKK extends T[K] extends Function ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<ButtonGridInputOptions>,\n\t\toptions?: Partial<ButtonGridInputOptions>,\n\t): InputButtonGrid {\n\t\tconst opts = this._resolveBinding<ButtonGridInputOptions>(\n\t\t\ttitleOrTarget,\n\t\t\tkeyOrOptions,\n\t\t\toptions,\n\t\t)\n\t\tconst input = new InputButtonGrid(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputSelect} to the folder.\n\t */\n\taddSelect<T>(title: string, options: SelectInputOptions<T>): InputSelect<T>\n\taddSelect<T>(options: SelectInputOptions<T>, never?: never): InputSelect<T>\n\taddSelect<T>(\n\t\ttitleOrOptions: string | SelectInputOptions<T>,\n\t\tmaybeOptions?: SelectInputOptions<T>,\n\t): InputSelect<T> {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputSelect(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputSelect} to the provided key on the given target object.\n\t */\n\tbindSelect<T extends Record<any, any> = Record<any, any>, K extends keyof T = keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<SelectInputOptions<T>>,\n\t): InputSelect<T>\n\tbindSelect<T>(title: string, options: Partial<SelectInputOptions<T>>): InputSelect<T>\n\tbindSelect<\n\t\tT extends Record<any, any> = Record<any, any>,\n\t\tTOptions extends SelectInputOptions<T> = SelectInputOptions<T>,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: TOptions | never,\n\t\toptions?: TOptions,\n\t): InputSelect<T> {\n\t\tconst opts = this._resolveBinding<SelectInputOptions<T>>(\n\t\t\ttitleOrTarget,\n\t\t\tkeyOrOptions,\n\t\t\toptions,\n\t\t)\n\t\tconst input = new InputSelect(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Explicitly adds an {@link InputSwitch} to the folder.\n\t */\n\taddSwitch(title: string, options: SwitchInputOptions): InputSwitch\n\taddSwitch(options: SwitchInputOptions, never?: never): InputSwitch\n\taddSwitch(\n\t\ttitleOrOptions: string | SwitchInputOptions,\n\t\tmaybeOptions?: SwitchInputOptions,\n\t): InputSwitch {\n\t\tconst opts = this._resolveOptions(titleOrOptions, maybeOptions)\n\t\tconst input = new InputSwitch(opts, this)\n\t\tthis.inputs.set(input.id, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\t/**\n\t * Explicitly binds an {@link InputSwitch} to the provided key on the given target object.\n\t */\n\tbindSwitch<T, K extends keyof T>(\n\t\ttarget: T,\n\t\tkey: K,\n\t\toptions?: Partial<SwitchInputOptions>,\n\t): InputSwitch\n\tbindSwitch(title: string, options: Partial<SwitchInputOptions>): InputSwitch\n\tbindSwitch<\n\t\tT extends Record<any, any>,\n\t\tK extends keyof T,\n\t\tKK extends T[K] extends boolean ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<SwitchInputOptions>,\n\t\toptions?: Partial<SwitchInputOptions>,\n\t): InputSwitch {\n\t\tconst opts = this._resolveBinding<SwitchInputOptions>(titleOrTarget, keyOrOptions, options)\n\t\tconst input = new InputSwitch(opts, this)\n\t\tthis.inputs.set(input.title, input)\n\t\tthis._refreshIcon()\n\t\treturn input\n\t}\n\n\t/**\n\t * Does validation / error handling.\n\t * If no title was provided, this method will also assign the binding key to the title.\n\t * @returns The processed options.\n\t */\n\tprivate _validateOptions<T extends InputOptions>(options: T, validate?: boolean): T {\n\t\tif (options.binding?.key && !options.title) {\n\t\t\toptions.title = options.binding.key\n\t\t}\n\n\t\t// Some (hopefully) helpful error handling.\n\t\tif (validate) {\n\t\t\tconst b = options.binding\n\t\t\tlet value = options.value\n\n\t\t\tif (!value) {\n\t\t\t\tvalue = b?.target[b?.key]\n\t\t\t}\n\n\t\t\tif (!value) {\n\t\t\t\tif (b) {\n\t\t\t\t\tlet err = false\n\n\t\t\t\t\tif (typeof b.target === 'undefined') {\n\t\t\t\t\t\terr = true\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`\\x1b[96mgooey\\x1b[39m ~ \\x1b[91mError\\x1b[39m Binding \"target\" is undefined:`,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof b.key === 'undefined') {\n\t\t\t\t\t\terr = true\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`\\x1b[96mgooey\\x1b[39m ~ \\x1b[91mError\\x1b[39m Binding \"key\" is undefined:`,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof b.target[b.key] === 'undefined') {\n\t\t\t\t\t\terr = true\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`\\x1b[96mgooey\\x1b[39m ~ \\x1b[91mError\\x1b[39m The provided binding key \\x1b[33m\"${b.key}\"\\x1b[39m does not exist on provided \\x1b[33mtarget\\x1b[39m:`,\n\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'gooey ~ Failed to bind input to the provided target object.',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcause: options,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('gooey ~ No value or binding provided.', { cause: options })\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn options\n\t}\n\n\tprivate _createInput<TOptions extends InputOptions>(options: TOptions) {\n\t\tthis._log.fn('#createInput').debug(this)\n\t\tconst type = this._resolveType(options)\n\t\toptions = this._validateOptions(options)\n\n\t\tswitch (type) {\n\t\t\tcase 'InputText':\n\t\t\t\treturn new InputText(options as TextInputOptions, this)\n\t\t\tcase 'InputNumber':\n\t\t\t\treturn new InputNumber(options as NumberInputOptions, this)\n\t\t\tcase 'InputColor':\n\t\t\t\treturn new InputColor(options as ColorInputOptions, this)\n\t\t\tcase 'InputSelect':\n\t\t\t\treturn new InputSelect(options as SelectInputOptions<Option<any>>, this)\n\t\t\tcase 'InputButton':\n\t\t\t\treturn new InputButton(options as ButtonInputOptions, this)\n\t\t\tcase 'InputSwitch':\n\t\t\t\treturn new InputSwitch(options as SwitchInputOptions, this)\n\t\t}\n\n\t\tthrow new Error('Invalid input type: ' + type + ' for options: ' + options)\n\t}\n\n\tprivate _resolveOptions<T extends InputOptions>(\n\t\ttitleOrOptions: string | T,\n\t\tmaybeOptions?: T,\n\t): T {\n\t\tconst twoArgs = typeof titleOrOptions === 'string' && typeof maybeOptions === 'object'\n\t\tconst title = twoArgs ? (titleOrOptions as string) : maybeOptions?.title ?? ''\n\t\tconst options = twoArgs ? maybeOptions! : (titleOrOptions as T)\n\t\toptions.title ??= title\n\t\treturn options\n\t}\n\n\tprivate _resolveBinding<\n\t\tTOptions extends InputOptions,\n\t\tT extends Record<any, any> = Record<any, any>,\n\t\tK extends keyof T = keyof T,\n\t\tKK extends T[K] extends number ? K : never = T[K] extends number ? K : never,\n\t>(\n\t\ttitleOrTarget: string | T,\n\t\tkeyOrOptions?: KK | Partial<TOptions>,\n\t\toptions?: Partial<TOptions>,\n\t) {\n\t\tlet opts: Partial<TOptions>\n\t\tlet shouldHaveValue = false\n\t\tif (typeof titleOrTarget === 'string') {\n\t\t\topts = (keyOrOptions as Partial<TOptions>) ?? {}\n\t\t\topts.title = titleOrTarget\n\t\t} else {\n\t\t\tshouldHaveValue = true\n\t\t\tconst target = titleOrTarget\n\t\t\tconst key = keyOrOptions as KK\n\t\t\topts = options ?? {}\n\t\t\topts.binding = { target, key, initial: target[key] }\n\t\t}\n\n\t\treturn this._validateOptions(opts, shouldHaveValue)\n\t}\n\n\tprivate _resolveType(options: any): InputType {\n\t\tthis._log.fn('resolveType').debug({ options, this: this })\n\t\tlet value = options.value ?? options.binding?.target[options.binding!.key]\n\n\t\tif ('onClick' in options) {\n\t\t\treturn 'InputButton'\n\t\t}\n\n\t\tif (('options' in options && Array.isArray(options.options)) || isLabeledOption(value)) {\n\t\t\tvalue ??= options.options[0]\n\t\t\toptions.value ??= value\n\t\t\treturn 'InputSelect'\n\t\t}\n\n\t\tswitch (typeof value) {\n\t\t\tcase 'boolean': {\n\t\t\t\t// todo:\n\t\t\t\t// We need some way to differentiate between a switch and a checkbox once the checkbox is added.\n\t\t\t\t// ^ Why do we need a checkbox?\n\t\t\t\treturn 'InputSwitch'\n\t\t\t}\n\t\t\tcase 'number': {\n\t\t\t\treturn 'InputNumber'\n\t\t\t}\n\t\t\tcase 'string': {\n\t\t\t\tif (isColorFormat(value)) return 'InputColor'\n\t\t\t\t// todo:\n\t\t\t\t// Could detect CSS units like `rem` and `-5px 0 0 3px` for an advanced `CSSTextInput` or something.\n\t\t\t\t// Or like a \"TextComponents\" input that can have any number of \"components\" (like a color picker, number, select, etc) inside a string.\n\t\t\t\treturn 'InputText'\n\t\t\t}\n\t\t\tcase 'function': {\n\t\t\t\treturn 'InputButton'\n\t\t\t}\n\t\t\tcase 'object': {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\treturn 'InputSelect'\n\t\t\t\t}\n\t\t\t\tif (isColor(value)) {\n\t\t\t\t\treturn 'InputColor'\n\t\t\t\t}\n\t\t\t\tif (isLabeledOption(value)) {\n\t\t\t\t\treturn 'InputSelect'\n\t\t\t\t}\n\t\t\t\tthrow new Error('Invalid input view: ' + JSON.stringify(value))\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthrow new Error('Invalid input view: ' + value)\n\t\t\t}\n\t\t}\n\t}\n\t//⌟\n\n\t//· Elements ·················································································¬\n\n\tprivate _createElement(el?: HTMLElement) {\n\t\tthis._log.fn('#createElement').debug({ el, this: this })\n\t\tif (this.isRoot) {\n\t\t\treturn create('div', {\n\t\t\t\tid: `gooey-root_${this.id}`,\n\t\t\t\tclasses: ['gooey-root', 'gooey-folder', 'closed'],\n\t\t\t\tdataset: { theme: this.gooey!.theme ?? 'default' },\n\t\t\t\tparent: el,\n\t\t\t})\n\t\t}\n\n\t\treturn create('div', {\n\t\t\tparent: this.parentFolder.elements.content,\n\t\t\tclasses: ['gooey-folder', 'closed'],\n\t\t})\n\t}\n\n\tprivate _createElements(element: HTMLElement): FolderElements {\n\t\tthis._log.fn('#createElements').debug({ element, this: this })\n\t\tconst header = create('div', {\n\t\t\tparent: element,\n\t\t\tclasses: ['gooey-header'],\n\t\t})\n\t\theader.addEventListener('pointerdown', this._handleClick.bind(this))\n\n\t\tconst title = create('div', {\n\t\t\tparent: header,\n\t\t\tclasses: ['gooey-title'],\n\t\t\ttextContent: this.title,\n\t\t})\n\n\t\tconst toolbar = create('div', {\n\t\t\tparent: header,\n\t\t\tclasses: ['gooey-toolbar'],\n\t\t})\n\n\t\tconst contentWrapper = create('div', {\n\t\t\tclasses: ['gooey-content-wrapper'],\n\t\t\tparent: element,\n\t\t})\n\t\tconst content = create('div', {\n\t\t\tclasses: ['gooey-content'],\n\t\t\tparent: contentWrapper,\n\t\t})\n\n\t\treturn {\n\t\t\theader,\n\t\t\ttoolbar: {\n\t\t\t\tcontainer: toolbar,\n\t\t\t\t// settingsButton,\n\t\t\t},\n\t\t\ttitle,\n\t\t\tcontentWrapper,\n\t\t\tcontent,\n\t\t}\n\t}\n\t//⌟\n\n\t//· SVG's ····················································································¬\n\n\tprivate async _createGraphics(headerless = false): Promise<void> {\n\t\tif (this.isRootFolder()) return\n\t\tthis._log.fn('createGraphics').debug({ this: this })\n\n\t\t// await Promise.resolve()\n\t\tawait new Promise(resolve => setTimeout(resolve, 0))\n\n\t\tif (!this.isRootFolder()) {\n\t\t\tthis.graphics = { icon: createFolderSvg(this) }\n\t\t\tthis.elements.header.prepend(this.graphics.icon)\n\n\t\t\tif (!headerless) {\n\t\t\t\tthis.initialHeaderHeight ??= this._resolveHeaderHeight()\n\t\t\t\t// this.initialHeaderHeight = this._resolveHeaderHeight()\n\t\t\t\tthis.graphics.connector = createFolderConnector(this, this.graphics.icon)\n\t\t\t\t// this.element.prepend(this.graphics.connector.container)\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) new TerminalSvg(this)\n\t}\n\n\tprivate _resolveHeaderHeight() {\n\t\t// Get the _pixel_ value of the `--gooey-header_height` variable for SVG generation.\n\t\tlet height = 16 * 1.75\n\t\tconst wrapper = this.root?.gooey?.wrapper\n\t\tif (!wrapper) {\n\t\t\tthrow new Error('No wrapper found!  This should never happen...')\n\t\t}\n\t\tconst prop = getComputedStyle(wrapper).getPropertyValue('--gooey-header_height')\n\t\tif (prop.endsWith('px')) {\n\t\t\theight = parseFloat(prop)\n\t\t} else if (prop.endsWith('em')) {\n\t\t\tlet fontSize = parseFloat(getComputedStyle(document.documentElement).fontSize) || 16\n\t\t\theight = parseFloat(prop) * fontSize\n\t\t} else {\n\t\t\tconsole.error('Invalid header height for', this.title)\n\t\t\tconsole.error({\n\t\t\t\tprop,\n\t\t\t})\n\t\t}\n\t\treturn height\n\t}\n\n\tget hue() {\n\t\tconst localIndex = this.parentFolder.children.indexOf(this)\n\t\t// note: Color will be off if we ever add built-in folders other than \"Settings Folder\".\n\t\tconst i = this.parentFolder.isRootFolder() ? localIndex - 1 : localIndex\n\t\t// Don't count the root folder.\n\t\tconst depth = this._depth - 1\n\n\t\treturn i * 20 + depth * 80\n\t}\n\n\tprivate _refreshIcon() {\n\t\tthis._log.fn('#refreshIcon').debug(this)\n\n\t\tif (this.graphics) {\n\t\t\tthis.graphics.icon.replaceWith(createFolderSvg(this)) // Don't love this...\n\t\t}\n\t}\n\t//⌟\n\n\tdisposed = false\n\tdispose() {\n\t\tif (this.disposed && DEV) {\n\t\t\tthis._log.fn('dispose').error('Already disposed.', this)\n\t\t\treturn\n\t\t}\n\t\tthis.elements.header.removeEventListener('click', this.toggle)\n\t\tthis.elements.header.addEventListener('pointerdown', this._handleClick)\n\n\t\tthis.element.remove()\n\n\t\tfor (const input of this.inputs.values()) {\n\t\t\tinput.dispose()\n\t\t}\n\n\t\tfor (const child of this.children) {\n\t\t\tchild.dispose()\n\t\t}\n\n\t\ttry {\n\t\t\tthis.parentFolder.children.splice(this.parentFolder.children.indexOf(this), 1)\n\t\t} catch (err) {\n\t\t\tthis._log.fn('dispose').error('Error removing folder from parent', { err })\n\t\t}\n\n\t\tthis.disposed = true\n\t}\n}\n"],"names":[],"mappings":"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"}