{"version":3,"file":"InputButtonGrid.js","sources":["../../../../src/inputs/InputButtonGrid.ts"],"sourcesContent":["import type { JavascriptStyleProperty } from '../shared/css-types'\nimport type { TooltipOptions } from '../shared/Tooltip'\nimport type { CreateOptions } from '../shared/create'\nimport type { ElementMap, InputOptions } from './Input'\nimport type { Folder } from '../Folder'\nimport type {\n\tButtonControllerEvents,\n\tButtonControllerOptions,\n} from '../controllers/ButtonController'\n\nimport { ButtonController } from '../controllers/ButtonController'\nimport { getStyle } from '../shared/getStyle'\nimport { nanoid } from '../shared/nanoid'\nimport { Logger } from '../shared/logger'\nimport { create } from '../shared/create'\nimport { state } from '../shared/state'\nimport { toFn } from '../shared/toFn'\nimport { Input } from './Input'\n\n/**\n * A 2D array of {@link ButtonControllerOptions} objects, representing a grid of buttons. The inner\n * arrays represent rows, and the outer array represents columns.\n * @example\n * ```ts\n * [\n *   // First row columns\n *   [\n *     { text: 'top-left', onClick: () => {} },\n *     { text: 'top-right', onClick: () => {} }\n *   ],\n *   // Second row columns\n *   [\n *     { text: 'bottom-left', onClick: () => {} },\n *     { text: 'bottom-right', onClick: () => {} }\n *   ]\n * ]\n * ```\n */\nexport type ButtonGridArrays = ButtonControllerOptions[][]\n\n/**\n * A fully processed {@link ButtonGridArrays} entry with the generated {@link ButtonController}s.\n * Stored in the input's {@link InputButtonGrid.buttonGrid|`buttonGrid`} property.\n */\nexport type ButtonGrid = ButtonController[][]\n\nexport type ButtonGridInputOptions = {\n\treadonly __type?: 'ButtonGridInputOptions'\n\tvalue: ButtonGridArrays\n\t/**\n\t * Optional css style overrides in {@link JavascriptStyleProperty} (camelCase) format.\n\t */\n\tstyle?: CreateOptions['style']\n\t/**\n\t * If `true`, the `active` class will be added to the last clicked button, and removed from\n\t * all other buttons.  This is useful for indicating the currently selected button in a grid.\n\t * @default true\n\t */\n\tactiveOnClick?: boolean\n\tdisabled?: boolean | (() => boolean)\n} & InputOptions<ButtonGridArrays>\n\nexport const BUTTONGRID_INPUT_DEFAULTS = {\n\t__type: 'ButtonGridInputOptions' as const,\n\tvalue: [[{ text: '', onClick: () => {} }]],\n\tstyle: {\n\t\tgap: '0.5em',\n\t},\n\tactiveOnClick: false,\n\tresettable: false,\n} as const satisfies ButtonGridInputOptions\n\nexport interface ButtonGridControllerElements extends ElementMap {\n\tcontainer: HTMLElement\n\tbuttonGrid: HTMLButtonElement[]\n}\n\nexport type ButtonId = string\n\nexport class InputButtonGrid extends Input<\n\tButtonController,\n\tButtonGridInputOptions,\n\tButtonGridControllerElements,\n\tButtonControllerEvents\n> {\n\treadonly __type = 'InputButtonGrid' as const\n\treadonly initialValue = {} as ButtonGridArrays\n\treadonly state = state({} as ButtonController)\n\n\tbuttons: Map<ButtonId, ButtonController> = new Map()\n\tbuttonGrid: ButtonGrid\n\n\tprivate _log: Logger\n\n\tconstructor(options: Partial<ButtonGridInputOptions>, folder: Folder) {\n\t\tconst opts = Object.assign({}, BUTTONGRID_INPUT_DEFAULTS, options)\n\t\tsuper(opts, folder)\n\n\t\tthis._evm.registerEvents(['click'])\n\n\t\tthis.initialValue = opts.value\n\t\tthis._log = new Logger(`InputButtonGrid ${opts.title}`, { fg: 'cyan' })\n\t\tthis._log.fn('constructor').debug({ opts, this: this })\n\n\t\tconst container = create('div', {\n\t\t\tclasses: ['gooey-input', 'gooey-input-buttongrid-container'],\n\t\t\tparent: this.elements.content,\n\t\t})\n\n\t\tthis.elements.controllers = {\n\t\t\tcontainer,\n\t\t\tbuttonGrid: [],\n\t\t} as const satisfies ButtonGridControllerElements\n\n\t\tthis.buttonGrid = this.toGrid(this.initialValue)\n\n\t\tthis.refresh()\n\t}\n\n\tonClick(callback: (payload: ButtonController) => void) {\n\t\tthis._evm.on('click', () => callback(this.state.value))\n\t}\n\n\t/**\n\t * Converts a {@link ButtonGridArrays} into a a grid of {@link HTMLButtonElement}\n\t * elements, and\n\t *\n\t * - appends them to the {@link InputButtonGrid.elements.controllers.container}\n\t */\n\ttoGrid(grid: ButtonGridArrays) {\n\t\tconst instanceGrid: ButtonGrid = []\n\n\t\tconst rows = grid.length\n\t\tconst cols = Math.max(...grid.map(row => row.length))\n\n\t\t// Remove all buttons.\n\t\tfor (const { element } of this.buttons.values()) {\n\t\t\telement.remove()\n\t\t}\n\t\tthis.buttons.clear()\n\n\t\tfor (let i = 0; i < rows; i++) {\n\t\t\tconst row = create('div', {\n\t\t\t\tclasses: ['gooey-controller-buttongrid-row'],\n\t\t\t\tparent: this.elements.controllers.container,\n\t\t\t\tstyle: { gap: '0.5em' },\n\t\t\t})\n\n\t\t\tinstanceGrid[i] = []\n\n\t\t\tfor (let j = 0; j < cols; j++) {\n\t\t\t\tconst opts = grid[i]?.[j]\n\t\t\t\tif (opts) {\n\t\t\t\t\tconst button = this.addButton(opts, opts.id ?? nanoid(8), i, j)\n\t\t\t\t\trow.appendChild(button.element)\n\t\t\t\t\tinstanceGrid[i][j] = button\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.elements.container.style.setProperty(\n\t\t\t'height',\n\t\t\t// getComputedStyle(this.elements.controllers.container).height,\n\t\t\tgetStyle(this.elements.controllers.container, 'height'),\n\t\t)\n\n\t\treturn instanceGrid\n\t}\n\n\taddButton(opts: ButtonControllerOptions, id: string, i: number, j: number) {\n\t\tconst text = toFn(opts.text)\n\n\t\tconst tooltip: Partial<TooltipOptions> | undefined = opts.tooltip\n\t\t\t? Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tplacement: 'top',\n\t\t\t\t\t\tdelay: 1000,\n\t\t\t\t\t},\n\t\t\t\t\topts.tooltip,\n\t\t\t\t)\n\t\t\t: undefined\n\n\t\topts.element = create('button', {\n\t\t\tid,\n\t\t\tclasses: [\n\t\t\t\t'gooey-controller',\n\t\t\t\t'gooey-controller-button',\n\t\t\t\t'gooey-controller-buttongrid-button',\n\t\t\t],\n\t\t\tinnerHTML: text(),\n\t\t\tdataset: {\n\t\t\t\tid,\n\t\t\t\trow: String(i),\n\t\t\t\tcol: String(j),\n\t\t\t},\n\t\t\tstyle: {\n\t\t\t\t...opts.style,\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t\ttooltip,\n\t\t})\n\n\t\tconst btn = new ButtonController(opts)\n\n\t\tif (typeof opts.active !== 'function') {\n\t\t\tif (this.opts.activeOnClick) {\n\t\t\t\tbtn.active = () => {\n\t\t\t\t\treturn this.state.value === btn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbtn.on('click', ({ button }) => {\n\t\t\tthis.set(button)\n\t\t})\n\n\t\tthis.buttons.set(id, btn)\n\n\t\treturn btn\n\t}\n\n\tset(button: ButtonController) {\n\t\tthis.state.set(button)\n\n\t\tthis._emit('click', button)\n\t\tthis.refresh()\n\t}\n\n\trefresh() {\n\t\tthis._log.fn('refresh').debug({ this: this })\n\n\t\tfor (const btn of this.buttons.values()) {\n\t\t\tbtn.refresh()\n\t\t}\n\n\t\tsuper.refresh()\n\t\treturn this\n\t}\n\n\tenable() {\n\t\tfor (const btn of this.buttons.values()) {\n\t\t\tbtn.enable()\n\t\t}\n\t\tsuper.enable()\n\t\treturn this\n\t}\n\n\tdisable() {\n\t\tfor (const btn of this.buttons.values()) {\n\t\t\tbtn.disable()\n\t\t}\n\t\tsuper.disable()\n\t\treturn this\n\t}\n\n\tdispose() {\n\t\tfor (const btn of this.buttons.values()) {\n\t\t\tbtn.dispose()\n\t\t}\n\t\tthis.buttons.clear()\n\t\tsuper.dispose()\n\t}\n}\n"],"names":[],"mappings":"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"}