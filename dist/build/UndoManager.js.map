{"version":3,"file":"UndoManager.js","sources":["../../../src/UndoManager.ts"],"sourcesContent":["/*\n * // todo - There's still an off-by-one error in the undo manager.\n * repro:\n * - change 2 different inputs\n * - undo once\n * - change 1 input\n * Things will be out of sync.\n * Also, when undoing all the way, the pointer is -1, but the stack still has 1 commit.\n */\n\nimport type { Input, ValidInputValue } from './inputs/Input'\n\n/**\n * A recorded \"action\" callback that can be re-played forwards or backwards.\n */\nexport type Commit<V extends ValidInputValue = ValidInputValue> = {\n\tfrom: V\n\tto: V\n\ttarget: Input<V>\n\tsetter?: (v: V) => void\n}\n\nexport class UndoManager {\n\tpointer = -1\n\tmaxHistory = 50\n\tstack: Commit[] = []\n\n\t/**\n\t * Ignores's all commits while `true`.\n\t */\n\tlockedExternally = false\n\n\t/**\n\t * Ignores's all commits while `true`.\n\t */\n\tprivate _lockedInternally = false\n\n\tconstructor() {}\n\n\tcommit<V>(commit: Commit<V>, _debounce = 100) {\n\t\tif (this._lockedInternally || this.lockedExternally) {\n\t\t\tthis._lockedInternally = false\n\t\t\treturn\n\t\t}\n\n\t\tconst diff = this.pointer + 1 - this.stack.length\n\n\t\tif (diff < 0) {\n\t\t\tthis.stack = this.stack.slice(0, diff)\n\t\t}\n\n\t\tthis.pointer++\n\t\tthis.stack.push(commit)\n\n\t\tif (this.stack.length > this.maxHistory) {\n\t\t\tthis.stack.shift()\n\t\t\tthis.pointer--\n\t\t}\n\t}\n\n\tundo = () => {\n\t\tif (this.pointer === -1) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._lockedInternally = true\n\n\t\tconst commit = this.stack[this.pointer]\n\n\t\tif (commit.setter) {\n\t\t\tcommit.setter(commit.from)\n\t\t} else {\n\t\t\tcommit.target.set(commit.from)\n\t\t}\n\n\t\tthis.pointer--\n\t}\n\n\tredo = () => {\n\t\tif (this.pointer + 1 > this.stack.length - 1) {\n\t\t\treturn\n\t\t}\n\n\t\tthis._lockedInternally = true\n\n\t\tconst commit = this.stack[this.pointer + 1]\n\n\t\tif (commit.setter) {\n\t\t\tcommit.setter(commit.to)\n\t\t} else {\n\t\t\tcommit.target.set(commit.to)\n\t\t}\n\n\t\tthis.pointer++\n\t}\n\n\tclear() {\n\t\tthis.stack = []\n\t\tthis.pointer = -1\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;AAQG;MAcU,WAAW,CAAA;IACvB,OAAO,GAAG,CAAC,CAAC,CAAA;IACZ,UAAU,GAAG,EAAE,CAAA;IACf,KAAK,GAAa,EAAE,CAAA;AAEpB;;AAEG;IACH,gBAAgB,GAAG,KAAK,CAAA;AAExB;;AAEG;IACK,iBAAiB,GAAG,KAAK,CAAA;AAEjC,IAAA,WAAA,GAAA,GAAgB;AAEhB,IAAA,MAAM,CAAI,MAAiB,EAAE,SAAS,GAAG,GAAG,EAAA;QAC3C,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACpD,YAAA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAA;YAC9B,OAAM;SACN;AAED,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAA;AAEjD,QAAA,IAAI,IAAI,GAAG,CAAC,EAAE;AACb,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;SACtC;QAED,IAAI,CAAC,OAAO,EAAE,CAAA;AACd,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAEvB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;AACxC,YAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;YAClB,IAAI,CAAC,OAAO,EAAE,CAAA;SACd;KACD;IAED,IAAI,GAAG,MAAK;AACX,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC,EAAE;YACxB,OAAM;SACN;AAED,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAEvC,QAAA,IAAI,MAAM,CAAC,MAAM,EAAE;AAClB,YAAA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC1B;aAAM;YACN,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC9B;QAED,IAAI,CAAC,OAAO,EAAE,CAAA;AACf,KAAC,CAAA;IAED,IAAI,GAAG,MAAK;AACX,QAAA,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7C,OAAM;SACN;AAED,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;AAE7B,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAA;AAE3C,QAAA,IAAI,MAAM,CAAC,MAAM,EAAE;AAClB,YAAA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;SACxB;aAAM;YACN,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;SAC5B;QAED,IAAI,CAAC,OAAO,EAAE,CAAA;AACf,KAAC,CAAA;IAED,KAAK,GAAA;AACJ,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;AACf,QAAA,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAA;KACjB;AACD;;;;"}