{
  "type": "ts",
  "fileName": "partition.ts",
  "filePath": "src/shared/partition.ts",
  "exports": [
    {
      "name": "partition",
      "type": "typeof partition",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Partitions an array into two arrays based on a predicate. The second argument is a callback that takes an element from the array and returns a boolean. - If it returns true, the element will be placed in the first array. - If it returns false, the element will be placed in the second array.\n *\n * @example\n * ```ts\n * const [even, odd] = partition([1, 2, 3, 4, 5], (n) => n % 2 === 0)\n *\n * console.log(even) // [2, 4]\n * console.log(odd) // [1, 3, 5]\n * ```\n *\n */",
        "summary": "<p>Partitions an array into two arrays based on a predicate. The second argument\nis a callback that takes an element from the array and returns a boolean.</p>\n<ul>\n<li>If it returns true, the element will be placed in the first array.</li>\n<li>If it returns false, the element will be placed in the second array.</li>\n</ul>\n",
        "examples": [
          {
            "content": "```ts\nconst [even, odd] = partition([1, 2, 3, 4, 5], (n) => n % 2 === 0)\n\nconsole.log(even) // [2, 4]\nconsole.log(odd) // [1, 3, 5]\n```",
            "blocks": [
              {
                "type": "code",
                "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#5BA2D0\">const</span><span style=\"color:#8D8F9E\"> [</span><span style=\"color:#DEE0EF\">even</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#DEE0EF\"> odd</span><span style=\"color:#8D8F9E\">]</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#F8D2C9\"> partition</span><span style=\"color:#DEE0EF\">([</span><span style=\"color:#F8D2C9\">1</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#F8D2C9\"> 2</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#F8D2C9\"> 3</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#F8D2C9\"> 4</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#F8D2C9\"> 5</span><span style=\"color:#DEE0EF\">]</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#8D8F9E\"> (</span><span style=\"color:#9CCFD8\">n</span><span style=\"color:#8D8F9E\">)</span><span style=\"color:#5BA2D0\"> =></span><span style=\"color:#DEE0EF\"> n</span><span style=\"color:#5BA2D0\"> %</span><span style=\"color:#F8D2C9\"> 2</span><span style=\"color:#5BA2D0\"> ===</span><span style=\"color:#F8D2C9\"> 0</span><span style=\"color:#DEE0EF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#DEE0EF\">console</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#F8D2C9\">log</span><span style=\"color:#DEE0EF\">(even)</span><span style=\"color:#8D8F9E;font-style:italic\"> //</span><span style=\"color:#6B6D7C;font-style:italic\"> [2, 4]</span></span>\n<span class=\"line\"><span style=\"color:#DEE0EF\">console</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#F8D2C9\">log</span><span style=\"color:#DEE0EF\">(odd)</span><span style=\"color:#8D8F9E;font-style:italic\"> //</span><span style=\"color:#6B6D7C;font-style:italic\"> [1, 3, 5]</span></span></code></pre>",
                "lang": "ts",
                "raw": "const [even, odd] = partition([1, 2, 3, 4, 5], (n) => n % 2 === 0)\n\nconsole.log(even) // [2, 4]\nconsole.log(odd) // [1, 3, 5]",
                "title": ""
              }
            ]
          }
        ]
      }
    }
  ]
}