{
  "type": "ts",
  "fileName": "resizable.ts",
  "filePath": "src/shared/resizable.ts",
  "exports": [
    {
      "name": "isResizableOptions",
      "type": "typeof isResizableOptions",
      "isDefaultExport": false
    },
    {
      "name": "VirtualRect",
      "type": "VirtualRect",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Represents a dom element's bounding rectangle.\n */",
        "summary": "<p>Represents a dom element&#39;s bounding rectangle.</p>\n"
      }
    },
    {
      "name": "Side",
      "type": "Side",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * The sides of an element that can be resized by the {@link resizable} action.\n */",
        "links": [
          {
            "target": "resizable",
            "text": "resizable"
          }
        ],
        "summary": "<p>The sides of an element that can be resized by the <a href=\"#resizable\">resizable</a> action.</p>\n"
      }
    },
    {
      "name": "Corner",
      "type": "Corner",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * The corners of an element that can be resized by the {@link resizable} action.\n *\n * @see\n *\n * {@link Side}\n */",
        "links": [
          {
            "target": "resizable",
            "text": "resizable"
          },
          {
            "target": "Side",
            "text": "Side"
          }
        ],
        "summary": "<p>The corners of an element that can be resized by the <a href=\"#resizable\">resizable</a> action.</p>\n",
        "seeBlocks": [
          "{@linkSide}"
        ]
      }
    },
    {
      "name": "ResizableOptions",
      "type": "ResizableOptions",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Options for the {@link resizable} action.\n */",
        "links": [
          {
            "target": "resizable",
            "text": "resizable"
          }
        ],
        "summary": "<p>Options for the <a href=\"#resizable\">resizable</a> action.</p>\n"
      }
    },
    {
      "name": "RESIZABLE_DEFAULTS",
      "type": "ResizableOptions",
      "isDefaultExport": false
    },
    {
      "name": "Resizable",
      "type": "Resizable",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Makes an element resizable by dragging its edges. For the svelte-action version, see {@link resizable}.\n *\n * @param node - The element to make resizable.\n *\n * @param options - {@link ResizableOptions}\n *\n * @example\n *\n * Basic\n * ```ts\n * import { Resizable } from 'fractils'\n *\n * const node = document.createElement('div')\n * new Resizable(node)\n * ```\n *\n * @example\n *\n * Advanced\n * ```ts\n * import { Resizable } from 'fractils'\n *\n * const node = document.createElement('div')\n * new Resizable(node, {\n * \tsides: ['left', 'bottom'],\n * \tgrabberSize: 3,\n * \tonResize: () => console.log('resized'),\n * \tlocalStorageKey: 'resizableL::size',\n * \tvisible: false,\n * \tcolor: 'var(--fg-d)',\n * \tborderRadius: '0.5rem',\n * })\n * ```\n *\n */",
        "links": [
          {
            "target": "resizable",
            "text": "resizable"
          },
          {
            "target": "ResizableOptions",
            "text": "ResizableOptions"
          }
        ],
        "summary": "<p>Makes an element resizable by dragging its edges. For the\nsvelte-action version, see <a href=\"#resizable\">resizable</a>.</p>\n",
        "params": [
          {
            "name": "node",
            "description": "The element to make resizable."
          },
          {
            "name": "options",
            "description": "{@linkResizableOptions}"
          }
        ],
        "examples": [
          {
            "name": "Basic",
            "content": "\n```ts\nimport { Resizable } from 'fractils'\n\nconst node = document.createElement('div')\nnew Resizable(node)\n```",
            "blocks": [
              {
                "type": "code",
                "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#5BA2D0\">import </span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\"> Resizable</span><span style=\"color:#8D8F9E\"> }</span><span style=\"color:#5BA2D0\"> from </span><span style=\"color:#A78BFA\">'fractils'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">const</span><span style=\"color:#DEE0EF\"> node</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#DEE0EF\"> document</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#F8D2C9\">createElement</span><span style=\"color:#DEE0EF\">(</span><span style=\"color:#A78BFA\">'div'</span><span style=\"color:#DEE0EF\">)</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">new</span><span style=\"color:#F8D2C9\"> Resizable</span><span style=\"color:#DEE0EF\">(node)</span></span></code></pre>",
                "lang": "ts",
                "raw": "import { Resizable } from 'fractils'\n\nconst node = document.createElement('div')\nnew Resizable(node)",
                "title": ""
              }
            ]
          },
          {
            "name": "Advanced",
            "content": "\n```ts\nimport { Resizable } from 'fractils'\n\nconst node = document.createElement('div')\nnew Resizable(node, {\n\tsides: ['left', 'bottom'],\n\tgrabberSize: 3,\n\tonResize: () => console.log('resized'),\n\tlocalStorageKey: 'resizableL::size',\n\tvisible: false,\n\tcolor: 'var(--fg-d)',\n\tborderRadius: '0.5rem',\n})\n```",
            "blocks": [
              {
                "type": "code",
                "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#5BA2D0\">import </span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\"> Resizable</span><span style=\"color:#8D8F9E\"> }</span><span style=\"color:#5BA2D0\"> from </span><span style=\"color:#A78BFA\">'fractils'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">const</span><span style=\"color:#DEE0EF\"> node</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#DEE0EF\"> document</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#F8D2C9\">createElement</span><span style=\"color:#DEE0EF\">(</span><span style=\"color:#A78BFA\">'div'</span><span style=\"color:#DEE0EF\">)</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">new</span><span style=\"color:#F8D2C9\"> Resizable</span><span style=\"color:#DEE0EF\">(node</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#8D8F9E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">    sides</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#DEE0EF\"> [</span><span style=\"color:#A78BFA\">'left'</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#A78BFA\"> 'bottom'</span><span style=\"color:#DEE0EF\">]</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">    grabberSize</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#F8D2C9\"> 3</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#F8D2C9\">    onResize</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#8D8F9E\"> ()</span><span style=\"color:#5BA2D0\"> =></span><span style=\"color:#DEE0EF\"> console</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#F8D2C9\">log</span><span style=\"color:#DEE0EF\">(</span><span style=\"color:#A78BFA\">'resized'</span><span style=\"color:#DEE0EF\">)</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">    localStorageKey</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#A78BFA\"> 'resizableL::size'</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">    visible</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#F8D2C9\"> false</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">    color</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#A78BFA\"> 'var(--fg-d)'</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">    borderRadius</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#A78BFA\"> '0.5rem'</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#8D8F9E\">}</span><span style=\"color:#DEE0EF\">)</span></span></code></pre>",
                "lang": "ts",
                "raw": "import { Resizable } from 'fractils'\n\nconst node = document.createElement('div')\nnew Resizable(node, {\n    sides: ['left', 'bottom'],\n    grabberSize: 3,\n    onResize: () => console.log('resized'),\n    localStorageKey: 'resizableL::size',\n    visible: false,\n    color: 'var(--fg-d)',\n    borderRadius: '0.5rem',\n})",
                "title": ""
              }
            ]
          }
        ]
      }
    }
  ]
}